{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x663Ce382C4d169cEA8b1eFf7aDAa973560054937"
  },
  "proxies": [
    {
      "address": "0xeF0f89baC623eD7C875bC2F23b5403DcF90ba8Bd",
      "kind": "transparent"
    },
    {
      "address": "0x8199DC6d35275f998aA459b29d642577818E9D3e",
      "kind": "transparent"
    },
    {
      "address": "0xbCEa235C9ce3A9b61E3186Cc3bBC78C601F4c5c1",
      "kind": "transparent"
    },
    {
      "address": "0xb129444B90fC2646f5F3b514c5Cd3FaFd43f071a",
      "kind": "transparent"
    },
    {
      "address": "0xD3D79A066F2cD471841C047D372F218252Dbf8Ed",
      "kind": "transparent"
    },
    {
      "address": "0x1727ADd0680412e839c500ccE4a2A20e3d96fF5C",
      "kind": "transparent"
    },
    {
      "address": "0x76888a882a4fF57455B5e74B791DD19DF3ba51Bb",
      "kind": "transparent"
    },
    {
      "address": "0xd50CD9b9184b9D7D5E4B60A6E13a96F9B1D7f4D2",
      "kind": "transparent"
    },
    {
      "address": "0x0f7eF712158C6D3f748d237D08Dd6D1Ce5486DfA",
      "kind": "transparent"
    }
  ],
  "impls": {
    "30a843aafa8b7fcbc9e8393b5a86f3baa438d5c9b61fc0aac5ddc66fa2a3ad0c": {
      "address": "0x9d21A6fe20E06A7507AF0D0BEE90F88f6Ed5A79F",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_registry",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(ASRecord)23613_storage)",
            "contract": "TellerASRegistry",
            "src": "contracts/EAS/TellerASRegistry.sol:17"
          },
          {
            "label": "_asCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "TellerASRegistry",
            "src": "contracts/EAS/TellerASRegistry.sol:20"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IASResolver)23680": {
            "label": "contract IASResolver",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(ASRecord)23613_storage)": {
            "label": "mapping(bytes32 => struct IASRegistry.ASRecord)",
            "numberOfBytes": "32"
          },
          "t_struct(ASRecord)23613_storage": {
            "label": "struct IASRegistry.ASRecord",
            "members": [
              {
                "label": "uuid",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resolver",
                "type": "t_contract(IASResolver)23680",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "schema",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a02cf2cd8fa3f4efea9afe548a753a3435a5c133c12a7532a7ed5777432b4d10": {
      "address": "0x021633f2dfe8A20985048eEC272FBec9088bF1B7",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TellerASEIP712Verifier",
            "src": "contracts/EAS/TellerASEIP712Verifier.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4378069f30eccc02ca4ce0e25418f1ab3121cf49373f588409dbfa11dfe3b2b1": {
      "address": "0xf98F89d99A2b94335B7C96a0D7c0EFE3aa3AE4C7",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_relatedAttestations",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
            "contract": "TellerAS",
            "src": "contracts/EAS/TellerAS.sol:35"
          },
          {
            "label": "_receivedAttestations",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage))",
            "contract": "TellerAS",
            "src": "contracts/EAS/TellerAS.sol:38"
          },
          {
            "label": "_sentAttestations",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage))",
            "contract": "TellerAS",
            "src": "contracts/EAS/TellerAS.sol:42"
          },
          {
            "label": "_schemaAttestations",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
            "contract": "TellerAS",
            "src": "contracts/EAS/TellerAS.sol:45"
          },
          {
            "label": "_db",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(Attestation)10644_storage)",
            "contract": "TellerAS",
            "src": "contracts/EAS/TellerAS.sol:48"
          },
          {
            "label": "_attestationsCount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "TellerAS",
            "src": "contracts/EAS/TellerAS.sol:51"
          },
          {
            "label": "_lastUUID",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32",
            "contract": "TellerAS",
            "src": "contracts/EAS/TellerAS.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => bytes32[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Attestation)10644_storage)": {
            "label": "mapping(bytes32 => struct IEAS.Attestation)",
            "numberOfBytes": "32"
          },
          "t_struct(Attestation)10644_storage": {
            "label": "struct IEAS.Attestation",
            "members": [
              {
                "label": "uuid",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "schema",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "attester",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expirationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "revocationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "refUUID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a9758de18985e5e277a885750b0a3e646bd88247312f1ef81dcbd400019a2710": {
      "address": "0xf2C50eD6F95C892b640CbAACd72b4BF6F10A05e0",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "lenderAttestationSchemaId",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:51"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Marketplace)17325_storage)",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:53"
          },
          {
            "label": "__uriToId",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:54"
          },
          {
            "label": "marketCount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:55"
          },
          {
            "label": "_attestingSchemaId",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:56"
          },
          {
            "label": "borrowerAttestationSchemaId",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:57"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:59"
          },
          {
            "label": "marketIsClosed",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:61"
          },
          {
            "label": "tellerAS",
            "offset": 0,
            "slot": "9",
            "type": "t_contract(TellerAS)15062",
            "contract": "MarketRegistry",
            "src": "contracts/MarketRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(TellerAS)15062": {
            "label": "contract TellerAS",
            "numberOfBytes": "20"
          },
          "t_enum(PaymentCycleType)26748": {
            "label": "enum PaymentCycleType",
            "members": [
              "Seconds",
              "Monthly"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PaymentType)26745": {
            "label": "enum PaymentType",
            "members": [
              "EMI",
              "Bullet"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Marketplace)17325_storage)": {
            "label": "mapping(uint256 => struct MarketRegistry.Marketplace)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)12722_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)12407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Marketplace)17325_storage": {
            "label": "struct MarketRegistry.Marketplace",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadataURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "marketplaceFeePercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "verifiedLendersForMarket",
                "type": "t_struct(AddressSet)12722_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32",
                "offset": 4,
                "slot": "6"
              },
              {
                "label": "bidExpirationTime",
                "type": "t_uint32",
                "offset": 8,
                "slot": "6"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool",
                "offset": 12,
                "slot": "6"
              },
              {
                "label": "verifiedBorrowersForMarket",
                "type": "t_struct(AddressSet)12722_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "paymentType",
                "type": "t_enum(PaymentType)26745",
                "offset": 20,
                "slot": "10"
              },
              {
                "label": "paymentCycleType",
                "type": "t_enum(PaymentCycleType)26748",
                "offset": 21,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Set)12407_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f12c95b62ef47c0b0c1bbffcf500725c472fe96bfce9708c1baee67c17c1c499": {
      "address": "0xf2086e3F92C1FE9037bD74E9491831683FC57441",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "032c39add4d0355222025ad6d0b242e0fa061dbd76a18f52856a1551a3cadfac": {
      "address": "0x8a335f888aF37354AEb04df0002e85Ae94D29C55",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MinimalForwarderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/metatx/MinimalForwarderUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "MinimalForwarderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/metatx/MinimalForwarderUpgradeable.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "870e02eff43ebc9ae33b8e6f3a3b7b1816f4cb20bde31ddfaf45084a2d5840ae": {
      "address": "0x72733102AB139FB0367cc29D492c955A7c736079",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "tellerV2",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(ITellerV2)19072",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:17"
          },
          {
            "label": "_delinquencies",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(UintSet)10326_storage)",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:18"
          },
          {
            "label": "_defaults",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(UintSet)10326_storage)",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:19"
          },
          {
            "label": "_currentDelinquencies",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(UintSet)10326_storage)",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:20"
          },
          {
            "label": "_currentDefaults",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(UintSet)10326_storage)",
            "contract": "ReputationManager",
            "src": "contracts/ReputationManager.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ITellerV2)19072": {
            "label": "contract ITellerV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UintSet)10326_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)9854_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)10326_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9854_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c874cfc6f13c0a8f155c40bcc98019313e3c367ca470c99eaa6667e4dc3274a2": {
      "address": "0x86D540Ca6de284c18BeED0F6f154499CF9b61322",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_protocolFee",
            "offset": 0,
            "slot": "101",
            "type": "t_uint16",
            "contract": "ProtocolFee",
            "src": "contracts/ProtocolFee.sol:8"
          },
          {
            "label": "_paused",
            "offset": 2,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "bidId",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:90"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(Bid)17979_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:93"
          },
          {
            "label": "borrowerBids",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:96"
          },
          {
            "label": "__lenderVolumeFilled",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:99"
          },
          {
            "label": "__totalVolumeFilled",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:102"
          },
          {
            "label": "__lendingTokensSet",
            "offset": 0,
            "slot": "156",
            "type": "t_struct(AddressSet)10169_storage",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:105"
          },
          {
            "label": "marketRegistry",
            "offset": 0,
            "slot": "158",
            "type": "t_contract(IMarketRegistry)18829",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:107"
          },
          {
            "label": "reputationManager",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(IReputationManager)18888",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:108"
          },
          {
            "label": "_borrowerBidsActive",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_struct(UintSet)10326_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:111"
          },
          {
            "label": "bidDefaultDuration",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:113"
          },
          {
            "label": "bidExpirationTime",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:114"
          },
          {
            "label": "lenderVolumeFilled",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:118"
          },
          {
            "label": "totalVolumeFilled",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:122"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:124"
          },
          {
            "label": "uris",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "TellerV2Storage_G0",
            "src": "contracts/TellerV2Storage.sol:128"
          },
          {
            "label": "_trustedMarketForwarders",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TellerV2Storage_G1",
            "src": "contracts/TellerV2Storage.sol:133"
          },
          {
            "label": "_approvedForwarderSenders",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(AddressSet)10169_storage)",
            "contract": "TellerV2Storage_G1",
            "src": "contracts/TellerV2Storage.sol:135"
          },
          {
            "label": "lenderCommitmentForwarder",
            "offset": 0,
            "slot": "169",
            "type": "t_address",
            "contract": "TellerV2Storage_G2",
            "src": "contracts/TellerV2Storage.sol:140"
          },
          {
            "label": "collateralManager",
            "offset": 0,
            "slot": "170",
            "type": "t_contract(ICollateralManager)18282",
            "contract": "TellerV2Storage_G3",
            "src": "contracts/TellerV2Storage.sol:144"
          },
          {
            "label": "lenderManager",
            "offset": 0,
            "slot": "171",
            "type": "t_contract(ILenderManager)18596",
            "contract": "TellerV2Storage_G4",
            "src": "contracts/TellerV2Storage.sol:149"
          },
          {
            "label": "bidPaymentCycleType",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_enum(PaymentCycleType)20900)",
            "contract": "TellerV2Storage_G4",
            "src": "contracts/TellerV2Storage.sol:151"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20)5865": {
            "label": "contract ERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ICollateralManager)18282": {
            "label": "contract ICollateralManager",
            "numberOfBytes": "20"
          },
          "t_contract(ILenderManager)18596": {
            "label": "contract ILenderManager",
            "numberOfBytes": "20"
          },
          "t_contract(IMarketRegistry)18829": {
            "label": "contract IMarketRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IReputationManager)18888": {
            "label": "contract IReputationManager",
            "numberOfBytes": "20"
          },
          "t_enum(BidState)17951": {
            "label": "enum BidState",
            "members": [
              "NONEXISTENT",
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID",
              "LIQUIDATED"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PaymentCycleType)20900": {
            "label": "enum PaymentCycleType",
            "members": [
              "Seconds",
              "Monthly"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PaymentType)20897": {
            "label": "enum PaymentType",
            "members": [
              "EMI",
              "Bullet"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)10169_storage)": {
            "label": "mapping(address => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)10326_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(PaymentCycleType)20900)": {
            "label": "mapping(uint256 => enum PaymentCycleType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Bid)17979_storage)": {
            "label": "mapping(uint256 => struct Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)10169_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9854_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bid)17979_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lender",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "marketplaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_metadataURI",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)17996_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)18003_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "state",
                "type": "t_enum(BidState)17951",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "paymentType",
                "type": "t_enum(PaymentType)20897",
                "offset": 1,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(LoanDetails)17996_storage": {
            "label": "struct LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)5865",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)17956_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32",
                "offset": 4,
                "slot": "4"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32",
                "offset": 8,
                "slot": "4"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32",
                "offset": 12,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Payment)17956_storage": {
            "label": "struct Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interest",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)9854_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Terms)18003_storage": {
            "label": "struct Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "APR",
                "type": "t_uint16",
                "offset": 4,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)10326_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9854_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8833d5d0a433fd5fb0385b1719ae7120d91221181557e527c18509f1cdaa2fc2": {
      "address": "0x00212A2deF4015CFA5F0c882829CD5Fafc70f3fd",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "TellerV2MarketForwarder",
            "src": "contracts/TellerV2MarketForwarder.sol:152"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(Commitment)12643_storage)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:57"
          },
          {
            "label": "commitmentCount",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:59"
          },
          {
            "label": "commitmentBorrowersList",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)3531_storage)",
            "contract": "LenderCommitmentForwarder",
            "src": "contracts/LenderCommitmentForwarder.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(CommitmentCollateralType)12619": {
            "label": "enum LenderCommitmentForwarder.CommitmentCollateralType",
            "members": [
              "NONE",
              "ERC20",
              "ERC721",
              "ERC1155",
              "ERC721_ANY_ID",
              "ERC1155_ANY_ID"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)3531_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Commitment)12643_storage)": {
            "label": "mapping(uint256 => struct LenderCommitmentForwarder.Commitment)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3531_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3216_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Commitment)12643_storage": {
            "label": "struct LenderCommitmentForwarder.Commitment",
            "members": [
              {
                "label": "maxPrincipal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expiration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxDuration",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "minInterestRate",
                "type": "t_uint16",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "collateralTokenAddress",
                "type": "t_address",
                "offset": 10,
                "slot": "1"
              },
              {
                "label": "collateralTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPrincipalPerCollateralAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collateralTokenType",
                "type": "t_enum(CommitmentCollateralType)12619",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lender",
                "type": "t_address",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "marketId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "principalTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)3216_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9c4b746102ec6d78a17cfcceab7b084a29f4804ab40af5a7877b685147eedc2f": {
      "address": "0xbC9a4E3377eeBB22d45208d6AA14E6A2c777Ef75",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:21"
          },
          {
            "label": "_implementation",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          }
        }
      }
    },
    "7c31d36bf42b08f3fdee64dc8cbf38ef1b7452267b3a732e5b77ba15eb34cbec": {
      "address": "0xbDF19f0cbe53BCaC880C214411bC183d1cD8A9F8",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tellerV2",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ITellerV2)11410",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:23"
          },
          {
            "label": "collateralEscrowBeacon",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:24"
          },
          {
            "label": "_escrows",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:27"
          },
          {
            "label": "_bidCollaterals",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_struct(CollateralInfo)7410_storage)",
            "contract": "CollateralManager",
            "src": "contracts/CollateralManager.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ITellerV2)11410": {
            "label": "contract ITellerV2",
            "numberOfBytes": "20"
          },
          "t_enum(CollateralType)11416": {
            "label": "enum CollateralType",
            "members": [
              "ERC20",
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Collateral)11426_storage)": {
            "label": "mapping(address => struct Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollateralInfo)7410_storage)": {
            "label": "mapping(uint256 => struct CollateralManager.CollateralInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2188_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1873_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Collateral)11426_storage": {
            "label": "struct Collateral",
            "members": [
              {
                "label": "_collateralType",
                "type": "t_enum(CollateralType)11416",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_collateralAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(CollateralInfo)7410_storage": {
            "label": "struct CollateralManager.CollateralInfo",
            "members": [
              {
                "label": "collateralAddresses",
                "type": "t_struct(AddressSet)2188_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralInfo",
                "type": "t_mapping(t_address,t_struct(Collateral)11426_storage)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)1873_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4e647fb9bc063d2c5275dfc315e1837b206b405201213ef131027dace3ffd006": {
      "address": "0xe6774DAAEdf6e95b222CD3dE09456ec0a46672C4",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "allocationCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MarketLiquidityRewards",
            "src": "contracts/MarketLiquidityRewards.sol:31"
          },
          {
            "label": "allocatedRewards",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(RewardAllocation)10960_storage)",
            "contract": "MarketLiquidityRewards",
            "src": "contracts/MarketLiquidityRewards.sol:34"
          },
          {
            "label": "rewardClaimedForBid",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "MarketLiquidityRewards",
            "src": "contracts/MarketLiquidityRewards.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(AllocationStrategy)10963": {
            "label": "enum IMarketLiquidityRewards.AllocationStrategy",
            "members": [
              "BORROWER",
              "LENDER"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RewardAllocation)10960_storage)": {
            "label": "mapping(uint256 => struct IMarketLiquidityRewards.RewardAllocation)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardAllocation)10960_storage": {
            "label": "struct IMarketLiquidityRewards.RewardAllocation",
            "members": [
              {
                "label": "allocator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardTokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "marketId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requiredPrincipalTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requiredCollateralTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minimumCollateralPerPrincipalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rewardPerLoanPrincipalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bidStartTimeMin",
                "type": "t_uint32",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "bidStartTimeMax",
                "type": "t_uint32",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "allocationStrategy",
                "type": "t_enum(AllocationStrategy)10963",
                "offset": 8,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d8d73a8623d773659c50bba5e352f9084d80ac3cf707ba2ce634fb439e368eb3": {
      "address": "0x7FcB049AC3b53eE9dF0fE34547970aAB0dF98DC5",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_balances",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Counter)8824_storage)",
            "contract": "ERC20Permit",
            "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:25"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32",
            "contract": "ERC20Permit",
            "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:37",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20Votes",
            "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:36"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)7135_storage)dyn_storage)",
            "contract": "ERC20Votes",
            "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:37"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_struct(Checkpoint)7135_storage)dyn_storage",
            "contract": "ERC20Votes",
            "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)7135_storage)dyn_storage": {
            "label": "struct ERC20Votes.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)7135_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20Votes.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)8824_storage)": {
            "label": "mapping(address => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)7135_storage": {
            "label": "struct ERC20Votes.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)8824_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "e41c7bd635273cd11569e9c973dc51796532ee06260c732f865e1a323042d95f": {
      "address": "0xB9ce7CDa16236f76c42EE4275E05A263704D2a4e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "loanAutoPayEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "TellerV2Autopay",
            "src": "contracts/TellerV2Autopay.sol:26"
          },
          {
            "label": "_autopayFee",
            "offset": 0,
            "slot": "102",
            "type": "t_uint16",
            "contract": "TellerV2Autopay",
            "src": "contracts/TellerV2Autopay.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
