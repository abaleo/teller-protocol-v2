{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "required",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "InsufficientBorrowerCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "allocated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        }
      ],
      "name": "InsufficientCommitmentAllocation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "commitmentId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marketId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lendingToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "CreatedCommitment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "commitmentId",
          "type": "uint256"
        }
      ],
      "name": "DeletedCommitment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "commitmentId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        }
      ],
      "name": "ExercisedCommitment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "commitmentId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marketId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lendingToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdatedCommitment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "commitmentId",
          "type": "uint256"
        }
      ],
      "name": "UpdatedCommitmentBorrowers",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_marketRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_tellerV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_commitmentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_principalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateralTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_interestRate",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "_loanDuration",
          "type": "uint32"
        }
      ],
      "name": "acceptCommitment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maxPrincipal",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "expiration",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "maxDuration",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "minInterestRate",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPrincipalPerCollateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "enum LenderCommitmentForwarder.CommitmentCollateralType",
          "name": "collateralTokenType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "marketId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "principalTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "maxPrincipal",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "expiration",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxDuration",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "minInterestRate",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrincipalPerCollateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum LenderCommitmentForwarder.CommitmentCollateralType",
              "name": "collateralTokenType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "marketId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "principalTokenAddress",
              "type": "address"
            }
          ],
          "internalType": "struct LenderCommitmentForwarder.Commitment",
          "name": "_commitment",
          "type": "tuple"
        },
        {
          "internalType": "address[]",
          "name": "_borrowerAddressList",
          "type": "address[]"
        }
      ],
      "name": "createCommitment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "commitmentId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createCommitment_test",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decrementCommitment_before",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decrementCommitment_test",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_commitmentId",
          "type": "uint256"
        }
      ],
      "name": "deleteCommitment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_commitmentId",
          "type": "uint256"
        }
      ],
      "name": "getCommitmentBorrowers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "borrowers_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMarketRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_principalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxPrincipalPerCollateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "enum LenderCommitmentForwarder.CommitmentCollateralType",
          "name": "_collateralTokenType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_principalTokenAddress",
          "type": "address"
        }
      ],
      "name": "getRequiredCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTellerV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getTellerV2MarketOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_acceptCommitment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_acceptCommitmentFailsWithInsufficientCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_acceptCommitmentFailsWithInvalidAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_acceptCommitmentWithBorrowersArray_invalid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_acceptCommitmentWithBorrowersArray_reset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_acceptCommitmentWithBorrowersArray_valid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_deleteCommitment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_1000_USDC_loan_9_gwei_per_usdc_unit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_1_GWEI_loan__00059_WETH_per_USDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_1_WEI_loan__00059_WETH_per_USDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_1_WETH_loan__00059_per_USDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC_unit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_500_USDC_loan__500_per_ERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_6_GWEI_loan__00059_WETH_per_USDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_700_USDC__500_per_WETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_700_USDC_loan__500_per_ERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_8888_USDC_loan__9_gwei_per_usdc_unit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRequiredCollateral_8888_USDC_loan__unit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateCommitment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_commitmentId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "maxPrincipal",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "expiration",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxDuration",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "minInterestRate",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrincipalPerCollateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum LenderCommitmentForwarder.CommitmentCollateralType",
              "name": "collateralTokenType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "marketId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "principalTokenAddress",
              "type": "address"
            }
          ],
          "internalType": "struct LenderCommitmentForwarder.Commitment",
          "name": "_commitment",
          "type": "tuple"
        }
      ],
      "name": "updateCommitment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_commitmentId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_borrowerAddressList",
          "type": "address[]"
        }
      ],
      "name": "updateCommitmentBorrowers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60c06040526000805460ff191660011790553480156200001e57600080fd5b506040516200002d90620000a1565b604051809103906000f0801580156200004a573d6000803e3d6000fd5b5060006040516200005b90620000af565b6001600160a01b039091168152602001604051809103906000f08015801562000088573d6000803e3d6000fd5b506001600160a01b039182166080521660a052620000bd565b611610806200707383390190565b6106fd806200868383390190565b60805160a051616f6d620001066000396000818161067f015281816107b7015281816108bf01526116f70152600081816107140152818161074d01526108870152616f6d6000f3fe608060405260043610620002635760003560e01c806393afc31a1162000147578063c66b8ed211620000b9578063dc003d5a1162000078578063dc003d5a1462000704578063eafef46e1462000739578063f8739315146200076f578063fa7626d41462000787578063fd7b2d9114620007a357600080fd5b8063c66b8ed2146200066f578063cccfc69c14620006a4578063d484068014620006bc578063d833c1bd14620006d4578063d8fd11ca14620006ec57600080fd5b8063ba414fa61162000106578063ba414fa614620005cc578063bb68c61214620005f5578063bca67dc3146200060d578063bfb40bc01462000625578063c1abfa11146200064a57600080fd5b806393afc31a146200055f57806397dc6201146200056c578063994f817414620005845780639df2794a146200059c578063aa95bcbd14620005b457600080fd5b80633ea6462711620001e15780635ec77a8111620001a05780635ec77a8114620004b1578063626722f414620004d65780636e7b3afe14620004ee5780637479208b14620005065780637d458e7b146200052b57600080fd5b80633ea6462714620003815780634115e42b146200039957806349ce899714620003b1578063592113d014620004655780635c012803146200049957600080fd5b80631409a2e4116200022e5780631409a2e414620002d25780631723c24714620002f75780631a287b41146200030f5780631dcaa70d146200032757806335cf4680146200036957600080fd5b806308c31d3514620002705780630a9254e4146200028a5780630bc62bf314620002a257806313dcb08714620002ba57600080fd5b366200026b57005b600080fd5b3480156200027d57600080fd5b5062000288620007d9565b005b3480156200029757600080fd5b506200028862000879565b348015620002af57600080fd5b506200028862000d80565b348015620002c757600080fd5b5062000288620010ac565b348015620002df57600080fd5b5062000288620002f136600462003eba565b62001194565b3480156200030457600080fd5b50620002886200139f565b3480156200031c57600080fd5b50620002886200163e565b3480156200033457600080fd5b506200034c6200034636600462003eeb565b620016d6565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200037657600080fd5b50620002886200176b565b3480156200038e57600080fd5b506200028862001834565b348015620003a657600080fd5b5062000288620018d8565b348015620003be57600080fd5b506200044c620003d036600462003eeb565b6078602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949563ffffffff80861696600160201b87049091169561ffff600160401b820416956001600160a01b03600160501b9092048216959094909360ff8216936101009092048316929091168b565b604051620003609b9a9998979695949392919062003f3e565b3480156200047257600080fd5b506200048a6200048436600462003ff6565b620019bc565b60405190815260200162000360565b348015620004a657600080fd5b506200028862001e73565b348015620004be57600080fd5b5062000288620004d0366004620040be565b62001f12565b348015620004e357600080fd5b506200028862001fb5565b348015620004fb57600080fd5b50620002886200207a565b3480156200051357600080fd5b506200048a620005253660046200411c565b620020da565b3480156200053857600080fd5b50620005506200054a36600462003eeb565b62002225565b60405162000360919062004182565b3480156200028857600080fd5b3480156200057957600080fd5b506200028862002241565b3480156200059157600080fd5b5062000288620022df565b348015620005a957600080fd5b50620002886200237b565b348015620005c157600080fd5b506200028862002461565b348015620005d957600080fd5b50620005e4620025b8565b604051901515815260200162000360565b3480156200060257600080fd5b5062000288620026ed565b3480156200061a57600080fd5b5062000288620027b2565b3480156200063257600080fd5b50620002886200064436600462003eeb565b62002848565b3480156200065757600080fd5b506200048a62000669366004620041d1565b62002933565b3480156200067c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006200034c565b348015620006b157600080fd5b506200028862002a85565b348015620006c957600080fd5b506200028862002b4e565b348015620006e157600080fd5b506200028862002bc6565b348015620006f957600080fd5b506200028862002c64565b3480156200071157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006200034c565b3480156200074657600080fd5b506200034c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156200077c57600080fd5b506200028862002e20565b3480156200079457600080fd5b50600054620005e49060ff1681565b348015620007b057600080fd5b506200034c7f000000000000000000000000000000000000000000000000000000000000000081565b6000806006604051620007ec9062003de8565b620007f992919062004212565b604051809103906000f08015801562000816573d6000803e3d6000fd5b5090506200087662000854633b9aca006d1d16d8d16802617c51df80000000600185608560009054906101000a90046001600160a01b0316620020da565b600260405180606001604052806027815260200162006d5e6027913962002f32565b50565b607b80546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166001600160a01b03199283168117909355607c80547f0000000000000000000000000000000000000000000000000000000000000000909216919092161790556040513090620008f89062003df6565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200092c573d6000803e3d6000fd5b50607d80546001600160a01b0319166001600160a01b03928316179055607b5460405191169030906200095f9062003df6565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000993573d6000803e3d6000fd5b50607f80546001600160a01b0319166001600160a01b03928316179055607b546040519116903090620009c69062003df6565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620009fa573d6000803e3d6000fd5b50607e80546001600160a01b0319166001600160a01b03928316179055607b54607d5460405163f404df8f60e01b8152908316600482015291169063f404df8f90602401600060405180830381600087803b15801562000a5957600080fd5b505af115801562000a6e573d6000803e3d6000fd5b5050607c54607d54604051636cdaa42160e01b81526001600160a01b03918216600482015291169250636cdaa4219150602401600060405180830381600087803b15801562000abc57600080fd5b505af115801562000ad1573d6000803e3d6000fd5b50506002608055505068056bc75e2d631000006081556084805465ffffffffffff1916650bb80025d78017905562000b0c61fa004262004290565b6084805463ffffffff9290921666010000000000000269ffffffff00000000000019909216919091179055607d54608054604051630a10513360e11b815260048101919091523060248201526001600160a01b0390911690631420a26690604401600060405180830381600087803b15801562000b8857600080fd5b505af115801562000b9d573d6000803e3d6000fd5b5050607e54608054604051630ba4ccb560e21b815260048101919091523060248201526001600160a01b039091169250632e9332d49150604401600060405180830381600087803b15801562000bf257600080fd5b505af115801562000c07573d6000803e3d6000fd5b506001925062000c15915050565b60405190808252806020026020018201604052801562000c3f578160200160208202803683370190505b50805162000c569160839160209091019062003e04565b50607f54608380546001600160a01b039092169160009062000c7c5762000c7c620042b7565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000601260405162000cbc9062003de8565b62000cc9929190620042cd565b604051809103906000f08015801562000ce6573d6000803e3d6000fd5b50608560006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000600660405162000d1f9062003de8565b62000d2c92919062004212565b604051809103906000f08015801562000d49573d6000803e3d6000fd5b50608680546001600160a01b0319166001600160a01b03929092169190911790556084805462ffffff60501b191690556000607955565b60008062000d92600160815462002f6e565b905062000dca6084600a9054906101000a900460ff1660006040518060600160405280602c815260200162006e23602c913962003203565b607f546081546000916001600160a01b031690630d51d53c90859062000df39060649062004323565b6081546086546084546040516001600160e01b031960e088901b16815262000e43959493926000926001600160a01b039091169161ffff600160201b8304169163ffffffff169060040162004339565b6020604051808303816000875af115801562000e63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e8991906200437c565b905062000ec16084600a9054906101000a900460ff16600160405180606001604052806027815260200162006cc56027913962003203565b62000eef826000015460641460016040518060600160405280602c815260200162006eeb602c913962003203565b607f54608654608454604051630354754f60e21b81526001600160a01b0393841693630d51d53c9362000f45938993606493849360009391169161ffff600160201b8304169163ffffffff169060040162004339565b6020604051808303816000875af115801562000f65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f8b91906200437c565b905062000fd7826000015460001460016040518060400160405280601781526020017f636f6d6d69746d656e74206e6f7420616363657074656400000000000000000081525062003203565b607f54608654608454604051630354754f60e21b81526000936001600160a01b0390811693630d51d53c9362001031938a9360649384938a939290911691600160201b820461ffff169163ffffffff169060040162004339565b6020604051808303816000875af19250505080156200106f575060408051601f3d908101601f191682019092526200106c918101906200437c565b60015b6200107d575060016200107f565b505b620010a681600160405180606001604052806027815260200162006d176027913962003203565b50505050565b6000806006604051620010bf9062003de8565b620010cc92919062004212565b604051809103906000f080158015620010e9573d6000803e3d6000fd5b5090506000806012604051620010ff9062003de8565b6200110c929190620042cd565b604051809103906000f08015801562001129573d6000803e3d6000fd5b509050620011906200114b6329b927006601c6bf5263400060018587620020da565b67136dcc951d8c00006040518060400160405280601c81526020017f657870656374656420312e34205745544820636f6c6c61746572616c0000000081525062002f32565b5050565b60008281526078602052604090206004015482906001600160a01b03610100909104163314620011e15760405162461bcd60e51b8152600401620011d89062004396565b60405180910390fd5b6000838152607860205260409020600601546001600160a01b03166200121061016084016101408501620043cd565b6001600160a01b0316146200127b5760405162461bcd60e51b815260206004820152602a60248201527f5072696e636970616c20746f6b656e20616464726573732063616e6e6f74206260448201526932903ab83230ba32b21760b11b6064820152608401620011d8565b60008381526078602052604090206005015461012083013514620012e25760405162461bcd60e51b815260206004820152601c60248201527f4d61726b65742049642063616e6e6f7420626520757064617465642e000000006044820152606401620011d8565b60008381526078602052604090208290620012fe82826200445b565b50506000838152607860205260409020620013199062003243565b827f3639fd8e82fc21d99ff6df2a4a03995fa53f752fddd525d8a9aadccefa788aa06200134f61012085016101008601620043cd565b6101208501356200136961016087016101408801620043cd565b604080516001600160a01b03948516815260208101939093529216818301528535606082015290519081900360800190a2505050565b600080620013b1600160815462002f6e565b607e5460405163079a69e760e21b81529192506001600160a01b031690631e69a79c90620013e790859060839060040162004628565b600060405180830381600087803b1580156200140257600080fd5b505af115801562001417573d6000803e3d6000fd5b5050607d54608154608654608454604051630354754f60e21b8152600096506001600160a01b039485169550630d51d53c9462001479948a9460649491938a9390911691600160201b810461ffff169163ffffffff9091169060040162004339565b6020604051808303816000875af1925050508015620014b7575060408051601f3d908101601f19168201909252620014b4918101906200437c565b60015b620014c557506001620014c7565b505b620014ee8160016040518060600160405280602e815260200162006e4f602e913962003203565b607e5460405163079a69e760e21b81526001600160a01b0390911690631e69a79c906200152390869060829060040162004628565b600060405180830381600087803b1580156200153e57600080fd5b505af115801562001553573d6000803e3d6000fd5b50506084805460ff60501b19811691829055607d54608154608654604051630354754f60e21b81526001600160a01b039384169750630d51d53c9650620015bc958b9560009586941692600160201b90920461ffff169163ffffffff9091169060040162004339565b6020604051808303816000875af1158015620015dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200160291906200437c565b50620016396084600a9054906101000a900460ff16600160405180606001604052806027815260200162006cc56027913962003203565b505050565b6000806200165a60016b033b2e3c9fd0803ce800000062002f6e565b607e546040516310d18eff60e01b81529192506001600160a01b0316906310d18eff906200169090849060829060040162004706565b6020604051808303816000875af1158015620016b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200163991906200437c565b604051633d36902960e01b8152600481018290526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d36902990602401602060405180830381865afa1580156200173f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200176591906200472c565b92915050565b60008060066040516200177e9062003de8565b6200178b92919062004212565b604051809103906000f080158015620017a8573d6000803e3d6000fd5b5090506000806012604051620017be9062003de8565b620017cb9291906200474c565b604051809103906000f080158015620017e8573d6000803e3d6000fd5b509050620011906200180b640211c41e00661f9396c2c3800060018587620020da565b670de0b6b3a764000060405180606001604052806022815260200162006dc46022913962002f32565b6000806006604051620018479062003de8565b6200185492919062004212565b604051809103906000f08015801562001871573d6000803e3d6000fd5b50905062000876620018b3670de0b6b3a76400006d1d16d8d16802617c51df80000000600185608560009054906101000a90046001600160a01b0316620020da565b6365065ab760405180606001604052806025815260200162006ec66025913962002f32565b600080620018ec6001633b9aca0062002f6e565b607d54608654608454604051630354754f60e21b81529394506000936001600160a01b0393841693630d51d53c93620019479389936064938993849391169161ffff600160201b8304169163ffffffff169060040162004339565b6020604051808303816000875af192505050801562001985575060408051601f3d908101601f1916820190925262001982918101906200437c565b60015b620019935750600162001995565b505b620016398160016040518060600160405280603d815260200162006de6603d913962003203565b60008781526078602052604081203390620019d78162003243565b60018101546001600160a01b03878116600160501b909204161462001a3f5760405162461bcd60e51b815260206004820152601c60248201527f4d69736d61746368696e6720636f6c6c61746572616c20746f6b656e000000006044820152606401620011d8565b600181015461ffff600160401b9091048116908616101562001a9c5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420696e746572657374207261746560581b6044820152606401620011d8565b600181015463ffffffff600160201b9091048116908516111562001b035760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964206c6f616e206d6178206475726174696f6e000000000000006044820152606401620011d8565b60008a8152607a6020526040902062001b1c90620033fd565b158062001b3e575060008a8152607a6020526040902062001b3e908362003408565b62001b8c5760405162461bcd60e51b815260206004820181905260248201527f756e617574686f72697a656420636f6d6d69746d656e7420626f72726f7765726044820152606401620011d8565b805489111562001bbd5780546040516375d44cf160e11b81526004810191909152602481018a9052604401620011d8565b600381015460048201546001830154600684015460009362001bfd938e93919260ff909116916001600160a01b03600160501b90910481169116620020da565b90508089101562001c2c5760405163b744c71960e01b815260048101829052602481018a9052604401620011d8565b6002600483015460ff16600581111562001c4a5762001c4a62003f05565b148062001c71575060048083015460ff16600581111562001c6f5762001c6f62003f05565b145b1562001ce1578860011462001ce15760405162461bcd60e51b815260206004820152602f60248201527f696e76616c696420636f6d6d69746d656e7420636f6c6c61746572616c20616d60448201526e6f756e7420666f722045524337323160881b6064820152608401620011d8565b6002600483015460ff16600581111562001cff5762001cff62003f05565b148062001d2757506003600483015460ff16600581111562001d255762001d2562003f05565b145b1562001d90578782600201541462001d905760405162461bcd60e51b815260206004820152602560248201527f696e76616c696420636f6d6d69746d656e7420636f6c6c61746572616c20746f6044820152641ad95b925960da1b6064820152608401620011d8565b62001de78383600501548460060160009054906101000a90046001600160a01b03168d86600101600a9054906101000a90046001600160a01b03168e8e8960040160009054906101000a900460ff168d8f6200342d565b935062001e0c848360040160019054906101000a90046001600160a01b03166200356e565b5062001e198b8b620035c3565b604080516001600160a01b0385168152602081018c90529081018590528b907f7839c0e772fbc0df2f1be83221fb8cd10f50be73dac060cbb277ee5c856219309060600160405180910390a2505050979650505050505050565b600080600660405162001e869062003de8565b62001e9392919062004212565b604051809103906000f08015801562001eb0573d6000803e3d6000fd5b509050600080601260405162001ec69062003de8565b62001ed39291906200474c565b604051809103906000f08015801562001ef0573d6000803e3d6000fd5b509050620011906200180b633b9aca0066038d7ea4c6800060018587620020da565b60008381526078602052604090206004015483906001600160a01b0361010090910416331462001f565760405162461bcd60e51b8152600401620011d89062004396565b6000848152607a6020526040812090818162001f73828262003e6e565b5050505062001f84848484620035ec565b60405184907f04224de4972d2a55e811df57692f065a266ea975d06938d50b3cb33b498b161790600090a250505050565b60008062001fc96001633b9aca0062002f6e565b607e546004820154604080516060810190915260238082529394506200200e936001600160a01b03938416936101009093049092169162006ea3602083013962003653565b607e546040516340b578d360e01b81526001600160a01b03909116906340b578d390620020429085908590600401620047aa565b600060405180830381600087803b1580156200205d57600080fd5b505af115801562002072573d6000803e3d6000fd5b505050505050565b6000601681620020906001633b9aca0062002f6e565b90506200209e8383620035c3565b6200163982608154620020b2919062004323565b82600001541460016040518060600160405280602c815260200162006eeb602c913962003203565b600080846005811115620020f257620020f262003f05565b0362002101575060006200221c565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002143573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021699190620047c1565b9050600186600581111562002182576200218262003f05565b03620021f057846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620021c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021ed9190620047c1565b91505b6200221788620022018385620047e6565b6200220e90600a620048ff565b896001620036a1565b925050505b95945050505050565b6000818152607a60205260409020606090620017659062003708565b6000806006604051620022549062003de8565b6200226192919062004212565b604051809103906000f0801580156200227e573d6000803e3d6000fd5b50905062000876620022a16329b927006601c6bf526340006003600086620020da565b60026040518060400160405280601a81526020017f65787065637465642032204e46547320636f6c6c61746572616c00000000000081525062002f32565b6000806006604051620022f29062003de8565b620022ff92919062004212565b604051809103906000f0801580156200231c573d6000803e3d6000fd5b5090506200087662002356633b9aca0069d3c21bcecceda1000000600185608560009054906101000a90046001600160a01b0316620020da565b633b9aca0060405180606001604052806026815260200162006e7d6026913962002f32565b6000806200238f6002633b9aca0062002f6e565b607d54608654608454604051630354754f60e21b81529394506000936001600160a01b0393841693630d51d53c93620023ec93899360649360029360169391169161ffff600160201b8304169163ffffffff169060040162004339565b6020604051808303816000875af19250505080156200242a575060408051601f3d908101601f1916820190925262002427918101906200437c565b60015b62002438575060016200243a565b505b620016398160016040518060600160405280603f815260200162006d85603f913962003203565b60008062002473600160815462002f6e565b607e5460405163079a69e760e21b81529192506001600160a01b031690631e69a79c90620024a990859060839060040162004628565b600060405180830381600087803b158015620024c457600080fd5b505af1158015620024d9573d6000803e3d6000fd5b5050607f54608154608654608454604051630354754f60e21b8152600096506001600160a01b039485169550630d51d53c946200253a948a9489949193859390911691600160201b810461ffff169163ffffffff9091169060040162004339565b6020604051808303816000875af11580156200255a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200258091906200437c565b9050620016396084600a9054906101000a900460ff16600160405180606001604052806027815260200162006cc56027913962003203565b60008054610100900460ff1615620025d95750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620026e85760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200266a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162004936565b60408051601f1981840301815290829052620026869162004969565b6000604051808303816000865af19150503d8060008114620026c5576040519150601f19603f3d011682016040523d82523d6000602084013e620026ca565b606091505b5091505080806020019051810190620026e4919062004987565b9150505b919050565b6000806009604051620027009062003de8565b6200270d92919062004212565b604051809103906000f0801580156200272a573d6000803e3d6000fd5b5090506000806006604051620027409062003de8565b6200274d92919062004212565b604051809103906000f0801580156200276a573d6000803e3d6000fd5b5090506200119062002790640165a0bc00697ceff6ce7e0714c0000060018587620020da565b600b60405180606001604052806021815260200162006f176021913962002f32565b6000806006604051620027c59062003de8565b620027d292919062004212565b604051809103906000f080158015620027ef573d6000803e3d6000fd5b5090506200087662002826600169d3c21bcecceda1000000600185608560009054906101000a90046001600160a01b0316620020da565b600160405180606001604052806026815260200162006e7d6026913962002f32565b60008181526078602052604090206004015481906001600160a01b036101009091041633146200288c5760405162461bcd60e51b8152600401620011d89062004396565b60008281526078602090815260408083208381556001810180546001600160f01b031916905560028101849055600381018490556004810180546001600160a81b03191690556005810184905560060180546001600160a01b0319169055607a909152812090818162002900828262003e6e565b50506040518492507fd278ecade1e148fd8320435541f72d6a02dff654c1577ae2cadecba16e8ef2149150600090a25050565b60798054600091826200294683620049ab565b909155509050336200296161012086016101008701620043cd565b6001600160a01b031614620029b95760405162461bcd60e51b815260206004820152601f60248201527f756e617574686f72697a656420636f6d6d69746d656e742063726561746f72006044820152606401620011d8565b60008181526078602052604090208490620029d582826200445b565b50506000818152607860205260409020620029f09062003243565b620029fd818484620035ec565b807f16b531d6c0bbff6da27b922e61fc528bb3ae5b435f9e56fb87e399afb6ae520a62002a3361012087016101008801620043cd565b61012087013562002a4d61016089016101408a01620043cd565b604080516001600160a01b03948516815260208101939093529216818301528735606082015290519081900360800190a29392505050565b600080600660405162002a989062003de8565b62002aa592919062004212565b604051809103906000f08015801562002ac2573d6000803e3d6000fd5b509050600080601260405162002ad89062003de8565b62002ae59291906200474c565b604051809103906000f08015801562002b02573d6000803e3d6000fd5b5090506200119062002b25640211c41e0066038d7ea4c6800060018587620020da565b677b5884e8cbac000060405180606001604052806022815260200162006dc46022913962002f32565b600080600660405162002b619062003de8565b62002b6e92919062004212565b604051809103906000f08015801562002b8b573d6000803e3d6000fd5b509050620008766200282660016d1d16d8d16802617c51df80000000600185608560009054906101000a90046001600160a01b0316620020da565b600080600660405162002bd99062003de8565b62002be692919062004212565b604051809103906000f08015801562002c03573d6000803e3d6000fd5b5090506200087662002c26631dcd65006601c6bf526340006002600086620020da565b60016040518060400160405280601981526020017f65787065637465642031204e465420636f6c6c61746572616c0000000000000081525062002f32565b60008062002c76600160815462002f6e565b607e5460405163079a69e760e21b81529192506001600160a01b031690631e69a79c9062002cac90859060839060040162004628565b600060405180830381600087803b15801562002cc757600080fd5b505af115801562002cdc573d6000803e3d6000fd5b5050607e5460405163079a69e760e21b81526001600160a01b039091169250631e69a79c915062002d1590859060829060040162004628565b600060405180830381600087803b15801562002d3057600080fd5b505af115801562002d45573d6000803e3d6000fd5b5050607d54608154608654608454604051630354754f60e21b81526001600160a01b039485169650630d51d53c955062002da3948994600094909385939290911691600160201b820461ffff169163ffffffff169060040162004339565b6020604051808303816000875af115801562002dc3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002de991906200437c565b50620011906084600a9054906101000a900460ff16600160405180606001604052806027815260200162006cc56027913962003203565b60008062002e346001633b9aca0062002f6e565b6004810154607e546040805160608101909152602380825293945062002e78936101009093046001600160a01b039081169392169162006ea3602083013962003653565b607e54604051632b1cf2cf60e01b8152600481018490526001600160a01b0390911690632b1cf2cf90602401600060405180830381600087803b15801562002ebf57600080fd5b505af115801562002ed4573d6000803e3d6000fd5b50505050620011908160040160019054906101000a90046001600160a01b031660006040518060400160405280601e81526020017f54686520636f6d6d69746d656e7420776173206e6f742064656c65746564000081525062003653565b818314620016395760008051602062006d3e8339815191528160405162002f5a9190620049f5565b60405180910390a162001639838362003717565b6000805260786020526080547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa7149556085547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa714a80546001600160a01b039283166001600160a01b03199091161790556081547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa71449081556084547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa714580546601000000000000830463ffffffff90811669ffffffffffff0000000019909216908416600160201b90810261ffff60401b191691909117930461ffff16600160401b029290921763ffffffff1916919091179055607e547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa71488054610100600160a81b031981166101009390951692909202938417815591928592916001600160a81b03191660ff19909116176001836005811115620030ed57620030ed62003f05565b0217905550620031006012600a620048ff565b6200310c908362004a26565b6003820155600183600581111562003128576200312862003f05565b036200316157608654600182018054600160501b600160f01b0319166001600160a01b03909216600160501b0291909117905562001765565b600283600581111562003178576200317862003f05565b03620031b257600181018054600160501b600160f01b0319167309e46f287cb791987b6228c32669ea5126aa105d60521b17905562001765565b6003836005811115620031c957620031c962003f05565b036200176557600181018054600160501b600160f01b0319167309e46f287cb791987b6228c32669ea5126aa105d60521b17905592915050565b81151583151514620016395760008051602062006d3e833981519152816040516200322f9190620049f5565b60405180910390a16200163983836200380e565b600181015463ffffffff428116911611620032965760405162461bcd60e51b8152602060048201526012602482015271195e1c1a5c99590818dbdb5b5a5d1b595b9d60721b6044820152606401620011d8565b8054620032f05760405162461bcd60e51b815260206004820152602160248201527f636f6d6d69746d656e74207072696e636970616c20616c6c6f636174696f6e206044820152600360fc1b6064820152608401620011d8565b6000600482015460ff1660058111156200330e576200330e62003f05565b14620008765760008160030154116200336a5760405162461bcd60e51b815260206004820152601d60248201527f636f6d6d69746d656e7420636f6c6c61746572616c20726174696f20300000006044820152606401620011d8565b6001600482015460ff16600581111562003388576200338862003f05565b036200087657600281015415620008765760405162461bcd60e51b815260206004820152603260248201527f636f6d6d69746d656e7420636f6c6c61746572616c20746f6b656e206964206d6044820152710757374206265203020666f722045524332360741b6064820152608401620011d8565b600062001765825490565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b6040805160e081018252606060a08201819052600060c083018190528c83526001600160a01b038c1660208401529282018a905263ffffffff85168183015261ffff84166080830152828660058111156200348c576200348c62003f05565b14620035485760408051600180825281830190925290816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181620034a75790505090506040518060800160405280620034f48862003963565b600281111562003508576200350862003f05565b81526020018981526020018881526020018a6001600160a01b0316815250816000815181106200353c576200353c620042b7565b60200260200101819052505b6084805460ff60601b1916600160601b17905560019d9c50505050505050505050505050565b6084805460ff60501b1916600160501b17908190556040805160608101909152602b808252600092620035ba92600160601b90910460ff16916001919062006cec602083013962003203565b50600192915050565b60008281526078602052604081208054839290620035e390849062004323565b90915550505050565b60005b81811015620010a6576200363d838383818110620036115762003611620042b7565b9050602002016020810190620036289190620043cd565b6000868152607a602052604090209062003a5f565b50806200364a81620049ab565b915050620035ef565b816001600160a01b0316836001600160a01b031614620016395760008051602062006d3e833981519152816040516200368d9190620049f5565b60405180910390a162001639838362003a76565b600080620036b186868662003b70565b90506001836002811115620036ca57620036ca62003f05565b148015620036eb575060008480620036e657620036e662004a40565b868809115b156200221c57620036fe60018262004a56565b9695505050505050565b60606000620034268362003c25565b80821462001190577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200378a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620037c3919062004a6c565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620037fc919062004aa5565b60405180910390a16200119062003c83565b8015158215151462001190577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620038859060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a160008051602062006d3e83398151915281620038c7576040518060400160405280600581526020016466616c736560d81b815250620038e5565b604051806040016040528060048152602001637472756560e01b8152505b604051620038f4919062004ad0565b60405180910390a160008051602062006d3e8339815191528262003936576040518060400160405280600581526020016466616c736560d81b81525062003954565b604051806040016040528060048152602001637472756560e01b8152505b604051620037fc919062004b0f565b600060018260058111156200397c576200397c62003f05565b036200398a57506000919050565b6002826005811115620039a157620039a162003f05565b1480620039c257506004826005811115620039c057620039c062003f05565b145b15620039d057506001919050565b6003826005811115620039e757620039e762003f05565b148062003a085750600582600581111562003a065762003a0662003f05565b145b1562003a1657506002919050565b60405162461bcd60e51b815260206004820152601760248201527f556e6b6e6f776e20436f6c6c61746572616c20547970650000000000000000006044820152606401620011d8565b600062003426836001600160a01b03841662003d96565b806001600160a01b0316826001600160a01b03161462001190577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162003afe9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162003b37919062004b3a565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620037fc919062004b7f565b600080806000198587098587029250828110838203039150508060000362003baf5783828162003ba45762003ba462004a40565b049250505062003426565b80841162003bbc57600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60608160000180548060200260200160405190810160405280929190818152602001828054801562003c7757602002820191906000526020600020905b81548152602001906001019080831162003c62575b50505050509050919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562003d855760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262003d20929160200162004936565b60408051601f198184030181529082905262003d3c9162004969565b6000604051808303816000865af19150503d806000811462003d7b576040519150601f19603f3d011682016040523d82523d6000602084013e62003d80565b606091505b505050505b6000805461ff001916610100179055565b600081815260018301602052604081205462003ddf5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562001765565b50600062001765565b610ca28062004bab83390190565b611478806200584d83390190565b82805482825590600052602060002090810192821562003e5c579160200282015b8281111562003e5c57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062003e25565b5062003e6a92915062003e89565b5090565b50805460008255906000526020600020908101906200087691905b5b8082111562003e6a576000815560010162003e8a565b6000610160828403121562003eb457600080fd5b50919050565b600080610180838503121562003ecf57600080fd5b8235915062003ee2846020850162003ea0565b90509250929050565b60006020828403121562003efe57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6006811062003f3a57634e487b7160e01b600052602160045260246000fd5b9052565b8b815263ffffffff8b811660208301528a16604082015261ffff891660608201526001600160a01b03888116608083015260a0820188905260c0820187905261016082019062003f9260e084018862003f1b565b80861661010084015284610120840152808416610140840152509c9b505050505050505050505050565b6001600160a01b03811681146200087657600080fd5b61ffff811681146200087657600080fd5b63ffffffff811681146200087657600080fd5b600080600080600080600060e0888a0312156200401257600080fd5b8735965060208801359550604088013594506060880135935060808801356200403b8162003fbc565b925060a08801356200404d8162003fd2565b915060c08801356200405f8162003fe3565b8091505092959891949750929550565b60008083601f8401126200408257600080fd5b50813567ffffffffffffffff8111156200409b57600080fd5b6020830191508360208260051b8501011115620040b757600080fd5b9250929050565b600080600060408486031215620040d457600080fd5b83359250602084013567ffffffffffffffff811115620040f357600080fd5b62004101868287016200406f565b9497909650939450505050565b600681106200087657600080fd5b600080600080600060a086880312156200413557600080fd5b8535945060208601359350604086013562004150816200410e565b92506060860135620041628162003fbc565b91506080860135620041748162003fbc565b809150509295509295909350565b6020808252825182820181905260009190848201906040850190845b81811015620041c55783516001600160a01b0316835292840192918401916001016200419e565b50909695505050505050565b60008060006101808486031215620041e857600080fd5b620041f4858562003ea0565b925061016084013567ffffffffffffffff811115620040f357600080fd5b6080815260006200423c60808301600981526854657374205553444360b81b602082015260400190565b828103602084015262004261816005815264545553444360d81b602082015260400190565b91505083604083015260ff831660608301529392505050565b634e487b7160e01b600052601160045260246000fd5b63ffffffff818116838216019080821115620042b057620042b06200427a565b5092915050565b634e487b7160e01b600052603260045260246000fd5b608081526000620042fe60808301601081526f0a8cae6e840aee4c2e0e0cac8408aa8960831b602082015260400190565b8281036020840152620042618160058152640a8ae8aa8960db1b602082015260400190565b818103818111156200176557620017656200427a565b9687526020870195909552604086019390935260608501919091526001600160a01b0316608084015261ffff1660a083015263ffffffff1660c082015260e00190565b6000602082840312156200438f57600080fd5b5051919050565b6020808252601e908201527f756e617574686f72697a656420636f6d6d69746d656e74206c656e6465720000604082015260600190565b600060208284031215620043e057600080fd5b8135620034268162003fbc565b60008135620017658162003fe3565b60008135620017658162003fd2565b60008135620017658162003fbc565b6000813562001765816200410e565b600682106200444857634e487b7160e01b600052602160045260246000fd5b60ff1981541660ff831681178255505050565b81358155600181016200448c6200447560208501620043ed565b825463ffffffff191663ffffffff91909116178255565b620044c06200449e60408501620043ed565b825467ffffffff00000000191660209190911b67ffffffff0000000016178255565b620044f3620044d260608501620043fc565b825461ffff60401b191660409190911b69ffff000000000000000016178255565b6200452f62004505608085016200440b565b828054600160501b600160f01b03191660509290921b600160501b600160f01b0316919091179055565b5060a0820135600282015560c0820135600382015560048101620045616200455a60e085016200441a565b8262004429565b6200459a6200457461010085016200440b565b828054610100600160a81b03191660089290921b610100600160a81b0316919091179055565b50610120820135600582015562001190620045b961014084016200440b565b6006830180546001600160a01b0319166001600160a01b0392909216919091179055565b6000815480845260208085019450836000528060002060005b838110156200461d5781546001600160a01b031687529582019560019182019101620045f6565b509495945050505050565b828152604060208201526000620046436040830184620045dd565b949350505050565b80548252600181015463ffffffff80821660208501526200467960408501828460201c1663ffffffff169052565b5061ffff604082901c16606084015260501c6001600160a01b039081166080840152600282015460a0840152600382015460c0840152600482015490620046c760e0850160ff841662003f1b565b620046e36101008501828460081c166001600160a01b03169052565b50506005810154610120830152600601546001600160a01b031661014090910152565b60006101806200471783866200464b565b806101608401526200221c81840185620045dd565b6000602082840312156200473f57600080fd5b8151620034268162003fbc565b6080815260096080820152680a8cae6e840ae8aa8960bb1b60a082015260c0602082015260006200479260c0830160058152640a8ae8aa8960db1b602082015260400190565b905083604083015260ff831660608301529392505050565b82815261018081016200342660208301846200464b565b600060208284031215620047d457600080fd5b815160ff811681146200342657600080fd5b60ff81811683821601908111156200176557620017656200427a565b600181815b80851115620048435781600019048211156200482757620048276200427a565b808516156200483557918102915b93841c939080029062004807565b509250929050565b6000826200485c5750600162001765565b816200486b5750600062001765565b81600181146200488457600281146200488f57620048af565b600191505062001765565b60ff841115620048a357620048a36200427a565b50506001821b62001765565b5060208310610133831016604e8410600b8410161715620048d4575081810a62001765565b620048e0838362004802565b8060001904821115620048f757620048f76200427a565b029392505050565b60006200342660ff8416836200484b565b60005b838110156200492d57818101518382015260200162004913565b50506000910152565b6001600160e01b03198316815281516000906200495b81600485016020870162004910565b919091016004019392505050565b600082516200497d81846020870162004910565b9190910192915050565b6000602082840312156200499a57600080fd5b815180151581146200342657600080fd5b600060018201620049c057620049c06200427a565b5060010190565b60008151808452620049e181602086016020860162004910565b601f01601f19169290920160200192915050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620034266080830184620049c7565b80820281158282048414176200176557620017656200427a565b634e487b7160e01b600052601260045260246000fd5b808201808211156200176557620017656200427a565b60408152600062004a9760408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062004a9760408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062004afb60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152620046438185620049c7565b60408152600062004afb60408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062004b6560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062004b6560408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60a06040523480156200001157600080fd5b5060405162000ca238038062000ca2833981016040819052620000349162000203565b838360036200004483826200031e565b5060046200005382826200031e565b50505060ff811660805262000069338362000073565b5050505062000412565b6001600160a01b038216620000ce5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000e29190620003ea565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016657600080fd5b81516001600160401b03808211156200018357620001836200013e565b604051601f8301601f19908116603f01168101908282118183101715620001ae57620001ae6200013e565b81604052838152602092508683858801011115620001cb57600080fd5b600091505b83821015620001ef5785820183015181830184015290820190620001d0565b600093810190920192909252949350505050565b600080600080608085870312156200021a57600080fd5b84516001600160401b03808211156200023257600080fd5b620002408883890162000154565b955060208701519150808211156200025757600080fd5b50620002668782880162000154565b93505060408501519150606085015160ff811681146200028557600080fd5b939692955090935050565b600181811c90821680620002a557607f821691505b602082108103620002c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200013957600081815260208120601f850160051c81016020861015620002f55750805b601f850160051c820191505b81811015620003165782815560010162000301565b505050505050565b81516001600160401b038111156200033a576200033a6200013e565b62000352816200034b845462000290565b84620002cc565b602080601f8311600181146200038a5760008415620003715750858301515b600019600386901b1c1916600185901b17855562000316565b600085815260208120601f198616915b82811015620003bb578886015182559484019460019091019084016200039a565b5085821015620003da5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200040c57634e487b7160e01b600052601160045260246000fd5b92915050565b6080516108746200042e600039600061011b01526108746000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461014557806370a082311461015857806395d89b4114610181578063a457c2d714610189578063a9059cbb1461019c578063dd62ed3e146101af57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c2565b6040516100c391906106be565b60405180910390f35b6100df6100da366004610728565b610254565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610752565b61026e565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100c3565b6100df610153366004610728565b610292565b6100f361016636600461078e565b6001600160a01b031660009081526020819052604090205490565b6100b66102b4565b6100df610197366004610728565b6102c3565b6100df6101aa366004610728565b610343565b6100f36101bd3660046107b0565b610351565b6060600380546101d1906107e3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd906107e3565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b5050505050905090565b60003361026281858561037c565b60019150505b92915050565b60003361027c8582856104a0565b61028785858561051a565b506001949350505050565b6000336102628185856102a58383610351565b6102af919061081d565b61037c565b6060600480546101d1906107e3565b600033816102d18286610351565b9050838110156103365760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610287828686840361037c565b60003361026281858561051a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032d565b6001600160a01b03821661043f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ac8484610351565b9050600019811461051457818110156105075760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032d565b610514848484840361037c565b50505050565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032d565b6001600160a01b0382166105e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032d565b6001600160a01b038316600090815260208190526040902054818110156106585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610514565b600060208083528351808285015260005b818110156106eb578581018301518582016040015282016106cf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072357600080fd5b919050565b6000806040838503121561073b57600080fd5b6107448361070c565b946020939093013593505050565b60008060006060848603121561076757600080fd5b6107708461070c565b925061077e6020850161070c565b9150604084013590509250925092565b6000602082840312156107a057600080fd5b6107a98261070c565b9392505050565b600080604083850312156107c357600080fd5b6107cc8361070c565b91506107da6020840161070c565b90509250929050565b600181811c908216806107f757607f821691505b60208210810361081757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026857634e487b7160e01b600052601160045260246000fdfea264697066735822122067db7b494f86cbe61a21a91b8a496d38f6ee4afea5d8aaab40f3da02486c803764736f6c6343000811003360c060405234801561001057600080fd5b5060405161147838038061147883398101604081905261002f9161005e565b6001600160a01b039182166080521660a052610098565b6001600160a01b038116811461005b57600080fd5b50565b6000806040838503121561007157600080fd5b825161007c81610046565b602084015190925061008d81610046565b809150509250929050565b60805160a05161136e61010a600039600081816101bf0152818161042e015281816104c3015281816105e70152818161066d01526108680152600081816102eb015281816103470152818161056f015281816106eb0152818161078c0152818161092c01526109db015261136e6000f3fe6080604052600436106100ec5760003560e01c80632b1fd58a1161008a5780635fd72d16116100595780635fd72d16146102995780637cf13b53146102b9578063941675db146102d95780639a11e3391461030d57600080fd5b80632b1fd58a146102195780632e9332d414610239578063344e553d1461025957806340b578d31461027957600080fd5b80631420a266116100c65780631420a2661461016b5780631e69a79c1461018d578063201ee11e146101ad5780632b1cf2cf146101f957600080fd5b806306f33a92146100f85780630d51d53c1461012b57806310d18eff1461014b57600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50610118610113366004610a9d565b61032d565b6040519081526020015b60405180910390f35b34801561013757600080fd5b50610118610146366004610b36565b6103da565b34801561015757600080fd5b50610118610166366004610bfe565b6104a9565b34801561017757600080fd5b5061018b610186366004610c54565b610549565b005b34801561019957600080fd5b5061018b6101a8366004610c80565b6105d0565b3480156101b957600080fd5b506101e17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610122565b34801561020557600080fd5b5061018b610214366004610cb3565b610657565b34801561022557600080fd5b5061018b610234366004610cb3565b6106d5565b34801561024557600080fd5b5061018b610254366004610c54565b610766565b34801561026557600080fd5b50610118610274366004610cea565b6107bb565b34801561028557600080fd5b5061018b610294366004610dd1565b610851565b3480156102a557600080fd5b5061018b6102b4366004610df6565b61089f565b3480156102c557600080fd5b506101186102d4366004610e32565b610912565b3480156102e557600080fd5b506101e17f000000000000000000000000000000000000000000000000000000000000000081565b34801561031957600080fd5b5061018b610328366004610cb3565b6109c5565b6040516303799d4960e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906306f33a929061038a908c908c908c908c908c908c908c908c90600401610f54565b6020604051808303816000875af11580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd9190610fb1565b9998505050505050505050565b604051630592113d60e41b8152600481018890526024810187905260448101869052606481018590526001600160a01b03848116608483015261ffff841660a483015263ffffffff831660c48301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063592113d09060e4016020604051808303816000875af1158015610479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049d9190610fb1565b98975050505050505050565b60405163c1abfa1160e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c1abfa11906104fc90879087908790600401611122565b6020604051808303816000875af115801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f9190610fb1565b90505b9392505050565b604051630a10513360e11b8152600481018390526001600160a01b0382811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631420a266906044015b600060405180830381600087803b1580156105b457600080fd5b505af11580156105c8573d6000803e3d6000fd5b505050505050565b604051635ec77a8160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ec77a81906106209086908690869060040161114f565b600060405180830381600087803b15801561063a57600080fd5b505af115801561064e573d6000803e3d6000fd5b50505050505050565b6040516302fed02f60e61b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bfb40bc0906024015b600060405180830381600087803b1580156106ba57600080fd5b505af11580156106ce573d6000803e3d6000fd5b5050505050565b6040516315196bad60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a8cb5d68906024016060604051808303816000875af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190611172565b50505050565b604051630ba4ccb560e21b8152600481018390526001600160a01b0382811660248301527f00000000000000000000000000000000000000000000000000000000000000001690632e9332d49060440161059a565b60405163344e553d60e01b81526000906001600160a01b038d169063344e553d906107fe9030908f908f908f908f908f908f908f908f908f908f906004016111b0565b6020604051808303816000875af115801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190610fb1565b9c9b505050505050505050505050565b60405163050268b960e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631409a2e49061059a908590859060040161123c565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af11580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190611251565b604051637bbd53d760e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637bbd53d790610973908e908e908e908e908e908e908e908e908e908e9060040161126e565b6020604051808303816000875af1158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190610fb1565b9b9a5050505050505050505050565b604051639a11e33960e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639a11e339906024016106a0565b80356001600160a01b0381168114610a2957600080fd5b919050565b803563ffffffff81168114610a2957600080fd5b803561ffff81168114610a2957600080fd5b60008083601f840112610a6657600080fd5b50813567ffffffffffffffff811115610a7e57600080fd5b602083019150836020828501011115610a9657600080fd5b9250929050565b60008060008060008060008060e0898b031215610ab957600080fd5b610ac289610a12565b97506020890135965060408901359550610ade60608a01610a2e565b9450610aec60808a01610a42565b935060a089013567ffffffffffffffff811115610b0857600080fd5b610b148b828c01610a54565b9094509250610b27905060c08a01610a12565b90509295985092959890939650565b600080600080600080600060e0888a031215610b5157600080fd5b87359650602088013595506040880135945060608801359350610b7660808901610a12565b9250610b8460a08901610a42565b9150610b9260c08901610a2e565b905092959891949750929550565b60006101608284031215610bb357600080fd5b50919050565b60008083601f840112610bcb57600080fd5b50813567ffffffffffffffff811115610be357600080fd5b6020830191508360208260051b8501011115610a9657600080fd5b60008060006101808486031215610c1457600080fd5b610c1e8585610ba0565b925061016084013567ffffffffffffffff811115610c3b57600080fd5b610c4786828701610bb9565b9497909650939450505050565b60008060408385031215610c6757600080fd5b82359150610c7760208401610a12565b90509250929050565b600080600060408486031215610c9557600080fd5b83359250602084013567ffffffffffffffff811115610c3b57600080fd5b600060208284031215610cc557600080fd5b5035919050565b8015158114610cda57600080fd5b50565b60028110610cda57600080fd5b60008060008060008060008060008060006101408c8e031215610d0c57600080fd5b610d158c610a12565b9a50610d2360208d01610a2e565b9950610d3160408d01610a2e565b9850610d3f60608d01610a2e565b9750610d4d60808d01610a42565b965060a08c0135610d5d81610ccc565b955060c08c0135610d6d81610ccc565b945060e08c0135610d7d81610cdd565b93506101008c0135610d8e81610cdd565b92506101208c013567ffffffffffffffff811115610dab57600080fd5b610db78e828f01610a54565b915080935050809150509295989b509295989b9093969950565b6000806101808385031215610de557600080fd5b82359150610c778460208501610ba0565b600080600060608486031215610e0b57600080fd5b610e1484610a12565b9250610e2260208501610a12565b9150604084013590509250925092565b6000806000806000806000806000806101008b8d031215610e5257600080fd5b610e5b8b610a12565b995060208b0135985060408b01359750610e7760608c01610a2e565b9650610e8560808c01610a42565b955060a08b013567ffffffffffffffff80821115610ea257600080fd5b610eae8e838f01610a54565b9097509550859150610ec260c08e01610a12565b945060e08d0135915080821115610ed857600080fd5b818d0191508d601f830112610eec57600080fd5b813581811115610efb57600080fd5b8e60208260071b8501011115610f1057600080fd5b6020830194508093505050509295989b9194979a5092959850565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835289602084015288604084015263ffffffff8816606084015261ffff8716608084015260e060a0840152610f9960e084018688610f2b565b915080841660c0840152509998505050505050505050565b600060208284031215610fc357600080fd5b5051919050565b803560068110610a2957600080fd5b634e487b7160e01b600052602160045260246000fd5b60068110610fff57610fff610fd9565b9052565b8035825261101360208201610a2e565b63ffffffff16602083015261102a60408201610a2e565b63ffffffff16604083015261104160608201610a42565b61ffff16606083015261105660808201610a12565b6001600160a01b03811660808401525060a081013560a083015260c081013560c083015261108660e08201610fca565b61109360e0840182610fef565b506101006110a2818301610a12565b6001600160a01b03169083015261012081810135908301526101406110c8818301610a12565b6001600160a01b03811684830152610760565b8183526000602080850194508260005b85811015611117576001600160a01b0361110483610a12565b16875295820195908201906001016110eb565b509495945050505050565b60006101806111318387611003565b8061016084015261114581840185876110db565b9695505050505050565b8381526040602082015260006111696040830184866110db565b95945050505050565b60008060006060848603121561118757600080fd5b8351925060208401519150604084015190509250925092565b60028110610cda57610cda610fd9565b6001600160a01b038c16815263ffffffff8b811660208301528a811660408301528916606082015261ffff8816608082015286151560a082015285151560c08201526000610140611200876111a0565b8660e084015261120f866111a0565b856101008401528061012084015261122a8184018587610f2b565b9e9d5050505050505050505050505050565b82815261018081016105426020830184611003565b60006020828403121561126357600080fd5b815161054281610ccc565b600061010060018060a01b03808e16845260208d8186015260408d81870152606063ffffffff8e1681880152608061ffff8e16818901528560a08901526112b88689018d8f610f2b565b8b861660c08a015288810360e08a01528981528a965084016000805b8b81101561131d578835600381106112ea578283fd5b83528887013587840152858901358684015287611308868b01610a12565b168386015297830197918301916001016112d4565b5050809750505050505050509b9a505050505050505050505056fea26469706673582212207a5ad93669de3a22ca27c0226c099dbc6f8b2328d9f5b84089afcadf686f9d0e64736f6c6343000811003345787065637420616363657074206269642063616c6c65642061667465722065786572636973655375626d697420626964206d7573742062652063616c6c6564206265666f7265206163636570742062696453686f756c64206661696c207768656e20616363657074696e6720636f6d6d6974207477696365280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35836578706563746564206174206c65617374203220756e697473206f6620636f6c6c61746572616c53686f756c64206661696c20746f2061636365707420636f6d6d69746d656e74207769746820696e76616c696420616d6f756e7420666f7220455243373231657870656374656420312045544820726571756972656420636f6c6c61746572616c53686f756c64206661696c20746f2061636365707420636f6d6d69746d656e74207769746820696e73756666696369656e7420636f6c6c61746572616c4578706563742061636365707420626964206e6f742063616c6c6564206265666f726520657865726369736553686f756c64206661696c207768656e20616363657074696e6720617320696e76616c696420626f72726f7765726578706563746564206174206c65617374203120756e6974206f6620636f6c6c61746572616c4e6f7420746865206f776e6572206f66206372656174656420636f6d6d69746d656e74657870656374656420312c3639342e393135323535205553444320636f6c6c61746572616c436f6d6d69746d656e74206d6178207072696e636970616c20776173206e6f742064656372656d656e746564657870656374656420302e303030303131205553444320636f6c6c61746572616ca2646970667358221220aa6dca42b65adb04ffa58d5c7b45c791241a2726d5a06c239d8c653186b2386b64736f6c6343000811003360a0604052600060335534801561001557600080fd5b5060006080526080516115da610036600039600061086001526115da6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80634a06f6ea116100de5780638ac4731911610097578063c1576c8a11610071578063c1576c8a146104da578063d87569cc146104ed578063ecb96fe614610500578063f404df8f1461051357600080fd5b80638ac473191461049e578063b5d34fcd146104a7578063ba6d5b15146104c757600080fd5b80634a06f6ea1461041557806354fd4d5014610428578063572b6c05146104315780636b76c085146104445780636b868afb1461046a57806377353aba1461047d57600080fd5b806323be345c1161013057806323be345c146102525780632519dc791461027d5780632e9332d41461029d57806336735891146102b05780633819bcdc146102e05780634423c5f1146102f357600080fd5b8063089487b5146101785780631253c546146101b6578063127caa88146101d65780631289b396146102115780631420a2661461021a57806319b353de1461022f575b600080fd5b6101a3610186366004610b3c565b603f60209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101c96101c4366004610b75565b610526565b6040516101ad9190610b8e565b6101fc6101e4366004610b75565b603e6020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020016101ad565b6101a360375481565b61022d610228366004610bdc565b6105c0565b005b61024261023d366004610c01565b61070d565b60405190151581526020016101ad565b604654610265906001600160a01b031681565b6040516001600160a01b0390911681526020016101ad565b6101a361028b366004610c43565b60406020819052600091825290205481565b61022d6102ab366004610bdc565b61074a565b6102d36102be366004610b75565b60486020526000908152604090205460ff1681565b6040516101ad9190610c86565b6101a36102ee366004610c99565b61082d565b610400610301366004610b75565b60346020908152600091825260409182902080546001820154600283015460038401546004850154875160e08101895260058701546001600160a01b0390811682526006880154828a01528951808b018b52600789015481526008890154818b0152828b0152600988015463ffffffff80821660608086019190915264010000000080840483166080870152680100000000000000008404831660a0870152600160601b909304821660c08601528c519081018d52600a8b01548152600b8b01549182169b81019b909b520461ffff1699890199909952600c909601549488169793841696939092169490939192909160ff8082169161010090041689565b6040516101ad99989796959493929190610ce2565b604754610265906001600160a01b031681565b6101a360415481565b61024261043f366004610c43565b61085e565b6101fc610452366004610b75565b603d6020526000908152604090205463ffffffff1681565b603b54610265906001600160a01b031681565b61049061048b366004610b75565b610890565b6040516101ad929190610dd6565b6101a360335481565b6101a36104b5366004610c43565b60366020526000908152604090205481565b604554610265906001600160a01b031681565b6102656104e8366004610b75565b6108a5565b6102426104fb366004610bdc565b6108b6565b603a54610265906001600160a01b031681565b61022d610521366004610c43565b6108f2565b6042602052600090815260409020805461053f90610e05565b80601f016020809104026020016040519081016040528092919081815260200182805461056b90610e05565b80156105b85780601f1061058d576101008083540402835291602001916105b8565b820191906000526020600020905b81548152906001019060200180831161059b57829003601f168201915b505050505081565b6105c861094f565b603a54604051633d36902960e01b8152600481018590526001600160a01b039283169290911690633d36902990602401602060405180830381865afa158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190610e3f565b6001600160a01b0316146106945760405162461bcd60e51b815260206004820152601f60248201527f43616c6c6572206d75737420626520746865206d61726b6574206f776e65720060448201526064015b60405180910390fd5b600082815260436020526040902080546001600160a01b0319166001600160a01b038316179055817fa593acf9edc343669c7fc50d2caa3911326adef438361f0fa911be85c9e296a4826106e661094f565b604080516001600160a01b0393841681529290911660208301520160405180910390a25050565b600061071984846108b6565b801561074257506001600160a01b03831660009081526044602052604090206107429083610971565b949350505050565b61075482826108b6565b6107b05760405162461bcd60e51b815260206004820152602760248201527f466f72776172646572206d757374206265207472757374656420627920746865604482015266081b585c9ad95d60ca1b606482015260840161068b565b6107d96107bb61094f565b6001600160a01b038316600090815260446020526040902090610993565b50806001600160a01b0316827f65d6b5305e8c0e58e88454a1aeecae0f55975222338b25abd0997b4d305056a161080e61094f565b6040516001600160a01b03909116815260200160405180910390a35050565b6035602052816000526040600020818154811061084957600080fd5b90600052602060002001600091509150505481565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b36600061089c836109a8565b91509150915091565b60006108b0826109e0565b92915050565b6000828152604360205260408120546001600160a01b03838116911614806108eb57506045546001600160a01b038381169116145b9392505050565b806040516108ff90610b17565b6001600160a01b039091168152602001604051809103906000f08015801561092b573d6000803e3d6000fd5b50603a80546001600160a01b0319166001600160a01b039290921691909117905550565b600061095a3361085e565b1561096c575060131936013560601c90565b503390565b6001600160a01b038116600090815260018301602052604081205415156108eb565b60006108eb836001600160a01b038416610a8b565b3660006109b7836104fb61094f565b156109d857600080366109cb601482610e5c565b9261089c93929190610e7d565b61089c610ada565b60006109ee826104fb61094f565b15610a835760131936013560601c610a2b8160446000610a0c61094f565b6001600160a01b03168152602081019190915260400160002090610971565b6108b05760405162461bcd60e51b8152602060048201526024808201527f53656e646572206d75737420617070726f7665206d61726b657420666f727761604482015263393232b960e11b606482015260840161068b565b6108b061094f565b6000818152600183016020526040812054610ad2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108b0565b5060006108b0565b366000610ae63361085e565b15610b0f5760008036610afa601482610e5c565b92610b0793929190610e7d565b915091509091565b600036610b07565b6106fd80610ea883390190565b6001600160a01b0381168114610b3957600080fd5b50565b60008060408385031215610b4f57600080fd5b8235610b5a81610b24565b91506020830135610b6a81610b24565b809150509250929050565b600060208284031215610b8757600080fd5b5035919050565b600060208083528351808285015260005b81811015610bbb57858101830151858201604001528201610b9f565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610bef57600080fd5b823591506020830135610b6a81610b24565b600080600060608486031215610c1657600080fd5b833592506020840135610c2881610b24565b91506040840135610c3881610b24565b809150509250925092565b600060208284031215610c5557600080fd5b81356108eb81610b24565b634e487b7160e01b600052602160045260246000fd5b60028110610b3957610b39610c60565b60208101610c9383610c76565b91905290565b60008060408385031215610cac57600080fd5b8235610cb781610b24565b946020939093013593505050565b60068110610cd557610cd5610c60565b9052565b610cd581610c76565b60006102408201905060018060a01b03808c168352808b166020840152808a1660408401528860608401528760808401528087511660a084015250602086015160c08301526040860151805160e084015260208101516101008401525063ffffffff6060870151166101208301526080860151610d6861014084018263ffffffff169052565b5060a086015163ffffffff90811661016084015260c0870151811661018084015285516101a08401526020860151166101c0830152604085015161ffff166101e0830152610dba610200830185610cc5565b610dc8610220830184610cd9565b9a9950505050505050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600181811c90821680610e1957607f821691505b602082108103610e3957634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610e5157600080fd5b81516108eb81610b24565b818103818111156108b057634e487b7160e01b600052601160045260246000fd5b60008085851115610e8d57600080fd5b83861115610e9a57600080fd5b505082019391909203915056fe608060405234801561001057600080fd5b506040516106fd3803806106fd83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61066a806100936000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633d36902911610097578063a5630f1911610066578063a5630f191461026e578063c4d66de814610294578063d6e794dd146102a5578063f9fa9345146102c057600080fd5b80633d369029146102065780633ef19a9b146100fa57806364413796146102065780636cdaa4211461023c57600080fd5b806311bed5bb116100d357806311bed5bb1461012e5780631a4808d2146101795780631cc672df146101b5578063344e553d146101d957600080fd5b8063066e7513146100fa578063082fc54d1461012e5780630a2e98e414610158575b600080fd5b6101126101083660046102f2565b5060019160009150565b6040805192151583526020830191909152015b60405180910390f35b61014361013c366004610322565b506103e890565b60405163ffffffff9091168152602001610125565b61016661013c366004610322565b60405161ffff9091168152602001610125565b6101a8610187366004610322565b5060408051808201909152600681526575726c3a2f2f60d01b602082015290565b604051610125919061033b565b6101c96101c3366004610322565b50600090565b6040519015158152602001610125565b6101f86101e736600461041a565b60009b9a5050505050505050505050565b604051908152602001610125565b610224610214366004610322565b506000546001600160a01b031690565b6040516001600160a01b039091168152602001610125565b61026c61024a3660046104ff565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b005b61028661027c366004610322565b506103e890600090565b604051610125929190610541565b61026c6102a23660046104ff565b50565b6102b36101c3366004610322565b6040516101259190610564565b6101f86102ce366004610577565b60009998505050505050505050565b6001600160a01b03811681146102a257600080fd5b6000806040838503121561030557600080fd5b823591506020830135610317816102dd565b809150509250929050565b60006020828403121561033457600080fd5b5035919050565b600060208083528351808285015260005b818110156103685785810183015185820160400152820161034c565b506000604082860101526040601f19601f8301168501019250505092915050565b803563ffffffff8116811461039d57600080fd5b919050565b803561ffff8116811461039d57600080fd5b8035801515811461039d57600080fd5b600281106102a257600080fd5b60008083601f8401126103e357600080fd5b50813567ffffffffffffffff8111156103fb57600080fd5b60208301915083602082850101111561041357600080fd5b9250929050565b60008060008060008060008060008060006101408c8e03121561043c57600080fd5b8b35610447816102dd565b9a5061045560208d01610389565b995061046360408d01610389565b985061047160608d01610389565b975061047f60808d016103a2565b965061048d60a08d016103b4565b955061049b60c08d016103b4565b945060e08c01356104ab816103c4565b93506101008c01356104bc816103c4565b92506101208c013567ffffffffffffffff8111156104d957600080fd5b6104e58e828f016103d1565b915080935050809150509295989b509295989b9093969950565b60006020828403121561051157600080fd5b813561051c816102dd565b9392505050565b600281106102a257634e487b7160e01b600052602160045260246000fd5b63ffffffff831681526040810161055783610523565b8260208301529392505050565b6020810161057183610523565b91905290565b60008060008060008060008060006101008a8c03121561059657600080fd5b89356105a1816102dd565b98506105af60208b01610389565b97506105bd60408b01610389565b96506105cb60608b01610389565b95506105d960808b016103a2565b94506105e760a08b016103b4565b93506105f560c08b016103b4565b925060e08a013567ffffffffffffffff81111561061157600080fd5b61061d8c828d016103d1565b91508093505080915050929598509295985092959856fea2646970667358221220db4411883f7480d732e0a82507591463f095e3f434d751e9ac1ed6249f8732a964736f6c63430008110033a2646970667358221220003de6457a390d785ffab40df612b4f82f91e0271bc75b2eb3ba1025ec47f6a364736f6c63430008110033608060405234801561001057600080fd5b506040516106fd3803806106fd83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61066a806100936000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633d36902911610097578063a5630f1911610066578063a5630f191461026e578063c4d66de814610294578063d6e794dd146102a5578063f9fa9345146102c057600080fd5b80633d369029146102065780633ef19a9b146100fa57806364413796146102065780636cdaa4211461023c57600080fd5b806311bed5bb116100d357806311bed5bb1461012e5780631a4808d2146101795780631cc672df146101b5578063344e553d146101d957600080fd5b8063066e7513146100fa578063082fc54d1461012e5780630a2e98e414610158575b600080fd5b6101126101083660046102f2565b5060019160009150565b6040805192151583526020830191909152015b60405180910390f35b61014361013c366004610322565b506103e890565b60405163ffffffff9091168152602001610125565b61016661013c366004610322565b60405161ffff9091168152602001610125565b6101a8610187366004610322565b5060408051808201909152600681526575726c3a2f2f60d01b602082015290565b604051610125919061033b565b6101c96101c3366004610322565b50600090565b6040519015158152602001610125565b6101f86101e736600461041a565b60009b9a5050505050505050505050565b604051908152602001610125565b610224610214366004610322565b506000546001600160a01b031690565b6040516001600160a01b039091168152602001610125565b61026c61024a3660046104ff565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b005b61028661027c366004610322565b506103e890600090565b604051610125929190610541565b61026c6102a23660046104ff565b50565b6102b36101c3366004610322565b6040516101259190610564565b6101f86102ce366004610577565b60009998505050505050505050565b6001600160a01b03811681146102a257600080fd5b6000806040838503121561030557600080fd5b823591506020830135610317816102dd565b809150509250929050565b60006020828403121561033457600080fd5b5035919050565b600060208083528351808285015260005b818110156103685785810183015185820160400152820161034c565b506000604082860101526040601f19601f8301168501019250505092915050565b803563ffffffff8116811461039d57600080fd5b919050565b803561ffff8116811461039d57600080fd5b8035801515811461039d57600080fd5b600281106102a257600080fd5b60008083601f8401126103e357600080fd5b50813567ffffffffffffffff8111156103fb57600080fd5b60208301915083602082850101111561041357600080fd5b9250929050565b60008060008060008060008060008060006101408c8e03121561043c57600080fd5b8b35610447816102dd565b9a5061045560208d01610389565b995061046360408d01610389565b985061047160608d01610389565b975061047f60808d016103a2565b965061048d60a08d016103b4565b955061049b60c08d016103b4565b945060e08c01356104ab816103c4565b93506101008c01356104bc816103c4565b92506101208c013567ffffffffffffffff8111156104d957600080fd5b6104e58e828f016103d1565b915080935050809150509295989b509295989b9093969950565b60006020828403121561051157600080fd5b813561051c816102dd565b9392505050565b600281106102a257634e487b7160e01b600052602160045260246000fd5b63ffffffff831681526040810161055783610523565b8260208301529392505050565b6020810161057183610523565b91905290565b60008060008060008060008060006101008a8c03121561059657600080fd5b89356105a1816102dd565b98506105af60208b01610389565b97506105bd60408b01610389565b96506105cb60608b01610389565b95506105d960808b016103a2565b94506105e760a08b016103b4565b93506105f560c08b016103b4565b925060e08a013567ffffffffffffffff81111561061157600080fd5b61061d8c828d016103d1565b91508093505080915050929598509295985092959856fea2646970667358221220db4411883f7480d732e0a82507591463f095e3f434d751e9ac1ed6249f8732a964736f6c63430008110033",
    "sourceMap": "640:24435:98:-:0;;;1572:26:37;;;-1:-1:-1;;1572:26:37;1594:4;1572:26;;;1453:212:98;;;;;;;;;;1522:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1644:1;1613:34;;;;;:::i;:::-;-1:-1:-1;;;;;178:32:121;;;160:51;;148:2;133:18;1613:34:98;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1101:28:13;;;;;1139:40;;;640:24435:98;;;;;;;;;;:::o;:::-;;;;;;;;:::o;14:203:121:-;640:24435:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620002635760003560e01c806393afc31a1162000147578063c66b8ed211620000b9578063dc003d5a1162000078578063dc003d5a1462000704578063eafef46e1462000739578063f8739315146200076f578063fa7626d41462000787578063fd7b2d9114620007a357600080fd5b8063c66b8ed2146200066f578063cccfc69c14620006a4578063d484068014620006bc578063d833c1bd14620006d4578063d8fd11ca14620006ec57600080fd5b8063ba414fa61162000106578063ba414fa614620005cc578063bb68c61214620005f5578063bca67dc3146200060d578063bfb40bc01462000625578063c1abfa11146200064a57600080fd5b806393afc31a146200055f57806397dc6201146200056c578063994f817414620005845780639df2794a146200059c578063aa95bcbd14620005b457600080fd5b80633ea6462711620001e15780635ec77a8111620001a05780635ec77a8114620004b1578063626722f414620004d65780636e7b3afe14620004ee5780637479208b14620005065780637d458e7b146200052b57600080fd5b80633ea6462714620003815780634115e42b146200039957806349ce899714620003b1578063592113d014620004655780635c012803146200049957600080fd5b80631409a2e4116200022e5780631409a2e414620002d25780631723c24714620002f75780631a287b41146200030f5780631dcaa70d146200032757806335cf4680146200036957600080fd5b806308c31d3514620002705780630a9254e4146200028a5780630bc62bf314620002a257806313dcb08714620002ba57600080fd5b366200026b57005b600080fd5b3480156200027d57600080fd5b5062000288620007d9565b005b3480156200029757600080fd5b506200028862000879565b348015620002af57600080fd5b506200028862000d80565b348015620002c757600080fd5b5062000288620010ac565b348015620002df57600080fd5b5062000288620002f136600462003eba565b62001194565b3480156200030457600080fd5b50620002886200139f565b3480156200031c57600080fd5b50620002886200163e565b3480156200033457600080fd5b506200034c6200034636600462003eeb565b620016d6565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200037657600080fd5b50620002886200176b565b3480156200038e57600080fd5b506200028862001834565b348015620003a657600080fd5b5062000288620018d8565b348015620003be57600080fd5b506200044c620003d036600462003eeb565b6078602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949563ffffffff80861696600160201b87049091169561ffff600160401b820416956001600160a01b03600160501b9092048216959094909360ff8216936101009092048316929091168b565b604051620003609b9a9998979695949392919062003f3e565b3480156200047257600080fd5b506200048a6200048436600462003ff6565b620019bc565b60405190815260200162000360565b348015620004a657600080fd5b506200028862001e73565b348015620004be57600080fd5b5062000288620004d0366004620040be565b62001f12565b348015620004e357600080fd5b506200028862001fb5565b348015620004fb57600080fd5b50620002886200207a565b3480156200051357600080fd5b506200048a620005253660046200411c565b620020da565b3480156200053857600080fd5b50620005506200054a36600462003eeb565b62002225565b60405162000360919062004182565b3480156200028857600080fd5b3480156200057957600080fd5b506200028862002241565b3480156200059157600080fd5b5062000288620022df565b348015620005a957600080fd5b50620002886200237b565b348015620005c157600080fd5b506200028862002461565b348015620005d957600080fd5b50620005e4620025b8565b604051901515815260200162000360565b3480156200060257600080fd5b5062000288620026ed565b3480156200061a57600080fd5b5062000288620027b2565b3480156200063257600080fd5b50620002886200064436600462003eeb565b62002848565b3480156200065757600080fd5b506200048a62000669366004620041d1565b62002933565b3480156200067c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006200034c565b348015620006b157600080fd5b506200028862002a85565b348015620006c957600080fd5b506200028862002b4e565b348015620006e157600080fd5b506200028862002bc6565b348015620006f957600080fd5b506200028862002c64565b3480156200071157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006200034c565b3480156200074657600080fd5b506200034c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156200077c57600080fd5b506200028862002e20565b3480156200079457600080fd5b50600054620005e49060ff1681565b348015620007b057600080fd5b506200034c7f000000000000000000000000000000000000000000000000000000000000000081565b6000806006604051620007ec9062003de8565b620007f992919062004212565b604051809103906000f08015801562000816573d6000803e3d6000fd5b5090506200087662000854633b9aca006d1d16d8d16802617c51df80000000600185608560009054906101000a90046001600160a01b0316620020da565b600260405180606001604052806027815260200162006d5e6027913962002f32565b50565b607b80546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166001600160a01b03199283168117909355607c80547f0000000000000000000000000000000000000000000000000000000000000000909216919092161790556040513090620008f89062003df6565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200092c573d6000803e3d6000fd5b50607d80546001600160a01b0319166001600160a01b03928316179055607b5460405191169030906200095f9062003df6565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000993573d6000803e3d6000fd5b50607f80546001600160a01b0319166001600160a01b03928316179055607b546040519116903090620009c69062003df6565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620009fa573d6000803e3d6000fd5b50607e80546001600160a01b0319166001600160a01b03928316179055607b54607d5460405163f404df8f60e01b8152908316600482015291169063f404df8f90602401600060405180830381600087803b15801562000a5957600080fd5b505af115801562000a6e573d6000803e3d6000fd5b5050607c54607d54604051636cdaa42160e01b81526001600160a01b03918216600482015291169250636cdaa4219150602401600060405180830381600087803b15801562000abc57600080fd5b505af115801562000ad1573d6000803e3d6000fd5b50506002608055505068056bc75e2d631000006081556084805465ffffffffffff1916650bb80025d78017905562000b0c61fa004262004290565b6084805463ffffffff9290921666010000000000000269ffffffff00000000000019909216919091179055607d54608054604051630a10513360e11b815260048101919091523060248201526001600160a01b0390911690631420a26690604401600060405180830381600087803b15801562000b8857600080fd5b505af115801562000b9d573d6000803e3d6000fd5b5050607e54608054604051630ba4ccb560e21b815260048101919091523060248201526001600160a01b039091169250632e9332d49150604401600060405180830381600087803b15801562000bf257600080fd5b505af115801562000c07573d6000803e3d6000fd5b506001925062000c15915050565b60405190808252806020026020018201604052801562000c3f578160200160208202803683370190505b50805162000c569160839160209091019062003e04565b50607f54608380546001600160a01b039092169160009062000c7c5762000c7c620042b7565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000601260405162000cbc9062003de8565b62000cc9929190620042cd565b604051809103906000f08015801562000ce6573d6000803e3d6000fd5b50608560006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000600660405162000d1f9062003de8565b62000d2c92919062004212565b604051809103906000f08015801562000d49573d6000803e3d6000fd5b50608680546001600160a01b0319166001600160a01b03929092169190911790556084805462ffffff60501b191690556000607955565b60008062000d92600160815462002f6e565b905062000dca6084600a9054906101000a900460ff1660006040518060600160405280602c815260200162006e23602c913962003203565b607f546081546000916001600160a01b031690630d51d53c90859062000df39060649062004323565b6081546086546084546040516001600160e01b031960e088901b16815262000e43959493926000926001600160a01b039091169161ffff600160201b8304169163ffffffff169060040162004339565b6020604051808303816000875af115801562000e63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e8991906200437c565b905062000ec16084600a9054906101000a900460ff16600160405180606001604052806027815260200162006cc56027913962003203565b62000eef826000015460641460016040518060600160405280602c815260200162006eeb602c913962003203565b607f54608654608454604051630354754f60e21b81526001600160a01b0393841693630d51d53c9362000f45938993606493849360009391169161ffff600160201b8304169163ffffffff169060040162004339565b6020604051808303816000875af115801562000f65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f8b91906200437c565b905062000fd7826000015460001460016040518060400160405280601781526020017f636f6d6d69746d656e74206e6f7420616363657074656400000000000000000081525062003203565b607f54608654608454604051630354754f60e21b81526000936001600160a01b0390811693630d51d53c9362001031938a9360649384938a939290911691600160201b820461ffff169163ffffffff169060040162004339565b6020604051808303816000875af19250505080156200106f575060408051601f3d908101601f191682019092526200106c918101906200437c565b60015b6200107d575060016200107f565b505b620010a681600160405180606001604052806027815260200162006d176027913962003203565b50505050565b6000806006604051620010bf9062003de8565b620010cc92919062004212565b604051809103906000f080158015620010e9573d6000803e3d6000fd5b5090506000806012604051620010ff9062003de8565b6200110c929190620042cd565b604051809103906000f08015801562001129573d6000803e3d6000fd5b509050620011906200114b6329b927006601c6bf5263400060018587620020da565b67136dcc951d8c00006040518060400160405280601c81526020017f657870656374656420312e34205745544820636f6c6c61746572616c0000000081525062002f32565b5050565b60008281526078602052604090206004015482906001600160a01b03610100909104163314620011e15760405162461bcd60e51b8152600401620011d89062004396565b60405180910390fd5b6000838152607860205260409020600601546001600160a01b03166200121061016084016101408501620043cd565b6001600160a01b0316146200127b5760405162461bcd60e51b815260206004820152602a60248201527f5072696e636970616c20746f6b656e20616464726573732063616e6e6f74206260448201526932903ab83230ba32b21760b11b6064820152608401620011d8565b60008381526078602052604090206005015461012083013514620012e25760405162461bcd60e51b815260206004820152601c60248201527f4d61726b65742049642063616e6e6f7420626520757064617465642e000000006044820152606401620011d8565b60008381526078602052604090208290620012fe82826200445b565b50506000838152607860205260409020620013199062003243565b827f3639fd8e82fc21d99ff6df2a4a03995fa53f752fddd525d8a9aadccefa788aa06200134f61012085016101008601620043cd565b6101208501356200136961016087016101408801620043cd565b604080516001600160a01b03948516815260208101939093529216818301528535606082015290519081900360800190a2505050565b600080620013b1600160815462002f6e565b607e5460405163079a69e760e21b81529192506001600160a01b031690631e69a79c90620013e790859060839060040162004628565b600060405180830381600087803b1580156200140257600080fd5b505af115801562001417573d6000803e3d6000fd5b5050607d54608154608654608454604051630354754f60e21b8152600096506001600160a01b039485169550630d51d53c9462001479948a9460649491938a9390911691600160201b810461ffff169163ffffffff9091169060040162004339565b6020604051808303816000875af1925050508015620014b7575060408051601f3d908101601f19168201909252620014b4918101906200437c565b60015b620014c557506001620014c7565b505b620014ee8160016040518060600160405280602e815260200162006e4f602e913962003203565b607e5460405163079a69e760e21b81526001600160a01b0390911690631e69a79c906200152390869060829060040162004628565b600060405180830381600087803b1580156200153e57600080fd5b505af115801562001553573d6000803e3d6000fd5b50506084805460ff60501b19811691829055607d54608154608654604051630354754f60e21b81526001600160a01b039384169750630d51d53c9650620015bc958b9560009586941692600160201b90920461ffff169163ffffffff9091169060040162004339565b6020604051808303816000875af1158015620015dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200160291906200437c565b50620016396084600a9054906101000a900460ff16600160405180606001604052806027815260200162006cc56027913962003203565b505050565b6000806200165a60016b033b2e3c9fd0803ce800000062002f6e565b607e546040516310d18eff60e01b81529192506001600160a01b0316906310d18eff906200169090849060829060040162004706565b6020604051808303816000875af1158015620016b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200163991906200437c565b604051633d36902960e01b8152600481018290526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d36902990602401602060405180830381865afa1580156200173f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200176591906200472c565b92915050565b60008060066040516200177e9062003de8565b6200178b92919062004212565b604051809103906000f080158015620017a8573d6000803e3d6000fd5b5090506000806012604051620017be9062003de8565b620017cb9291906200474c565b604051809103906000f080158015620017e8573d6000803e3d6000fd5b509050620011906200180b640211c41e00661f9396c2c3800060018587620020da565b670de0b6b3a764000060405180606001604052806022815260200162006dc46022913962002f32565b6000806006604051620018479062003de8565b6200185492919062004212565b604051809103906000f08015801562001871573d6000803e3d6000fd5b50905062000876620018b3670de0b6b3a76400006d1d16d8d16802617c51df80000000600185608560009054906101000a90046001600160a01b0316620020da565b6365065ab760405180606001604052806025815260200162006ec66025913962002f32565b600080620018ec6001633b9aca0062002f6e565b607d54608654608454604051630354754f60e21b81529394506000936001600160a01b0393841693630d51d53c93620019479389936064938993849391169161ffff600160201b8304169163ffffffff169060040162004339565b6020604051808303816000875af192505050801562001985575060408051601f3d908101601f1916820190925262001982918101906200437c565b60015b620019935750600162001995565b505b620016398160016040518060600160405280603d815260200162006de6603d913962003203565b60008781526078602052604081203390620019d78162003243565b60018101546001600160a01b03878116600160501b909204161462001a3f5760405162461bcd60e51b815260206004820152601c60248201527f4d69736d61746368696e6720636f6c6c61746572616c20746f6b656e000000006044820152606401620011d8565b600181015461ffff600160401b9091048116908616101562001a9c5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420696e746572657374207261746560581b6044820152606401620011d8565b600181015463ffffffff600160201b9091048116908516111562001b035760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964206c6f616e206d6178206475726174696f6e000000000000006044820152606401620011d8565b60008a8152607a6020526040902062001b1c90620033fd565b158062001b3e575060008a8152607a6020526040902062001b3e908362003408565b62001b8c5760405162461bcd60e51b815260206004820181905260248201527f756e617574686f72697a656420636f6d6d69746d656e7420626f72726f7765726044820152606401620011d8565b805489111562001bbd5780546040516375d44cf160e11b81526004810191909152602481018a9052604401620011d8565b600381015460048201546001830154600684015460009362001bfd938e93919260ff909116916001600160a01b03600160501b90910481169116620020da565b90508089101562001c2c5760405163b744c71960e01b815260048101829052602481018a9052604401620011d8565b6002600483015460ff16600581111562001c4a5762001c4a62003f05565b148062001c71575060048083015460ff16600581111562001c6f5762001c6f62003f05565b145b1562001ce1578860011462001ce15760405162461bcd60e51b815260206004820152602f60248201527f696e76616c696420636f6d6d69746d656e7420636f6c6c61746572616c20616d60448201526e6f756e7420666f722045524337323160881b6064820152608401620011d8565b6002600483015460ff16600581111562001cff5762001cff62003f05565b148062001d2757506003600483015460ff16600581111562001d255762001d2562003f05565b145b1562001d90578782600201541462001d905760405162461bcd60e51b815260206004820152602560248201527f696e76616c696420636f6d6d69746d656e7420636f6c6c61746572616c20746f6044820152641ad95b925960da1b6064820152608401620011d8565b62001de78383600501548460060160009054906101000a90046001600160a01b03168d86600101600a9054906101000a90046001600160a01b03168e8e8960040160009054906101000a900460ff168d8f6200342d565b935062001e0c848360040160019054906101000a90046001600160a01b03166200356e565b5062001e198b8b620035c3565b604080516001600160a01b0385168152602081018c90529081018590528b907f7839c0e772fbc0df2f1be83221fb8cd10f50be73dac060cbb277ee5c856219309060600160405180910390a2505050979650505050505050565b600080600660405162001e869062003de8565b62001e9392919062004212565b604051809103906000f08015801562001eb0573d6000803e3d6000fd5b509050600080601260405162001ec69062003de8565b62001ed39291906200474c565b604051809103906000f08015801562001ef0573d6000803e3d6000fd5b509050620011906200180b633b9aca0066038d7ea4c6800060018587620020da565b60008381526078602052604090206004015483906001600160a01b0361010090910416331462001f565760405162461bcd60e51b8152600401620011d89062004396565b6000848152607a6020526040812090818162001f73828262003e6e565b5050505062001f84848484620035ec565b60405184907f04224de4972d2a55e811df57692f065a266ea975d06938d50b3cb33b498b161790600090a250505050565b60008062001fc96001633b9aca0062002f6e565b607e546004820154604080516060810190915260238082529394506200200e936001600160a01b03938416936101009093049092169162006ea3602083013962003653565b607e546040516340b578d360e01b81526001600160a01b03909116906340b578d390620020429085908590600401620047aa565b600060405180830381600087803b1580156200205d57600080fd5b505af115801562002072573d6000803e3d6000fd5b505050505050565b6000601681620020906001633b9aca0062002f6e565b90506200209e8383620035c3565b6200163982608154620020b2919062004323565b82600001541460016040518060600160405280602c815260200162006eeb602c913962003203565b600080846005811115620020f257620020f262003f05565b0362002101575060006200221c565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002143573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021699190620047c1565b9050600186600581111562002182576200218262003f05565b03620021f057846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620021c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021ed9190620047c1565b91505b6200221788620022018385620047e6565b6200220e90600a620048ff565b896001620036a1565b925050505b95945050505050565b6000818152607a60205260409020606090620017659062003708565b6000806006604051620022549062003de8565b6200226192919062004212565b604051809103906000f0801580156200227e573d6000803e3d6000fd5b50905062000876620022a16329b927006601c6bf526340006003600086620020da565b60026040518060400160405280601a81526020017f65787065637465642032204e46547320636f6c6c61746572616c00000000000081525062002f32565b6000806006604051620022f29062003de8565b620022ff92919062004212565b604051809103906000f0801580156200231c573d6000803e3d6000fd5b5090506200087662002356633b9aca0069d3c21bcecceda1000000600185608560009054906101000a90046001600160a01b0316620020da565b633b9aca0060405180606001604052806026815260200162006e7d6026913962002f32565b6000806200238f6002633b9aca0062002f6e565b607d54608654608454604051630354754f60e21b81529394506000936001600160a01b0393841693630d51d53c93620023ec93899360649360029360169391169161ffff600160201b8304169163ffffffff169060040162004339565b6020604051808303816000875af19250505080156200242a575060408051601f3d908101601f1916820190925262002427918101906200437c565b60015b62002438575060016200243a565b505b620016398160016040518060600160405280603f815260200162006d85603f913962003203565b60008062002473600160815462002f6e565b607e5460405163079a69e760e21b81529192506001600160a01b031690631e69a79c90620024a990859060839060040162004628565b600060405180830381600087803b158015620024c457600080fd5b505af1158015620024d9573d6000803e3d6000fd5b5050607f54608154608654608454604051630354754f60e21b8152600096506001600160a01b039485169550630d51d53c946200253a948a9489949193859390911691600160201b810461ffff169163ffffffff9091169060040162004339565b6020604051808303816000875af11580156200255a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200258091906200437c565b9050620016396084600a9054906101000a900460ff16600160405180606001604052806027815260200162006cc56027913962003203565b60008054610100900460ff1615620025d95750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620026e85760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200266a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162004936565b60408051601f1981840301815290829052620026869162004969565b6000604051808303816000865af19150503d8060008114620026c5576040519150601f19603f3d011682016040523d82523d6000602084013e620026ca565b606091505b5091505080806020019051810190620026e4919062004987565b9150505b919050565b6000806009604051620027009062003de8565b6200270d92919062004212565b604051809103906000f0801580156200272a573d6000803e3d6000fd5b5090506000806006604051620027409062003de8565b6200274d92919062004212565b604051809103906000f0801580156200276a573d6000803e3d6000fd5b5090506200119062002790640165a0bc00697ceff6ce7e0714c0000060018587620020da565b600b60405180606001604052806021815260200162006f176021913962002f32565b6000806006604051620027c59062003de8565b620027d292919062004212565b604051809103906000f080158015620027ef573d6000803e3d6000fd5b5090506200087662002826600169d3c21bcecceda1000000600185608560009054906101000a90046001600160a01b0316620020da565b600160405180606001604052806026815260200162006e7d6026913962002f32565b60008181526078602052604090206004015481906001600160a01b036101009091041633146200288c5760405162461bcd60e51b8152600401620011d89062004396565b60008281526078602090815260408083208381556001810180546001600160f01b031916905560028101849055600381018490556004810180546001600160a81b03191690556005810184905560060180546001600160a01b0319169055607a909152812090818162002900828262003e6e565b50506040518492507fd278ecade1e148fd8320435541f72d6a02dff654c1577ae2cadecba16e8ef2149150600090a25050565b60798054600091826200294683620049ab565b909155509050336200296161012086016101008701620043cd565b6001600160a01b031614620029b95760405162461bcd60e51b815260206004820152601f60248201527f756e617574686f72697a656420636f6d6d69746d656e742063726561746f72006044820152606401620011d8565b60008181526078602052604090208490620029d582826200445b565b50506000818152607860205260409020620029f09062003243565b620029fd818484620035ec565b807f16b531d6c0bbff6da27b922e61fc528bb3ae5b435f9e56fb87e399afb6ae520a62002a3361012087016101008801620043cd565b61012087013562002a4d61016089016101408a01620043cd565b604080516001600160a01b03948516815260208101939093529216818301528735606082015290519081900360800190a29392505050565b600080600660405162002a989062003de8565b62002aa592919062004212565b604051809103906000f08015801562002ac2573d6000803e3d6000fd5b509050600080601260405162002ad89062003de8565b62002ae59291906200474c565b604051809103906000f08015801562002b02573d6000803e3d6000fd5b5090506200119062002b25640211c41e0066038d7ea4c6800060018587620020da565b677b5884e8cbac000060405180606001604052806022815260200162006dc46022913962002f32565b600080600660405162002b619062003de8565b62002b6e92919062004212565b604051809103906000f08015801562002b8b573d6000803e3d6000fd5b509050620008766200282660016d1d16d8d16802617c51df80000000600185608560009054906101000a90046001600160a01b0316620020da565b600080600660405162002bd99062003de8565b62002be692919062004212565b604051809103906000f08015801562002c03573d6000803e3d6000fd5b5090506200087662002c26631dcd65006601c6bf526340006002600086620020da565b60016040518060400160405280601981526020017f65787065637465642031204e465420636f6c6c61746572616c0000000000000081525062002f32565b60008062002c76600160815462002f6e565b607e5460405163079a69e760e21b81529192506001600160a01b031690631e69a79c9062002cac90859060839060040162004628565b600060405180830381600087803b15801562002cc757600080fd5b505af115801562002cdc573d6000803e3d6000fd5b5050607e5460405163079a69e760e21b81526001600160a01b039091169250631e69a79c915062002d1590859060829060040162004628565b600060405180830381600087803b15801562002d3057600080fd5b505af115801562002d45573d6000803e3d6000fd5b5050607d54608154608654608454604051630354754f60e21b81526001600160a01b039485169650630d51d53c955062002da3948994600094909385939290911691600160201b820461ffff169163ffffffff169060040162004339565b6020604051808303816000875af115801562002dc3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002de991906200437c565b50620011906084600a9054906101000a900460ff16600160405180606001604052806027815260200162006cc56027913962003203565b60008062002e346001633b9aca0062002f6e565b6004810154607e546040805160608101909152602380825293945062002e78936101009093046001600160a01b039081169392169162006ea3602083013962003653565b607e54604051632b1cf2cf60e01b8152600481018490526001600160a01b0390911690632b1cf2cf90602401600060405180830381600087803b15801562002ebf57600080fd5b505af115801562002ed4573d6000803e3d6000fd5b50505050620011908160040160019054906101000a90046001600160a01b031660006040518060400160405280601e81526020017f54686520636f6d6d69746d656e7420776173206e6f742064656c65746564000081525062003653565b818314620016395760008051602062006d3e8339815191528160405162002f5a9190620049f5565b60405180910390a162001639838362003717565b6000805260786020526080547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa7149556085547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa714a80546001600160a01b039283166001600160a01b03199091161790556081547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa71449081556084547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa714580546601000000000000830463ffffffff90811669ffffffffffff0000000019909216908416600160201b90810261ffff60401b191691909117930461ffff16600160401b029290921763ffffffff1916919091179055607e547f081a134e404bb5bca49ef6b8477e647c1205f6d43d6a20bb692a968ac5aa71488054610100600160a81b031981166101009390951692909202938417815591928592916001600160a81b03191660ff19909116176001836005811115620030ed57620030ed62003f05565b0217905550620031006012600a620048ff565b6200310c908362004a26565b6003820155600183600581111562003128576200312862003f05565b036200316157608654600182018054600160501b600160f01b0319166001600160a01b03909216600160501b0291909117905562001765565b600283600581111562003178576200317862003f05565b03620031b257600181018054600160501b600160f01b0319167309e46f287cb791987b6228c32669ea5126aa105d60521b17905562001765565b6003836005811115620031c957620031c962003f05565b036200176557600181018054600160501b600160f01b0319167309e46f287cb791987b6228c32669ea5126aa105d60521b17905592915050565b81151583151514620016395760008051602062006d3e833981519152816040516200322f9190620049f5565b60405180910390a16200163983836200380e565b600181015463ffffffff428116911611620032965760405162461bcd60e51b8152602060048201526012602482015271195e1c1a5c99590818dbdb5b5a5d1b595b9d60721b6044820152606401620011d8565b8054620032f05760405162461bcd60e51b815260206004820152602160248201527f636f6d6d69746d656e74207072696e636970616c20616c6c6f636174696f6e206044820152600360fc1b6064820152608401620011d8565b6000600482015460ff1660058111156200330e576200330e62003f05565b14620008765760008160030154116200336a5760405162461bcd60e51b815260206004820152601d60248201527f636f6d6d69746d656e7420636f6c6c61746572616c20726174696f20300000006044820152606401620011d8565b6001600482015460ff16600581111562003388576200338862003f05565b036200087657600281015415620008765760405162461bcd60e51b815260206004820152603260248201527f636f6d6d69746d656e7420636f6c6c61746572616c20746f6b656e206964206d6044820152710757374206265203020666f722045524332360741b6064820152608401620011d8565b600062001765825490565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b6040805160e081018252606060a08201819052600060c083018190528c83526001600160a01b038c1660208401529282018a905263ffffffff85168183015261ffff84166080830152828660058111156200348c576200348c62003f05565b14620035485760408051600180825281830190925290816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181620034a75790505090506040518060800160405280620034f48862003963565b600281111562003508576200350862003f05565b81526020018981526020018881526020018a6001600160a01b0316815250816000815181106200353c576200353c620042b7565b60200260200101819052505b6084805460ff60601b1916600160601b17905560019d9c50505050505050505050505050565b6084805460ff60501b1916600160501b17908190556040805160608101909152602b808252600092620035ba92600160601b90910460ff16916001919062006cec602083013962003203565b50600192915050565b60008281526078602052604081208054839290620035e390849062004323565b90915550505050565b60005b81811015620010a6576200363d838383818110620036115762003611620042b7565b9050602002016020810190620036289190620043cd565b6000868152607a602052604090209062003a5f565b50806200364a81620049ab565b915050620035ef565b816001600160a01b0316836001600160a01b031614620016395760008051602062006d3e833981519152816040516200368d9190620049f5565b60405180910390a162001639838362003a76565b600080620036b186868662003b70565b90506001836002811115620036ca57620036ca62003f05565b148015620036eb575060008480620036e657620036e662004a40565b868809115b156200221c57620036fe60018262004a56565b9695505050505050565b60606000620034268362003c25565b80821462001190577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200378a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620037c3919062004a6c565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620037fc919062004aa5565b60405180910390a16200119062003c83565b8015158215151462001190577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620038859060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a160008051602062006d3e83398151915281620038c7576040518060400160405280600581526020016466616c736560d81b815250620038e5565b604051806040016040528060048152602001637472756560e01b8152505b604051620038f4919062004ad0565b60405180910390a160008051602062006d3e8339815191528262003936576040518060400160405280600581526020016466616c736560d81b81525062003954565b604051806040016040528060048152602001637472756560e01b8152505b604051620037fc919062004b0f565b600060018260058111156200397c576200397c62003f05565b036200398a57506000919050565b6002826005811115620039a157620039a162003f05565b1480620039c257506004826005811115620039c057620039c062003f05565b145b15620039d057506001919050565b6003826005811115620039e757620039e762003f05565b148062003a085750600582600581111562003a065762003a0662003f05565b145b1562003a1657506002919050565b60405162461bcd60e51b815260206004820152601760248201527f556e6b6e6f776e20436f6c6c61746572616c20547970650000000000000000006044820152606401620011d8565b600062003426836001600160a01b03841662003d96565b806001600160a01b0316826001600160a01b03161462001190577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162003afe9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162003b37919062004b3a565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620037fc919062004b7f565b600080806000198587098587029250828110838203039150508060000362003baf5783828162003ba45762003ba462004a40565b049250505062003426565b80841162003bbc57600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60608160000180548060200260200160405190810160405280929190818152602001828054801562003c7757602002820191906000526020600020905b81548152602001906001019080831162003c62575b50505050509050919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562003d855760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262003d20929160200162004936565b60408051601f198184030181529082905262003d3c9162004969565b6000604051808303816000865af19150503d806000811462003d7b576040519150601f19603f3d011682016040523d82523d6000602084013e62003d80565b606091505b505050505b6000805461ff001916610100179055565b600081815260018301602052604081205462003ddf5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562001765565b50600062001765565b610ca28062004bab83390190565b611478806200584d83390190565b82805482825590600052602060002090810192821562003e5c579160200282015b8281111562003e5c57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062003e25565b5062003e6a92915062003e89565b5090565b50805460008255906000526020600020908101906200087691905b5b8082111562003e6a576000815560010162003e8a565b6000610160828403121562003eb457600080fd5b50919050565b600080610180838503121562003ecf57600080fd5b8235915062003ee2846020850162003ea0565b90509250929050565b60006020828403121562003efe57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6006811062003f3a57634e487b7160e01b600052602160045260246000fd5b9052565b8b815263ffffffff8b811660208301528a16604082015261ffff891660608201526001600160a01b03888116608083015260a0820188905260c0820187905261016082019062003f9260e084018862003f1b565b80861661010084015284610120840152808416610140840152509c9b505050505050505050505050565b6001600160a01b03811681146200087657600080fd5b61ffff811681146200087657600080fd5b63ffffffff811681146200087657600080fd5b600080600080600080600060e0888a0312156200401257600080fd5b8735965060208801359550604088013594506060880135935060808801356200403b8162003fbc565b925060a08801356200404d8162003fd2565b915060c08801356200405f8162003fe3565b8091505092959891949750929550565b60008083601f8401126200408257600080fd5b50813567ffffffffffffffff8111156200409b57600080fd5b6020830191508360208260051b8501011115620040b757600080fd5b9250929050565b600080600060408486031215620040d457600080fd5b83359250602084013567ffffffffffffffff811115620040f357600080fd5b62004101868287016200406f565b9497909650939450505050565b600681106200087657600080fd5b600080600080600060a086880312156200413557600080fd5b8535945060208601359350604086013562004150816200410e565b92506060860135620041628162003fbc565b91506080860135620041748162003fbc565b809150509295509295909350565b6020808252825182820181905260009190848201906040850190845b81811015620041c55783516001600160a01b0316835292840192918401916001016200419e565b50909695505050505050565b60008060006101808486031215620041e857600080fd5b620041f4858562003ea0565b925061016084013567ffffffffffffffff811115620040f357600080fd5b6080815260006200423c60808301600981526854657374205553444360b81b602082015260400190565b828103602084015262004261816005815264545553444360d81b602082015260400190565b91505083604083015260ff831660608301529392505050565b634e487b7160e01b600052601160045260246000fd5b63ffffffff818116838216019080821115620042b057620042b06200427a565b5092915050565b634e487b7160e01b600052603260045260246000fd5b608081526000620042fe60808301601081526f0a8cae6e840aee4c2e0e0cac8408aa8960831b602082015260400190565b8281036020840152620042618160058152640a8ae8aa8960db1b602082015260400190565b818103818111156200176557620017656200427a565b9687526020870195909552604086019390935260608501919091526001600160a01b0316608084015261ffff1660a083015263ffffffff1660c082015260e00190565b6000602082840312156200438f57600080fd5b5051919050565b6020808252601e908201527f756e617574686f72697a656420636f6d6d69746d656e74206c656e6465720000604082015260600190565b600060208284031215620043e057600080fd5b8135620034268162003fbc565b60008135620017658162003fe3565b60008135620017658162003fd2565b60008135620017658162003fbc565b6000813562001765816200410e565b600682106200444857634e487b7160e01b600052602160045260246000fd5b60ff1981541660ff831681178255505050565b81358155600181016200448c6200447560208501620043ed565b825463ffffffff191663ffffffff91909116178255565b620044c06200449e60408501620043ed565b825467ffffffff00000000191660209190911b67ffffffff0000000016178255565b620044f3620044d260608501620043fc565b825461ffff60401b191660409190911b69ffff000000000000000016178255565b6200452f62004505608085016200440b565b828054600160501b600160f01b03191660509290921b600160501b600160f01b0316919091179055565b5060a0820135600282015560c0820135600382015560048101620045616200455a60e085016200441a565b8262004429565b6200459a6200457461010085016200440b565b828054610100600160a81b03191660089290921b610100600160a81b0316919091179055565b50610120820135600582015562001190620045b961014084016200440b565b6006830180546001600160a01b0319166001600160a01b0392909216919091179055565b6000815480845260208085019450836000528060002060005b838110156200461d5781546001600160a01b031687529582019560019182019101620045f6565b509495945050505050565b828152604060208201526000620046436040830184620045dd565b949350505050565b80548252600181015463ffffffff80821660208501526200467960408501828460201c1663ffffffff169052565b5061ffff604082901c16606084015260501c6001600160a01b039081166080840152600282015460a0840152600382015460c0840152600482015490620046c760e0850160ff841662003f1b565b620046e36101008501828460081c166001600160a01b03169052565b50506005810154610120830152600601546001600160a01b031661014090910152565b60006101806200471783866200464b565b806101608401526200221c81840185620045dd565b6000602082840312156200473f57600080fd5b8151620034268162003fbc565b6080815260096080820152680a8cae6e840ae8aa8960bb1b60a082015260c0602082015260006200479260c0830160058152640a8ae8aa8960db1b602082015260400190565b905083604083015260ff831660608301529392505050565b82815261018081016200342660208301846200464b565b600060208284031215620047d457600080fd5b815160ff811681146200342657600080fd5b60ff81811683821601908111156200176557620017656200427a565b600181815b80851115620048435781600019048211156200482757620048276200427a565b808516156200483557918102915b93841c939080029062004807565b509250929050565b6000826200485c5750600162001765565b816200486b5750600062001765565b81600181146200488457600281146200488f57620048af565b600191505062001765565b60ff841115620048a357620048a36200427a565b50506001821b62001765565b5060208310610133831016604e8410600b8410161715620048d4575081810a62001765565b620048e0838362004802565b8060001904821115620048f757620048f76200427a565b029392505050565b60006200342660ff8416836200484b565b60005b838110156200492d57818101518382015260200162004913565b50506000910152565b6001600160e01b03198316815281516000906200495b81600485016020870162004910565b919091016004019392505050565b600082516200497d81846020870162004910565b9190910192915050565b6000602082840312156200499a57600080fd5b815180151581146200342657600080fd5b600060018201620049c057620049c06200427a565b5060010190565b60008151808452620049e181602086016020860162004910565b601f01601f19169290920160200192915050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620034266080830184620049c7565b80820281158282048414176200176557620017656200427a565b634e487b7160e01b600052601260045260246000fd5b808201808211156200176557620017656200427a565b60408152600062004a9760408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062004a9760408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062004afb60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152620046438185620049c7565b60408152600062004afb60408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062004b6560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062004b6560408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60a06040523480156200001157600080fd5b5060405162000ca238038062000ca2833981016040819052620000349162000203565b838360036200004483826200031e565b5060046200005382826200031e565b50505060ff811660805262000069338362000073565b5050505062000412565b6001600160a01b038216620000ce5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000e29190620003ea565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016657600080fd5b81516001600160401b03808211156200018357620001836200013e565b604051601f8301601f19908116603f01168101908282118183101715620001ae57620001ae6200013e565b81604052838152602092508683858801011115620001cb57600080fd5b600091505b83821015620001ef5785820183015181830184015290820190620001d0565b600093810190920192909252949350505050565b600080600080608085870312156200021a57600080fd5b84516001600160401b03808211156200023257600080fd5b620002408883890162000154565b955060208701519150808211156200025757600080fd5b50620002668782880162000154565b93505060408501519150606085015160ff811681146200028557600080fd5b939692955090935050565b600181811c90821680620002a557607f821691505b602082108103620002c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200013957600081815260208120601f850160051c81016020861015620002f55750805b601f850160051c820191505b81811015620003165782815560010162000301565b505050505050565b81516001600160401b038111156200033a576200033a6200013e565b62000352816200034b845462000290565b84620002cc565b602080601f8311600181146200038a5760008415620003715750858301515b600019600386901b1c1916600185901b17855562000316565b600085815260208120601f198616915b82811015620003bb578886015182559484019460019091019084016200039a565b5085821015620003da5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200040c57634e487b7160e01b600052601160045260246000fd5b92915050565b6080516108746200042e600039600061011b01526108746000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461014557806370a082311461015857806395d89b4114610181578063a457c2d714610189578063a9059cbb1461019c578063dd62ed3e146101af57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c2565b6040516100c391906106be565b60405180910390f35b6100df6100da366004610728565b610254565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610752565b61026e565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100c3565b6100df610153366004610728565b610292565b6100f361016636600461078e565b6001600160a01b031660009081526020819052604090205490565b6100b66102b4565b6100df610197366004610728565b6102c3565b6100df6101aa366004610728565b610343565b6100f36101bd3660046107b0565b610351565b6060600380546101d1906107e3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd906107e3565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b5050505050905090565b60003361026281858561037c565b60019150505b92915050565b60003361027c8582856104a0565b61028785858561051a565b506001949350505050565b6000336102628185856102a58383610351565b6102af919061081d565b61037c565b6060600480546101d1906107e3565b600033816102d18286610351565b9050838110156103365760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610287828686840361037c565b60003361026281858561051a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032d565b6001600160a01b03821661043f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ac8484610351565b9050600019811461051457818110156105075760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032d565b610514848484840361037c565b50505050565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032d565b6001600160a01b0382166105e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032d565b6001600160a01b038316600090815260208190526040902054818110156106585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610514565b600060208083528351808285015260005b818110156106eb578581018301518582016040015282016106cf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072357600080fd5b919050565b6000806040838503121561073b57600080fd5b6107448361070c565b946020939093013593505050565b60008060006060848603121561076757600080fd5b6107708461070c565b925061077e6020850161070c565b9150604084013590509250925092565b6000602082840312156107a057600080fd5b6107a98261070c565b9392505050565b600080604083850312156107c357600080fd5b6107cc8361070c565b91506107da6020840161070c565b90509250929050565b600181811c908216806107f757607f821691505b60208210810361081757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026857634e487b7160e01b600052601160045260246000fdfea264697066735822122067db7b494f86cbe61a21a91b8a496d38f6ee4afea5d8aaab40f3da02486c803764736f6c6343000811003360c060405234801561001057600080fd5b5060405161147838038061147883398101604081905261002f9161005e565b6001600160a01b039182166080521660a052610098565b6001600160a01b038116811461005b57600080fd5b50565b6000806040838503121561007157600080fd5b825161007c81610046565b602084015190925061008d81610046565b809150509250929050565b60805160a05161136e61010a600039600081816101bf0152818161042e015281816104c3015281816105e70152818161066d01526108680152600081816102eb015281816103470152818161056f015281816106eb0152818161078c0152818161092c01526109db015261136e6000f3fe6080604052600436106100ec5760003560e01c80632b1fd58a1161008a5780635fd72d16116100595780635fd72d16146102995780637cf13b53146102b9578063941675db146102d95780639a11e3391461030d57600080fd5b80632b1fd58a146102195780632e9332d414610239578063344e553d1461025957806340b578d31461027957600080fd5b80631420a266116100c65780631420a2661461016b5780631e69a79c1461018d578063201ee11e146101ad5780632b1cf2cf146101f957600080fd5b806306f33a92146100f85780630d51d53c1461012b57806310d18eff1461014b57600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50610118610113366004610a9d565b61032d565b6040519081526020015b60405180910390f35b34801561013757600080fd5b50610118610146366004610b36565b6103da565b34801561015757600080fd5b50610118610166366004610bfe565b6104a9565b34801561017757600080fd5b5061018b610186366004610c54565b610549565b005b34801561019957600080fd5b5061018b6101a8366004610c80565b6105d0565b3480156101b957600080fd5b506101e17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610122565b34801561020557600080fd5b5061018b610214366004610cb3565b610657565b34801561022557600080fd5b5061018b610234366004610cb3565b6106d5565b34801561024557600080fd5b5061018b610254366004610c54565b610766565b34801561026557600080fd5b50610118610274366004610cea565b6107bb565b34801561028557600080fd5b5061018b610294366004610dd1565b610851565b3480156102a557600080fd5b5061018b6102b4366004610df6565b61089f565b3480156102c557600080fd5b506101186102d4366004610e32565b610912565b3480156102e557600080fd5b506101e17f000000000000000000000000000000000000000000000000000000000000000081565b34801561031957600080fd5b5061018b610328366004610cb3565b6109c5565b6040516303799d4960e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906306f33a929061038a908c908c908c908c908c908c908c908c90600401610f54565b6020604051808303816000875af11580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd9190610fb1565b9998505050505050505050565b604051630592113d60e41b8152600481018890526024810187905260448101869052606481018590526001600160a01b03848116608483015261ffff841660a483015263ffffffff831660c48301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063592113d09060e4016020604051808303816000875af1158015610479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049d9190610fb1565b98975050505050505050565b60405163c1abfa1160e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c1abfa11906104fc90879087908790600401611122565b6020604051808303816000875af115801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f9190610fb1565b90505b9392505050565b604051630a10513360e11b8152600481018390526001600160a01b0382811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631420a266906044015b600060405180830381600087803b1580156105b457600080fd5b505af11580156105c8573d6000803e3d6000fd5b505050505050565b604051635ec77a8160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ec77a81906106209086908690869060040161114f565b600060405180830381600087803b15801561063a57600080fd5b505af115801561064e573d6000803e3d6000fd5b50505050505050565b6040516302fed02f60e61b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bfb40bc0906024015b600060405180830381600087803b1580156106ba57600080fd5b505af11580156106ce573d6000803e3d6000fd5b5050505050565b6040516315196bad60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a8cb5d68906024016060604051808303816000875af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190611172565b50505050565b604051630ba4ccb560e21b8152600481018390526001600160a01b0382811660248301527f00000000000000000000000000000000000000000000000000000000000000001690632e9332d49060440161059a565b60405163344e553d60e01b81526000906001600160a01b038d169063344e553d906107fe9030908f908f908f908f908f908f908f908f908f908f906004016111b0565b6020604051808303816000875af115801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190610fb1565b9c9b505050505050505050505050565b60405163050268b960e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631409a2e49061059a908590859060040161123c565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af11580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190611251565b604051637bbd53d760e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637bbd53d790610973908e908e908e908e908e908e908e908e908e908e9060040161126e565b6020604051808303816000875af1158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190610fb1565b9b9a5050505050505050505050565b604051639a11e33960e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639a11e339906024016106a0565b80356001600160a01b0381168114610a2957600080fd5b919050565b803563ffffffff81168114610a2957600080fd5b803561ffff81168114610a2957600080fd5b60008083601f840112610a6657600080fd5b50813567ffffffffffffffff811115610a7e57600080fd5b602083019150836020828501011115610a9657600080fd5b9250929050565b60008060008060008060008060e0898b031215610ab957600080fd5b610ac289610a12565b97506020890135965060408901359550610ade60608a01610a2e565b9450610aec60808a01610a42565b935060a089013567ffffffffffffffff811115610b0857600080fd5b610b148b828c01610a54565b9094509250610b27905060c08a01610a12565b90509295985092959890939650565b600080600080600080600060e0888a031215610b5157600080fd5b87359650602088013595506040880135945060608801359350610b7660808901610a12565b9250610b8460a08901610a42565b9150610b9260c08901610a2e565b905092959891949750929550565b60006101608284031215610bb357600080fd5b50919050565b60008083601f840112610bcb57600080fd5b50813567ffffffffffffffff811115610be357600080fd5b6020830191508360208260051b8501011115610a9657600080fd5b60008060006101808486031215610c1457600080fd5b610c1e8585610ba0565b925061016084013567ffffffffffffffff811115610c3b57600080fd5b610c4786828701610bb9565b9497909650939450505050565b60008060408385031215610c6757600080fd5b82359150610c7760208401610a12565b90509250929050565b600080600060408486031215610c9557600080fd5b83359250602084013567ffffffffffffffff811115610c3b57600080fd5b600060208284031215610cc557600080fd5b5035919050565b8015158114610cda57600080fd5b50565b60028110610cda57600080fd5b60008060008060008060008060008060006101408c8e031215610d0c57600080fd5b610d158c610a12565b9a50610d2360208d01610a2e565b9950610d3160408d01610a2e565b9850610d3f60608d01610a2e565b9750610d4d60808d01610a42565b965060a08c0135610d5d81610ccc565b955060c08c0135610d6d81610ccc565b945060e08c0135610d7d81610cdd565b93506101008c0135610d8e81610cdd565b92506101208c013567ffffffffffffffff811115610dab57600080fd5b610db78e828f01610a54565b915080935050809150509295989b509295989b9093969950565b6000806101808385031215610de557600080fd5b82359150610c778460208501610ba0565b600080600060608486031215610e0b57600080fd5b610e1484610a12565b9250610e2260208501610a12565b9150604084013590509250925092565b6000806000806000806000806000806101008b8d031215610e5257600080fd5b610e5b8b610a12565b995060208b0135985060408b01359750610e7760608c01610a2e565b9650610e8560808c01610a42565b955060a08b013567ffffffffffffffff80821115610ea257600080fd5b610eae8e838f01610a54565b9097509550859150610ec260c08e01610a12565b945060e08d0135915080821115610ed857600080fd5b818d0191508d601f830112610eec57600080fd5b813581811115610efb57600080fd5b8e60208260071b8501011115610f1057600080fd5b6020830194508093505050509295989b9194979a5092959850565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835289602084015288604084015263ffffffff8816606084015261ffff8716608084015260e060a0840152610f9960e084018688610f2b565b915080841660c0840152509998505050505050505050565b600060208284031215610fc357600080fd5b5051919050565b803560068110610a2957600080fd5b634e487b7160e01b600052602160045260246000fd5b60068110610fff57610fff610fd9565b9052565b8035825261101360208201610a2e565b63ffffffff16602083015261102a60408201610a2e565b63ffffffff16604083015261104160608201610a42565b61ffff16606083015261105660808201610a12565b6001600160a01b03811660808401525060a081013560a083015260c081013560c083015261108660e08201610fca565b61109360e0840182610fef565b506101006110a2818301610a12565b6001600160a01b03169083015261012081810135908301526101406110c8818301610a12565b6001600160a01b03811684830152610760565b8183526000602080850194508260005b85811015611117576001600160a01b0361110483610a12565b16875295820195908201906001016110eb565b509495945050505050565b60006101806111318387611003565b8061016084015261114581840185876110db565b9695505050505050565b8381526040602082015260006111696040830184866110db565b95945050505050565b60008060006060848603121561118757600080fd5b8351925060208401519150604084015190509250925092565b60028110610cda57610cda610fd9565b6001600160a01b038c16815263ffffffff8b811660208301528a811660408301528916606082015261ffff8816608082015286151560a082015285151560c08201526000610140611200876111a0565b8660e084015261120f866111a0565b856101008401528061012084015261122a8184018587610f2b565b9e9d5050505050505050505050505050565b82815261018081016105426020830184611003565b60006020828403121561126357600080fd5b815161054281610ccc565b600061010060018060a01b03808e16845260208d8186015260408d81870152606063ffffffff8e1681880152608061ffff8e16818901528560a08901526112b88689018d8f610f2b565b8b861660c08a015288810360e08a01528981528a965084016000805b8b81101561131d578835600381106112ea578283fd5b83528887013587840152858901358684015287611308868b01610a12565b168386015297830197918301916001016112d4565b5050809750505050505050509b9a505050505050505050505056fea26469706673582212207a5ad93669de3a22ca27c0226c099dbc6f8b2328d9f5b84089afcadf686f9d0e64736f6c6343000811003345787065637420616363657074206269642063616c6c65642061667465722065786572636973655375626d697420626964206d7573742062652063616c6c6564206265666f7265206163636570742062696453686f756c64206661696c207768656e20616363657074696e6720636f6d6d6974207477696365280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35836578706563746564206174206c65617374203220756e697473206f6620636f6c6c61746572616c53686f756c64206661696c20746f2061636365707420636f6d6d69746d656e74207769746820696e76616c696420616d6f756e7420666f7220455243373231657870656374656420312045544820726571756972656420636f6c6c61746572616c53686f756c64206661696c20746f2061636365707420636f6d6d69746d656e74207769746820696e73756666696369656e7420636f6c6c61746572616c4578706563742061636365707420626964206e6f742063616c6c6564206265666f726520657865726369736553686f756c64206661696c207768656e20616363657074696e6720617320696e76616c696420626f72726f7765726578706563746564206174206c65617374203120756e6974206f6620636f6c6c61746572616c4e6f7420746865206f776e6572206f66206372656174656420636f6d6d69746d656e74657870656374656420312c3639342e393135323535205553444320636f6c6c61746572616c436f6d6d69746d656e74206d6178207072696e636970616c20776173206e6f742064656372656d656e746564657870656374656420302e303030303131205553444320636f6c6c61746572616ca2646970667358221220aa6dca42b65adb04ffa58d5c7b45c791241a2726d5a06c239d8c653186b2386b64736f6c63430008110033",
    "sourceMap": "640:24435:98:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21864:664;;;;;;;;;;;;;:::i;:::-;;1672:1542;;;;;;;;;;;;;:::i;5846:1881::-;;;;;;;;;;;;;:::i;13180:813::-;;;;;;;;;;;;;:::i;7600:823:4:-;;;;;;;;;;-1:-1:-1;7600:823:4;;;;;:::i;:::-;;:::i;8478:1439:98:-;;;;;;;;;;;;;:::i;4558:297::-;;;;;;;;;;;;;:::i;1388:160:13:-;;;;;;;;;;-1:-1:-1;1388:160:13;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;954:32:121;;;936:51;;924:2;909:18;1388:160:13;;;;;;;;18915:789:98;;;;;;;;;;;;;:::i;15872:688::-;;;;;;;;;;;;;:::i;10725:839::-;;;;;;;;;;;;;:::i;2510:49:4:-;;;;;;;;;;-1:-1:-1;2510:49:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2510:49:4;;;;;;;-1:-1:-1;;;2510:49:4;;;;-1:-1:-1;;;;;;;;2510:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11336:3174::-;;;;;;;;;;-1:-1:-1;11336:3174:4;;;;;:::i;:::-;;:::i;:::-;;;3999:25:121;;;3987:2;3972:18;11336:3174:4;3853:177:121;16784:816:98;;;;;;;;;;;;;:::i;8690:363:4:-;;;;;;;;;;-1:-1:-1;8690:363:4;;;;;:::i;:::-;;:::i;4861:440:98:-;;;;;;;;;;;;;:::i;12463:496::-;;;;;;;;;;;;;:::i;15208:1278:4:-;;;;;;;;;;-1:-1:-1;15208:1278:4;;;;;:::i;:::-;;:::i;16783:212::-;;;;;;;;;;-1:-1:-1;16783:212:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12410:47:98:-;;;;;;;;;14210:605;;;;;;;;;;;;;:::i;22753:637::-;;;;;;;;;;;;;:::i;11570:834::-;;;;;;;;;;;;;:::i;7733:739::-;;;;;;;;;;;;;:::i;1819:584:37:-;;;;;;;;;;;;;:::i;:::-;;;6596:14:121;;6589:22;6571:41;;6559:2;6544:18;1819:584:37;6431:187:121;19933:811:98;;;;;;;;;;;;;:::i;23614:684::-;;;;;;;;;;;;;:::i;9789:260:4:-;;;;;;;;;;-1:-1:-1;9789:260:4;;;;;:::i;:::-;;:::i;6634:745::-;;;;;;;;;;-1:-1:-1;6634:745:4;;;;;:::i;:::-;;:::i;1284:98:13:-;;;;;;;;;;-1:-1:-1;1360:15:13;1284:98;;17842:826:98;;;;;;;;;;;;;:::i;20982:652::-;;;;;;;;;;;;;:::i;15034:617::-;;;;;;;;;;;;;:::i;9923:796::-;;;;;;;;;;;;;:::i;1192:86:13:-;;;;;;;;;;-1:-1:-1;1262:9:13;1192:86;;707:34;;;;;;;;;;;;;;;5307:533:98;;;;;;;;;;;;;:::i;1572:26:37:-;;;;;;;;;;-1:-1:-1;1572:26:37;;;;;;;;747:40:13;;;;;;;;;;;;;;;21864:664:98;21964:30;22075:1;22090;21997:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;21964:137;;22111:410;22133:308;22178:3;22214:12;22314:30;22370:15;22412:14;;;;;;;;;-1:-1:-1;;;;;22412:14:98;22133:27;:308::i;:::-;22455:1;22111:410;;;;;;;;;;;;;;;;;:8;:410::i;:::-;21954:574;21864:664::o;1672:1542::-;1708:12;:103;;-1:-1:-1;;;;;1262:9:13;1708:103:98;;-1:-1:-1;;;;;;1708:103:98;;;;;;;;1821:18;:69;;1360:15:13;1821:69:98;;;;;;;;;;1915:55;;1964:4;;1915:55;;;:::i;:::-;-1:-1:-1;;;;;8460:15:121;;;8442:34;;8512:15;;8507:2;8492:18;;8485:43;8392:2;8377:18;1915:55:98;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1901:11:98;:69;;-1:-1:-1;;;;;;1901:69:98;-1:-1:-1;;;;;1901:69:98;;;;;;2024:12;;1991:55;;2024:12;;;2040:4;;1991:55;;;:::i;:::-;-1:-1:-1;;;;;8460:15:121;;;8442:34;;8512:15;;8507:2;8492:18;;8485:43;8392:2;8377:18;1991:55:98;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1980:8:98;:66;;-1:-1:-1;;;;;;1980:66:98;-1:-1:-1;;;;;1980:66:98;;;;;;2098:12;;2065:55;;2098:12;;;2114:4;;2065:55;;;:::i;:::-;-1:-1:-1;;;;;8460:15:121;;;8442:34;;8512:15;;8507:2;8492:18;;8485:43;8392:2;8377:18;2065:55:98;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2056:6:98;:64;;-1:-1:-1;;;;;;2056:64:98;-1:-1:-1;;;;;2056:64:98;;;;;;2130:12;;2160:11;;2130:42;;-1:-1:-1;;;2130:42:98;;2160:11;;;2130:42;;;936:51:121;2130:12:98;;;:29;;909:18:121;;2130:42:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2183:18:98;;2225:11;;2183:55;;-1:-1:-1;;;2183:55:98;;-1:-1:-1;;;;;2225:11:98;;;2183:55;;;936:51:121;2183:18:98;;;-1:-1:-1;2183:33:98;;-1:-1:-1;909:18:121;;2183:55:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2338:1:98;2327:8;:12;-1:-1:-1;;2361:21:98;2349:9;:33;2392:15;:25;;-1:-1:-1;;2427:22:98;;;;;2472:39;2505:5;2479:15;2472:39;:::i;:::-;2459:10;:52;;;;;;;;;-1:-1:-1;;2459:52:98;;;;;;;;;2522:11;;2560:8;;2522:62;;-1:-1:-1;;;2522:62:98;;;;;9268:25:121;;;;2578:4:98;9309:18:121;;;9302:60;-1:-1:-1;;;;;2522:11:98;;;;:37;;9241:18:121;;2522:62:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2594:6:98;;2624:8;;2594:54;;-1:-1:-1;;;2594:54:98;;;;;9268:25:121;;;;2642:4:98;9309:18:121;;;9302:60;-1:-1:-1;;;;;2594:6:98;;;;-1:-1:-1;2594:29:98;;-1:-1:-1;9241:18:121;;2594:54:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2690:1:98;;-1:-1:-1;2676:16:98;;-1:-1:-1;;2676:16:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2676:16:98;-1:-1:-1;2659:33:98;;;;:14;;:33;;;;;;:::i;:::-;-1:-1:-1;2730:8:98;;2702:14;:17;;-1:-1:-1;;;;;2730:8:98;;;;;;2702:17;;;;:::i;:::-;;;;;;;;;:37;;;;;-1:-1:-1;;;;;2702:37:98;;;;;-1:-1:-1;;;;;2702:37:98;;;;;;2852:1;1359:2;2767:132;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2750:14;;:149;;;;;-1:-1:-1;;;;;2750:149:98;;;;;-1:-1:-1;;;;;2750:149:98;;;;;;3006:1;1445;2928:126;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2910:15:98;:144;;-1:-1:-1;;;;;;2910:144:98;-1:-1:-1;;;;;2910:144:98;;;;;;;;;;3072:18;3065:25;;-1:-1:-1;;;;3135:39:98;;;-1:-1:-1;3192:15:98;3185:22;1672:1542::o;5846:1881::-;5896:20;5931:29;5963:94;5994:30;6038:9;;5963:17;:94::i;:::-;5931:126;;6068:129;6090:18;;;;;;;;;;;6122:5;6068:129;;;;;;;;;;;;;;;;;:8;:129::i;:::-;6224:8;;6290:9;;6208:13;;-1:-1:-1;;;;;6224:8:98;;:26;;6264:12;;6290:15;;6302:3;;6290:15;:::i;:::-;6331:9;;6416:15;;6446;;6224:276;;-1:-1:-1;;;;;;6224:276:98;;;;;;;;;;;6331:9;6373:1;;-1:-1:-1;;;;;6416:15:98;;;;6446;-1:-1:-1;;;6446:15:98;;;;6475;;;6446;6224:276;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6208:292;;6511:123;6533:18;;;;;;;;;;;6565:4;6511:123;;;;;;;;;;;;;;;;;:8;:123::i;:::-;6645:140;6667:10;:23;;;6694:3;6667:30;6711:4;6645:140;;;;;;;;;;;;;;;;;:8;:140::i;:::-;6804:8;;6984:15;;7014;;6804:264;;-1:-1:-1;;;6804:264:98;;-1:-1:-1;;;;;6804:8:98;;;;:26;;:264;;6844:12;;6870:3;;;;6804:8;;6984:15;;;7014;-1:-1:-1;;;7014:15:98;;;;7043;;;7014;6804:264;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6796:272;;7079:71;7088:10;:23;;;7115:1;7088:28;7118:4;7079:71;;;;;;;;;;;;;;;;;:8;:71::i;:::-;7215:8;;7415:15;;7449;;7215:296;;-1:-1:-1;;;7215:296:98;;7161:27;;-1:-1:-1;;;;;7215:8:98;;;;:26;;:296;;7259:12;;7289:3;;;;7161:27;;7415:15;;;;;-1:-1:-1;;;7449:15:98;;;;;7482;;;7449;7215:296;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7215:296:98;;;;;;;;-1:-1:-1;;7215:296:98;;;;;;;;;;;;:::i;:::-;;;7199:384;;-1:-1:-1;7568:4:98;7199:384;;;;;7593:127;7615:22;7651:4;7593:127;;;;;;;;;;;;;;;;;:8;:127::i;:::-;5886:1841;;;;5846:1881::o;13180:813::-;13260:24;13365:1;13380;13287:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;13260:131;;13402:30;13520:1;13535:2;13435:112;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;13402:145;;13557:429;13579:322;13624:11;13670:19;13779:30;13835:15;13877:9;13579:27;:322::i;:::-;13915:5;13557:429;;;;;;;;;;;;;;;;;:8;:429::i;:::-;13248:745;;13180:813::o;7600:823:4:-;5098:26;;;;:11;:26;;;;;:33;;;7728:13;;-1:-1:-1;;;;;5098:33:4;;;;;929:10:64;5098:49:4;5077:126;;;;-1:-1:-1;;;5077:126:4;;;;;;;:::i;:::-;;;;;;;;;7827:26:::1;::::0;;;:11:::1;:26;::::0;;;;:48:::1;;::::0;-1:-1:-1;;;;;7827:48:4::1;7774:33;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;7774:101:4::1;;7753:190;;;::::0;-1:-1:-1;;;7753:190:4;;14458:2:121;7753:190:4::1;::::0;::::1;14440:21:121::0;14497:2;14477:18;;;14470:30;14536:34;14516:18;;;14509:62;-1:-1:-1;;;14587:18:121;;;14580:40;14637:19;;7753:190:4::1;14256:406:121::0;7753:190:4::1;7998:26;::::0;;;:11:::1;:26;::::0;;;;:35:::1;;::::0;7974:20:::1;::::0;::::1;;:59;7953:134;;;::::0;-1:-1:-1;;;7953:134:4;;14869:2:121;7953:134:4::1;::::0;::::1;14851:21:121::0;14908:2;14888:18;;;14881:30;14947;14927:18;;;14920:58;14995:18;;7953:134:4::1;14667:352:121::0;7953:134:4::1;8098:26;::::0;;;:11:::1;:26;::::0;;;;8127:11;;8098:40:::1;8127:11:::0;8098:26;:40:::1;:::i;:::-;-1:-1:-1::0;;8168:26:4::1;::::0;;;:11:::1;:26;::::0;;;;8149:46:::1;::::0;:18:::1;:46::i;:::-;8242:13:::0;8211:205:::1;8269:18;::::0;;;::::1;::::0;::::1;;:::i;:::-;8301:20;::::0;::::1;;8335:33;::::0;;;::::1;::::0;::::1;;:::i;:::-;8211:205;::::0;;-1:-1:-1;;;;;19047:15:121;;;19029:34;;19094:2;19079:18;;19072:34;;;;19142:15;;19122:18;;;19115:43;8382:24:4;::::1;19189:2:121::0;19174:18;;19167:34;8211:205:4;;;;;;18978:3:121;8211:205:4;;::::1;7600:823:::0;;;:::o;8478:1439:98:-;8554:20;8589:29;8621:94;8652:30;8696:9;;8621:17;:94::i;:::-;8726:6;;:63;;-1:-1:-1;;;8726:63:98;;8589:126;;-1:-1:-1;;;;;;8726:6:98;;:33;;:63;;8760:12;;8774:14;;8726:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8862:11:98;;8972:9;;9065:15;;9099;;8862:299;;-1:-1:-1;;;8862:299:98;;8800:35;;-1:-1:-1;;;;;;8862:11:98;;;;-1:-1:-1;8862:29:98;;:299;;8909:12;;8939:3;;8972:9;;8800:35;;9065:15;;;;-1:-1:-1;;;9099:15:98;;;;;9132;;;;;9099;8862:299;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8862:299:98;;;;;;;;-1:-1:-1;;8862:299:98;;;;;;;;;;;;:::i;:::-;;;8846:395;;-1:-1:-1;9226:4:98;8846:395;;;;;9251:142;9273:30;9317:4;9251:142;;;;;;;;;;;;;;;;;:8;:142::i;:::-;9404:6;;:59;;-1:-1:-1;;;9404:59:98;;-1:-1:-1;;;;;9404:6:98;;;;:33;;:59;;9438:12;;9452:10;;9404:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9474:18:98;:26;;-1:-1:-1;;;;9474:26:98;;;;;;9511:11;;9607:9;;9692:15;;9511:265;;-1:-1:-1;;;9511:265:98;;-1:-1:-1;;;;;9511:11:98;;;;-1:-1:-1;9511:29:98;;-1:-1:-1;9511:265:98;;9554:12;;-1:-1:-1;;;;9692:15:98;;-1:-1:-1;;;9722:15:98;;;;;;9751;;;;;9722;9511:265;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9787:123;9809:18;;;;;;;;;;;9841:4;9787:123;;;;;;;;;;;;;;;;;:8;:123::i;:::-;8544:1373;;;8478:1439::o;4558:297::-;4608:20;4643:37;4683:98;4714:30;4758:13;4683:17;:98::i;:::-;4792:6;;:56;;-1:-1:-1;;;4792:56:98;;4643:138;;-1:-1:-1;;;;;;4792:6:98;;:24;;:56;;4643:138;;4837:10;;4792:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1388:160:13:-;1480:61;;-1:-1:-1;;;1480:61:13;;;;;3999:25:121;;;1454:7:13;;-1:-1:-1;;;;;1360:15:13;1480:51;;;;3972:18:121;;1480:61:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1473:68;1388:160;-1:-1:-1;;1388:160:13:o;18915:789:98:-;18992:24;19097:1;19112;19019:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;18992:131;;19134:30;19245:1;19260:2;19167:105;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;19134:138;;19284:413;19307:302;19352:12;19413:18;19487:30;19543:15;19585:9;19307:27;:302::i;:::-;19623:4;19284:413;;;;;;;;;;;;;;;;;:8;:413::i;15872:688::-;15955:30;16066:1;16081;15988:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;15955:137;;16102:451;16124:276;16169:4;16206:14;16273:30;16329:15;16371:14;;;;;;;;;-1:-1:-1;;;;;16371:14:98;16124:27;:276::i;:::-;16414:13;16102:451;;;;;;;;;;;;;;;;;:8;:451::i;10725:839::-;10806:20;10841:29;10873:91;10904:30;10948:6;10873:17;:91::i;:::-;11031:11;;11226:15;;11260;;11031:291;;-1:-1:-1;;;11031:291:98;;10841:123;;-1:-1:-1;10975:29:98;;-1:-1:-1;;;;;11031:11:98;;;;:29;;:291;;11078:12;;11108:3;;10975:29;;;;11226:15;;;11260;-1:-1:-1;;;11260:15:98;;;;11293;;;11260;11031:291;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11031:291:98;;;;;;;;-1:-1:-1;;11031:291:98;;;;;;;;;;;;:::i;:::-;;;11015:381;;-1:-1:-1;11381:4:98;11015:381;;;;;11406:151;11428:24;11466:4;11406:151;;;;;;;;;;;;;;;;;:8;:151::i;11336:3174:4:-;11623:13;11722:26;;;:11;:26;;;;;929:10:64;;11759:30:4;11722:26;11759:18;:30::i;:::-;11848:33;;;;-1:-1:-1;;;;;11821:60:4;;;-1:-1:-1;;;11848:33:4;;;;11821:60;11800:135;;;;-1:-1:-1;;;11800:135:4;;24898:2:121;11800:135:4;;;24880:21:121;24937:2;24917:18;;;24910:30;24976;24956:18;;;24949:58;25024:18;;11800:135:4;24696:352:121;11800:135:4;11983:26;;;;;-1:-1:-1;;;11983:26:4;;;;;11966:43;;;;;11945:111;;;;-1:-1:-1;;;11945:111:4;;25255:2:121;11945:111:4;;;25237:21:121;25294:2;25274:18;;;25267:30;-1:-1:-1;;;25313:18:121;;;25306:51;25374:18;;11945:111:4;25053:345:121;11945:111:4;12104:22;;;;;-1:-1:-1;;;12104:22:4;;;;;12087:39;;;;;12066:111;;;;-1:-1:-1;;;12066:111:4;;25605:2:121;12066:111:4;;;25587:21:121;25644:2;25624:18;;;25617:30;25683:27;25663:18;;;25656:55;25728:18;;12066:111:4;25403:349:121;12066:111:4;12209:38;;;;:23;:38;;;;;:47;;:45;:47::i;:::-;:52;;:129;;-1:-1:-1;12281:38:4;;;;:23;:38;;;;;:57;;12329:8;12281:47;:57::i;:::-;12188:208;;;;-1:-1:-1;;;12188:208:4;;25959:2:121;12188:208:4;;;25941:21:121;;;25978:18;;;25971:30;26037:34;26017:18;;;26010:62;26089:18;;12188:208:4;25757:356:121;12188:208:4;12430:23;;12411:42;;12407:225;;;12538:23;;12476:145;;-1:-1:-1;;;12476:145:4;;;;;26292:25:121;;;;26333:18;;;26326:34;;;26265:18;;12476:145:4;26118:248:121;12407:225:4;12736:42;;;;12792:30;;;;;12836:33;;;12883:32;;;;12642:26;;12671:254;;12706:16;;12736:42;;12792:30;;;;;-1:-1:-1;;;;;;;;12836:33:4;;;;;;12883:32;12671:21;:254::i;:::-;12642:283;;12959:18;12939:17;:38;12935:211;;;13000:135;;-1:-1:-1;;;13000:135:4;;;;;26292:25:121;;;26333:18;;;26326:34;;;26265:18;;13000:135:4;26118:248:121;12935:211:4;13207:31;13173:30;;;;;;:65;;;;;;;;:::i;:::-;;:165;;;-1:-1:-1;13300:38:4;13254:30;;;;;;:84;;;;;;;;:::i;:::-;;13173:165;13156:346;;;13388:17;13409:1;13388:22;13363:128;;;;-1:-1:-1;;;13363:128:4;;26573:2:121;13363:128:4;;;26555:21:121;26612:2;26592:18;;;26585:30;26651:34;26631:18;;;26624:62;-1:-1:-1;;;26702:18:121;;;26695:45;26757:19;;13363:128:4;26371:411:121;13363:128:4;13563:31;13529:30;;;;;;:65;;;;;;;;:::i;:::-;;:147;;;-1:-1:-1;13644:32:4;13610:30;;;;;;:66;;;;;;;;:::i;:::-;;13529:147;13512:346;;;13758:18;13726:10;:28;;;:50;13701:146;;;;-1:-1:-1;;;13701:146:4;;26989:2:121;13701:146:4;;;26971:21:121;27028:2;27008:18;;;27001:30;27067:34;27047:18;;;27040:62;-1:-1:-1;;;27118:18:121;;;27111:35;27163:19;;13701:146:4;26787:401:121;13701:146:4;13876:373;13914:8;13936:10;:19;;;13969:10;:32;;;;;;;;;;-1:-1:-1;;;;;13969:32:4;14015:16;14045:10;:33;;;;;;;;;;-1:-1:-1;;;;;14045:33:4;14092:17;14123:18;14155:10;:30;;;;;;;;;;;;14199:13;14226;13876:24;:373::i;:::-;13868:381;;14260:36;14271:5;14278:10;:17;;;;;;;;;;-1:-1:-1;;;;;14278:17:4;14260:10;:36::i;:::-;;14307:53;14328:13;14343:16;14307:20;:53::i;:::-;14376:127;;;-1:-1:-1;;;;;27413:32:121;;27395:51;;27477:2;27462:18;;27455:34;;;27505:18;;;27498:34;;;14409:13:4;;14376:127;;27383:2:121;27368:18;14376:127:4;;;;;;;11638:2872;;;11336:3174;;;;;;;;;:::o;16784:816:98:-;16887:24;16992:1;17007;16914:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;16887:131;;17029:30;17140:1;17155:2;17062:105;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;17029:138;;17178:415;17200:305;17245:12;17306:11;17383:30;17439:15;17481:9;17200:27;:305::i;8690:363:4:-;5098:26;;;;:11;:26;;;;;:33;;;8835:13;;-1:-1:-1;;;;;5098:33:4;;;;;929:10:64;5098:49:4;5077:126;;;;-1:-1:-1;;;5077:126:4;;;;;;;:::i;:::-;8867:38:::1;::::0;;;:23:::1;:38;::::0;;;;;;;8860:45:::1;8867:38:::0;;8860:45:::1;:::i;:::-;;;;;8915:71;8950:13;8965:20;;8915:34;:71::i;:::-;9003:41;::::0;9030:13;;9003:41:::1;::::0;;;::::1;8690:363:::0;;;;:::o;4861:440:98:-;4911:20;4946:37;4986:91;5017:30;5061:6;4986:17;:91::i;:::-;5118:6;;5139:25;;;;5088:137;;;;;;;;;;;;;4946:131;;-1:-1:-1;5088:137:98;;-1:-1:-1;;;;;5118:6:98;;;;;5139:25;;;;;;;5088:137;;;;;:8;:137::i;:::-;5236:6;;:58;;-1:-1:-1;;;5236:58:98;;-1:-1:-1;;;;;5236:6:98;;;;:24;;:58;;5261:12;;5275:18;;5236:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4901:400;;4861:440::o;12463:496::-;12516:20;12577:2;12516:20;12622:91;12653:30;12697:6;12622:17;:91::i;:::-;12590:123;;12724:52;12745:12;12759:16;12724:20;:52::i;:::-;12787:165;12848:16;12836:9;;:28;;;;:::i;:::-;12809:10;:23;;;:55;12878:4;12787:165;;;;;;;;;;;;;;;;;:8;:165::i;15208:1278:4:-;15494:7;;15517:20;:53;;;;;;;;:::i;:::-;;15513:92;;-1:-1:-1;15593:1:4;15586:8;;15513:92;15615:24;15649:23;15714:22;-1:-1:-1;;;;;15675:80:4;;:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15649:108;-1:-1:-1;15796:30:4;15772:20;:54;;;;;;;;:::i;:::-;;15768:197;;15906:23;-1:-1:-1;;;;;15863:89:4;;:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15842:112;;15768:197;16250:229;16290:16;16330:38;16351:17;16330:18;:38;:::i;:::-;16325:44;;:2;:44;:::i;:::-;16388:32;16438:27;16250:22;:229::i;:::-;16231:248;;;;15208:1278;;;;;;;;:::o;16783:212::-;16941:38;;;;:23;:38;;;;;16885:27;;16941:47;;:45;:47::i;14210:605:98:-;14308:24;14413:1;14428;14335:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;14308:131;;14451:357;14473:258;14518:5;14558:25;14621:32;14679:1;14707:9;14473:27;:258::i;:::-;14745:1;14451:357;;;;;;;;;;;;;;;;;:8;:357::i;22753:637::-;22835:30;22946:1;22961;22868:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;22835:137;;22982:401;23004:277;23049:3;23080:16;23154:30;23210:15;23252:14;;;;;;;;;-1:-1:-1;;;;;23252:14:98;23004:27;:277::i;:::-;23295:9;22982:401;;;;;;;;;;;;;;;;;:8;:401::i;11570:834::-;11642:20;11677:29;11709:92;11740:31;11785:6;11709:17;:92::i;:::-;11868:11;;12064:15;;12098;;11868:292;;-1:-1:-1;;;11868:292:98;;11677:124;;-1:-1:-1;11812:29:98;;-1:-1:-1;;;;;11868:11:98;;;;:29;;:292;;11915:12;;11945:3;;11978:1;;12016:2;;12064:15;;;12098;-1:-1:-1;;;12098:15:98;;;;12131;;;12098;11868:292;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11868:292:98;;;;;;;;-1:-1:-1;;11868:292:98;;;;;;;;;;;;:::i;:::-;;;11852:382;;-1:-1:-1;12219:4:98;11852:382;;;;;12244:153;12266:24;12304:4;12244:153;;;;;;;;;;;;;;;;;:8;:153::i;7733:739::-;7807:20;7842:29;7874:94;7905:30;7949:9;;7874:17;:94::i;:::-;7979:6;;:63;;-1:-1:-1;;;7979:63:98;;7842:126;;-1:-1:-1;;;;;;7979:6:98;;:33;;:63;;8013:12;;8027:14;;7979:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8069:8:98;;8162:9;;8247:15;;8277;;8069:262;;-1:-1:-1;;;8069:262:98;;8053:13;;-1:-1:-1;;;;;;8069:8:98;;;;-1:-1:-1;8069:26:98;;:262;;8109:12;;8053:13;;8162:9;;8053:13;;8247:15;;;;-1:-1:-1;;;8277:15:98;;;;;8306;;;;;8277;8069:262;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8053:278;;8342:123;8364:18;;;;;;;;;;;8396:4;8342:123;;;;;;;;;;;;;;;;;:8;:123::i;1819:584:37:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:37;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;30567:51:121;;;-1:-1:-1;;;30634:18:121;;;30627:34;2196:43:37;;;;;;;;;30540:18:121;;;2196:43:37;;;-1:-1:-1;;1671:64:37;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:37;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:37:o;19933:811:98:-;20033:24;20138:1;20153;20060:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;20033:131;;20175:30;20286:1;20301;20208:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;20175:137;;20322:415;20344:262;20389:6;20428:13;20484:30;20540:15;20582:9;20344:27;:262::i;:::-;20620:2;20322:415;;;;;;;;;;;;;;;;;:8;:415::i;23614:684::-;23713:30;23824:1;23839;23746:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;23713:137;;23860:431;23882:310;23927:1;23955:16;24065:30;24121:15;24163:14;;;;;;;;;-1:-1:-1;;;;;24163:14:98;23882:27;:310::i;:::-;24206:1;23860:431;;;;;;;;;;;;;;;;;:8;:431::i;9789:260:4:-;5098:26;;;;:11;:26;;;;;:33;;;9878:13;;-1:-1:-1;;;;;5098:33:4;;;;;929:10:64;5098:49:4;5077:126;;;;-1:-1:-1;;;5077:126:4;;;;;;;:::i;:::-;9914:26:::1;::::0;;;:11:::1;:26;::::0;;;;;;;9907:33;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;9907:33:4;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;9907:33:4;;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;;;;;;9907:33:4::1;::::0;;9957:23:::1;:38:::0;;;;;;;9914:26;9950:45:::1;9957:38:::0;9914:26;9950:45:::1;:::i;:::-;-1:-1:-1::0;;10010:32:4::1;::::0;10028:13;;-1:-1:-1;10010:32:4::1;::::0;-1:-1:-1;10010:32:4;;::::1;9789:260:::0;;:::o;6634:745::-;6821:15;:17;;6772:21;;;6821:17;;;:::i;:::-;;;;-1:-1:-1;6805:33:4;-1:-1:-1;929:10:64;6870:18:4;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6870:34:4;;6849:112;;;;-1:-1:-1;;;6849:112:4;;32903:2:121;6849:112:4;;;32885:21:121;32942:2;32922:18;;;32915:30;32981:33;32961:18;;;32954:61;33032:18;;6849:112:4;32701:355:121;6849:112:4;6972:26;;;;:11;:26;;;;;7001:11;;6972:40;7001:11;6972:26;:40;:::i;:::-;-1:-1:-1;;7042:26:4;;;;:11;:26;;;;;7023:46;;:18;:46::i;:::-;7080:71;7115:13;7130:20;;7080:34;:71::i;:::-;7198:13;7167:205;7225:18;;;;;;;;:::i;:::-;7257:20;;;;7291:33;;;;;;;;:::i;:::-;7167:205;;;-1:-1:-1;;;;;19047:15:121;;;19029:34;;19094:2;19079:18;;19072:34;;;;19142:15;;19122:18;;;19115:43;7338:24:4;;19189:2:121;19174:18;;19167:34;7167:205:4;;;;;;18978:3:121;7167:205:4;;;6634:745;;;;;:::o;17842:826:98:-;17946:24;18051:1;18066;17973:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;17946:131;;18088:30;18199:1;18214:2;18121:105;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;18088:138;;18239:422;18261:305;18306:12;18367:11;18444:30;18500:15;18542:9;18261:27;:305::i;:::-;18580:7;18239:422;;;;;;;;;;;;;;;;;:8;:422::i;20982:652::-;21081:30;21192:1;21207;21114:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;21081:137;;21228:399;21250:270;21295:1;21328:12;21393:30;21449:15;21491:14;;;;;;;;;-1:-1:-1;;;;;21491:14:98;21250:27;:270::i;15034:617::-;15119:24;15224:1;15239;15146:104;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;15119:131;;15263:381;15285:284;15330:5;15371:13;15460:31;15517:1;15545:9;15285:27;:284::i;:::-;15583:1;15263:381;;;;;;;;;;;;;;;;;:8;:381::i;9923:796::-;9997:20;10032:29;10064:94;10095:30;10139:9;;10064:17;:94::i;:::-;10169:6;;:63;;-1:-1:-1;;;10169:63:98;;10032:126;;-1:-1:-1;;;;;;10169:6:98;;:33;;:63;;10203:12;;10217:14;;10169:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10243:6:98;;:59;;-1:-1:-1;;;10243:59:98;;-1:-1:-1;;;;;10243:6:98;;;;-1:-1:-1;10243:33:98;;-1:-1:-1;10243:59:98;;10277:12;;10291:10;;10243:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10313:11:98;;10409:9;;10494:15;;10524;;10313:265;;-1:-1:-1;;;10313:265:98;;-1:-1:-1;;;;;10313:11:98;;;;-1:-1:-1;10313:29:98;;-1:-1:-1;10313:265:98;;10356:12;;10313:11;;10409:9;;10313:11;;10494:15;;;;;-1:-1:-1;;;10524:15:98;;;;;10553;;;10524;10313:265;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10589:123;10611:18;;;;;;;;;;;10643:4;10589:123;;;;;;;;;;;;;;;;;:8;:123::i;5307:533::-;5357:20;5391:29;5423:91;5454:30;5498:6;5423:17;:91::i;:::-;5547:17;;;;5586:6;;5525:129;;;;;;;;;;;;;5547:17;;-1:-1:-1;5525:129:98;;5547:17;;;;-1:-1:-1;;;;;5547:17:98;;;;5586:6;;;5525:129;;;;;:8;:129::i;:::-;5665:6;;:38;;-1:-1:-1;;;5665:38:98;;;;;3999:25:121;;;-1:-1:-1;;;;;5665:6:98;;;;:24;;3972:18:121;;5665:38:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:119;5736:10;:17;;;;;;;;;;-1:-1:-1;;;;;5736:17:98;5775:1;5714:119;;;;;;;;;;;;;;;;;:8;:119::i;5469:178:37:-;5550:1;5545;:6;5541:100;;-1:-1:-1;;;;;;;;;;;5598:3:37;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;3220:1332:98:-;3365:30;3421:14;;:11;:14;;3468:8;;3445:20;:31;3530:14;;3486:33;:59;;-1:-1:-1;;;;;3530:14:98;;;-1:-1:-1;;;;;;3486:59:98;;;;;;3582:9;;3421:14;3555:36;;;3627:15;;3601:23;:41;;3732:10;;;3627:15;3732:10;;;-1:-1:-1;;3652:45:98;;;3627:15;;;-1:-1:-1;;;3601:41:98;;;-1:-1:-1;;;;3652:45:98;;;;;3682:15;;;;-1:-1:-1;;;3652:45:98;;;;;-1:-1:-1;;3707:35:98;;;;;;;3781:6;;3752:18;:36;;-1:-1:-1;;;;;;3752:36:98;;3530:14;3781:6;;;;3752:36;;;;;;;;;3421:14;;3833:15;;3752:18;-1:-1:-1;;;;;;3799:49:98;-1:-1:-1;;3799:49:98;;;;-1:-1:-1;3833:15:98;-1:-1:-1;3799:49:98;;;;;;;:::i;:::-;;;;;-1:-1:-1;3957:26:98;1359:2;3957;:26;:::i;:::-;3916:67;;:26;:67;:::i;:::-;3858:43;;;:125;4017:30;3998:15;:49;;;;;;;;:::i;:::-;;3994:552;;4108:15;;;4063:34;;:61;;-1:-1:-1;;;;;;;;4063:61:98;-1:-1:-1;;;;;4108:15:98;;;-1:-1:-1;;;4063:61:98;;;;;;;3994:552;;;4164:31;4145:15;:50;;;;;;;;:::i;:::-;;4141:405;;4211:34;;;:118;;-1:-1:-1;;;;;;;;4211:118:98;-1:-1:-1;;;4211:118:98;;;4141:405;;;4369:32;4350:15;:51;;;;;;;;:::i;:::-;;4346:200;;4417:34;;;:118;;-1:-1:-1;;;;;;;;4417:118:98;-1:-1:-1;;;4417:118:98;;;3220:1332;;;;:::o;1107:186:39:-;1196:1;1191:6;;:1;:6;;;1187:100;;-1:-1:-1;;;;;;;;;;;1244:3:39;1218:30;;;;;;:::i;:::-;;;;;;;;1262:14;1271:1;1274;1262:8;:14::i;5227:876:4:-;5327:22;;;;:48;5359:15;5327:48;;:22;;:48;5306:113;;;;-1:-1:-1;;;5306:113:4;;34163:2:121;5306:113:4;;;34145:21:121;34202:2;34182:18;;;34175:30;-1:-1:-1;;;34221:18:121;;;34214:48;34279:18;;5306:113:4;33961:342:121;5306:113:4;5450:24;;5429:108;;;;-1:-1:-1;;;5429:108:4;;34510:2:121;5429:108:4;;;34492:21:121;34549:2;34529:18;;;34522:30;34588:34;34568:18;;;34561:62;-1:-1:-1;;;34639:18:121;;;34632:31;34680:19;;5429:108:4;34308:397:121;5429:108:4;5587:29;5552:31;;;;;;:64;;;;;;;;:::i;:::-;;5548:549;;5703:1;5657:11;:43;;;:47;5632:135;;;;-1:-1:-1;;;5632:135:4;;34912:2:121;5632:135:4;;;34894:21:121;34951:2;34931:18;;;34924:30;34990:31;34970:18;;;34963:59;35039:18;;5632:135:4;34710:353:121;5632:135:4;5854:30;5803:31;;;;;;:81;;;;;;;;:::i;:::-;;5782:305;;5946:29;;;;:34;5917:155;;;;-1:-1:-1;;;5917:155:4;;35270:2:121;5917:155:4;;;35252:21:121;35309:2;35289:18;;;35282:30;35348:34;35328:18;;;35321:62;-1:-1:-1;;;35399:18:121;;;35392:48;35457:19;;5917:155:4;35068:414:121;9109:115:71;9172:7;9198:19;9206:3;4548:18;;4466:107;8863:165;-1:-1:-1;;;;;8996:23:71;;8943:4;4354:19;;;:12;;;:19;;;;;;:24;;8966:55;8959:62;8863:165;-1:-1:-1;;;8863:165:71:o;17992:1341:4:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;18476:35:4;;;-1:-1:-1;;;;;18521:52:4;;-1:-1:-1;;;18521:52:4;-1:-1:-1;;;18583:43:4;;;18636:39;;;-1:-1:-1;;;18636:39:4;18685:43;;;-1:-1:-1;;;18685:43:4;-1:-1:-1;18787:20:4;:53;;;;;;;;:::i;:::-;;18783:412;;18873:19;;;18890:1;18873:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18873:19:4;;-1:-1:-1;;18873:19:4;;;;;;;;;;;18856:36;;18926:258;;;;;;;;18972:46;18997:20;18972:24;:46::i;:::-;18926:258;;;;;;;;:::i;:::-;;;;;19091:17;18926:258;;;;19046:18;18926:258;;;;19146:23;-1:-1:-1;;;;;18926:258:4;;;;18906:14;18921:1;18906:17;;;;;;;;:::i;:::-;;;;;;:278;;;;18783:412;24716:32:98;:39;;-1:-1:-1;;;;24716:39:98;-1:-1:-1;;;24716:39:98;;;-1:-1:-1;19205:121:4;17992:1341;-1:-1:-1;;;;;;;;;;;;;17992:1341:4:o;24786:287:98:-;24867:18;:25;;-1:-1:-1;;;;24867:25:98;-1:-1:-1;;;24867:25:98;;;;;24903:141;;;;;;;;;;;;;24851:4;;24903:141;;-1:-1:-1;;;24925:32:98;;;24867:25;24925:32;;24888:4;;24903:141;;;;;;:8;:141::i;:::-;-1:-1:-1;25062:4:98;24786:287;;;;:::o;10280:188:4:-;10401:26;;;;:11;:26;;;;;:60;;10444:17;;10401:26;:60;;10444:17;;10401:60;:::i;:::-;;;;-1:-1:-1;;;;10280:188:4:o;9350:290::-;9498:9;9493:138;9513:25;;;9493:138;;;9559:61;9602:14;;9617:1;9602:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;9559:38;;;;:23;:38;;;;;;:42;:61::i;:::-;-1:-1:-1;9540:3:4;;;;:::i;:::-;;;;9493:138;;3897:185:37;3984:1;-1:-1:-1;;;;;3979:6:37;:1;-1:-1:-1;;;;;3979:6:37;;3975:101;;-1:-1:-1;;;;;;;;;;;4033:3:37;4006:31;;;;;;:::i;:::-;;;;;;;;4051:14;4060:1;4063;4051:8;:14::i;5735:337:70:-;5874:7;5893:14;5910:25;5917:1;5920;5923:11;5910:6;:25::i;:::-;5893:42;-1:-1:-1;5961:11:70;5949:8;:23;;;;;;;;:::i;:::-;;:56;;;;;6004:1;5989:11;5976:25;;;;;:::i;:::-;5986:1;5983;5976:25;:29;5949:56;5945:98;;;6021:11;6031:1;6021:11;;:::i;:::-;;6059:6;-1:-1:-1;;;;;;5735:337:70:o;10262:300:71:-;10325:16;10353:22;10378:19;10386:3;10378:7;:19::i;5202:262:37:-;5264:1;5259;:6;5255:203;;5286:41;;;;;35951:2:121;35933:21;;;35990:2;35970:18;;;35963:30;36029:34;36024:2;36009:18;;36002:62;-1:-1:-1;;;36095:2:121;36080:18;;36073:32;36137:3;36122:19;;35749:398;5286:41:37;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;789:312:39:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;37388:2:121;37370:21;;;37427:2;37407:18;;;37400:30;37466:34;37461:2;37446:18;;37439:62;-1:-1:-1;;;37532:2:121;37517:18;;37510:32;37574:3;37559:19;;37186:398;881:41:39;;;;;;;;-1:-1:-1;;;;;;;;;;;972:1:39;:20;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:39;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:39;;;;941:52;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;1043:1:39;:20;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:39;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:39;;;;1012:52;;;;;;:::i;19560:679:4:-;19673:14;19716:30;19707:5;:39;;;;;;;;:::i;:::-;;19703:97;;-1:-1:-1;19769:20:4;;19560:679;-1:-1:-1;19560:679:4:o;19703:97::-;19835:31;19826:5;:40;;;;;;;;:::i;:::-;;:103;;;-1:-1:-1;19891:38:4;19882:5;:47;;;;;;;;:::i;:::-;;19826:103;19809:184;;;-1:-1:-1;19961:21:4;;19560:679;-1:-1:-1;19560:679:4:o;19809:184::-;20028:32;20019:5;:41;;;;;;;;:::i;:::-;;:105;;;-1:-1:-1;20085:39:4;20076:5;:48;;;;;;;;:::i;:::-;;20019:105;20002:187;;;-1:-1:-1;20156:22:4;;19560:679;-1:-1:-1;19560:679:4:o;20002:187::-;20199:33;;-1:-1:-1;;;20199:33:4;;38681:2:121;20199:33:4;;;38663:21:121;38720:2;38700:18;;;38693:30;38759:25;38739:18;;;38732:53;38802:18;;20199:33:4;38479:347:121;8308:150:71;8378:4;8401:50;8406:3;-1:-1:-1;;;;;8426:23:71;;8401:4;:50::i;3615:277:37:-;3683:1;-1:-1:-1;;;;;3678:6:37;:1;-1:-1:-1;;;;;3678:6:37;;3674:212;;3705:44;;;;;39033:2:121;39015:21;;;39072:2;39052:18;;;39045:30;39111:34;39106:2;39091:18;;39084:62;-1:-1:-1;;;39177:2:121;39162:18;;39155:35;39222:3;39207:19;;38831:401;3705:44:37;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;1678:3925:70:-;1790:14;;;-1:-1:-1;;2327:1:70;2324;2317:20;2370:1;2367;2363:9;2354:18;;2425:5;2421:2;2418:13;2410:5;2406:2;2402:14;2398:34;2389:43;;;2527:5;2536:1;2527:10;2523:75;;2572:11;2564:5;:19;;;;;:::i;:::-;;2557:26;;;;;;2523:75;2722:5;2708:11;:19;2700:28;;;;;;2984:17;3119:11;3116:1;3113;3106:25;4497:1;3667;3652:12;;:16;;3637:32;;3772:22;;;;4478:1;:15;;4477:21;;4730;;;4726:25;;4715:36;4799:21;;;4795:25;;4784:36;4869:21;;;4865:25;;4854:36;4939:21;;;4935:25;;4924:36;5009:21;;;5005:25;;4994:36;5080:21;;;5076:25;;;5065:36;;;3622:12;4017;;;4013:23;;;4009:31;;;3233:20;;;3222:32;;;4129:12;;;;3280:21;;3870:16;;;;4120:21;;;;5544:15;;;-1:-1:-1;;;;1678:3925:70:o;5573:109:71:-;5629:16;5664:3;:11;;5657:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:109;;;:::o;2410:424:37:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;27395:51:121;;;-1:-1:-1;;;27462:18:121;;;27455:34;;;;2705:4:37;27505:18:121;;;27498:34;2482:11:37;;1671:64;2579:43;;27368:18:121;;2645:67:37;;;-1:-1:-1;;2645:67:37;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:37;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:37;2813:7;:14;;-1:-1:-1;;2813:14:37;;;;;2410:424::o;2217:404:71:-;2280:4;4354:19;;;:12;;;:19;;;;;;2296:319;;-1:-1:-1;2338:23:71;;;;;;;;:11;:23;;;;;;;;;;;;;2518:18;;2496:19;;;:12;;;:19;;;;;;:40;;;;2550:11;;2296:319;-1:-1:-1;2599:5:71;2592:12;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:159:121;77:5;122:3;113:6;108:3;104:16;100:26;97:46;;;139:1;136;129:12;97:46;-1:-1:-1;161:6:121;14:159;-1:-1:-1;14:159:121:o;178:313::-;276:6;284;337:3;325:9;316:7;312:23;308:33;305:53;;;354:1;351;344:12;305:53;390:9;377:23;367:33;;419:66;477:7;472:2;461:9;457:18;419:66;:::i;:::-;409:76;;178:313;;;;;:::o;496:180::-;555:6;608:2;596:9;587:7;583:23;579:32;576:52;;;624:1;621;614:12;576:52;-1:-1:-1;647:23:121;;496:180;-1:-1:-1;496:180:121:o;1192:127::-;1253:10;1248:3;1244:20;1241:1;1234:31;1284:4;1281:1;1274:15;1308:4;1305:1;1298:15;1324:252;1420:1;1413:5;1410:12;1400:143;;1465:10;1460:3;1456:20;1453:1;1446:31;1500:4;1497:1;1490:15;1528:4;1525:1;1518:15;1400:143;1552:18;;1324:252::o;1581:1077::-;2030:25;;;2074:10;2120:15;;;2115:2;2100:18;;2093:43;2172:15;;2167:2;2152:18;;2145:43;2236:6;2224:19;;2219:2;2204:18;;2197:47;-1:-1:-1;;;;;2319:15:121;;;2313:3;2298:19;;2291:44;2271:3;2351:19;;2344:35;;;2410:3;2395:19;;2388:35;;;2017:3;2002:19;;;2432:69;2496:3;2481:19;;2473:6;2432:69;:::i;:::-;2550:2;2542:6;2538:15;2532:3;2521:9;2517:19;2510:44;2591:6;2585:3;2574:9;2570:19;2563:35;2648:2;2639:7;2635:16;2629:3;2618:9;2614:19;2607:45;;1581:1077;;;;;;;;;;;;;;:::o;2663:131::-;-1:-1:-1;;;;;2738:31:121;;2728:42;;2718:70;;2784:1;2781;2774:12;2799:117;2884:6;2877:5;2873:18;2866:5;2863:29;2853:57;;2906:1;2903;2896:12;2921:121;3006:10;2999:5;2995:22;2988:5;2985:33;2975:61;;3032:1;3029;3022:12;3047:801;3158:6;3166;3174;3182;3190;3198;3206;3259:3;3247:9;3238:7;3234:23;3230:33;3227:53;;;3276:1;3273;3266:12;3227:53;3312:9;3299:23;3289:33;;3369:2;3358:9;3354:18;3341:32;3331:42;;3420:2;3409:9;3405:18;3392:32;3382:42;;3471:2;3460:9;3456:18;3443:32;3433:42;;3525:3;3514:9;3510:19;3497:33;3539:31;3564:5;3539:31;:::i;:::-;3589:5;-1:-1:-1;3646:3:121;3631:19;;3618:33;3660:32;3618:33;3660:32;:::i;:::-;3711:7;-1:-1:-1;3770:3:121;3755:19;;3742:33;3784:32;3742:33;3784:32;:::i;:::-;3835:7;3825:17;;;3047:801;;;;;;;;;;:::o;4035:367::-;4098:8;4108:6;4162:3;4155:4;4147:6;4143:17;4139:27;4129:55;;4180:1;4177;4170:12;4129:55;-1:-1:-1;4203:20:121;;4246:18;4235:30;;4232:50;;;4278:1;4275;4268:12;4232:50;4315:4;4307:6;4303:17;4291:29;;4375:3;4368:4;4358:6;4355:1;4351:14;4343:6;4339:27;4335:38;4332:47;4329:67;;;4392:1;4389;4382:12;4329:67;4035:367;;;;;:::o;4407:505::-;4502:6;4510;4518;4571:2;4559:9;4550:7;4546:23;4542:32;4539:52;;;4587:1;4584;4577:12;4539:52;4623:9;4610:23;4600:33;;4684:2;4673:9;4669:18;4656:32;4711:18;4703:6;4700:30;4697:50;;;4743:1;4740;4733:12;4697:50;4782:70;4844:7;4835:6;4824:9;4820:22;4782:70;:::i;:::-;4407:505;;4871:8;;-1:-1:-1;4756:96:121;;-1:-1:-1;;;;4407:505:121:o;4917:123::-;5014:1;5007:5;5004:12;4994:40;;5030:1;5027;5020:12;5045:718;5169:6;5177;5185;5193;5201;5254:3;5242:9;5233:7;5229:23;5225:33;5222:53;;;5271:1;5268;5261:12;5222:53;5307:9;5294:23;5284:33;;5364:2;5353:9;5349:18;5336:32;5326:42;;5418:2;5407:9;5403:18;5390:32;5431:53;5478:5;5431:53;:::i;:::-;5503:5;-1:-1:-1;5560:2:121;5545:18;;5532:32;5573:33;5532:32;5573:33;:::i;:::-;5625:7;-1:-1:-1;5684:3:121;5669:19;;5656:33;5698;5656;5698;:::i;:::-;5750:7;5740:17;;;5045:718;;;;;;;;:::o;5768:658::-;5939:2;5991:21;;;6061:13;;5964:18;;;6083:22;;;5910:4;;5939:2;6162:15;;;;6136:2;6121:18;;;5910:4;6205:195;6219:6;6216:1;6213:13;6205:195;;;6284:13;;-1:-1:-1;;;;;6280:39:121;6268:52;;6375:15;;;;6340:12;;;;6316:1;6234:9;6205:195;;;-1:-1:-1;6417:3:121;;5768:658;-1:-1:-1;;;;;;5768:658:121:o;6623:571::-;6748:6;6756;6764;6817:3;6805:9;6796:7;6792:23;6788:33;6785:53;;;6834:1;6831;6824:12;6785:53;6857:57;6906:7;6895:9;6857:57;:::i;:::-;6847:67;;6965:3;6954:9;6950:19;6937:33;6993:18;6985:6;6982:30;6979:50;;;7025:1;7022;7015:12;7519:666;7892:3;7881:9;7874:22;7855:4;7919:50;7964:3;7953:9;7949:19;7276:1;7264:14;;-1:-1:-1;;;7303:4:121;7294:14;;7287:35;7347:2;7338:12;;7199:157;7919:50;8017:9;8009:6;8005:22;8000:2;7989:9;7985:18;7978:50;8045:37;8075:6;7438:1;7426:14;;-1:-1:-1;;;7465:4:121;7456:14;;7449:31;7505:2;7496:12;;7361:153;8045:37;8037:45;;;8118:6;8113:2;8102:9;8098:18;8091:34;8173:4;8165:6;8161:17;8156:2;8145:9;8141:18;8134:45;7519:666;;;;;:::o;8785:127::-;8846:10;8841:3;8837:20;8834:1;8827:31;8877:4;8874:1;8867:15;8901:4;8898:1;8891:15;8917:172;8984:10;9014;;;9026;;;9010:27;;9049:11;;;9046:37;;;9063:18;;:::i;:::-;9046:37;8917:172;;;;:::o;9505:127::-;9566:10;9561:3;9557:20;9554:1;9547:31;9597:4;9594:1;9587:15;9621:4;9618:1;9611:15;9965:656;10328:3;10317:9;10310:22;10291:4;10355:50;10400:3;10389:9;10385:19;9714:2;9702:15;;-1:-1:-1;;;9742:4:121;9733:14;;9726:42;9793:2;9784:12;;9637:165;10355:50;10453:9;10445:6;10441:22;10436:2;10425:9;10421:18;10414:50;10481:37;10511:6;9884:1;9872:14;;-1:-1:-1;;;9911:4:121;9902:14;;9895:31;9951:2;9942:12;;9807:153;11287:128;11354:9;;;11375:11;;;11372:37;;;11389:18;;:::i;11420:667::-;11739:25;;;11795:2;11780:18;;11773:34;;;;11838:2;11823:18;;11816:34;;;;11881:2;11866:18;;11859:34;;;;-1:-1:-1;;;;;11930:32:121;11924:3;11909:19;;11902:61;12012:6;12000:19;11950:3;11979:19;;11972:48;12069:10;12057:23;12051:3;12036:19;;12029:52;11726:3;11711:19;;11420:667::o;12092:184::-;12162:6;12215:2;12203:9;12194:7;12190:23;12186:32;12183:52;;;12231:1;12228;12221:12;12183:52;-1:-1:-1;12254:16:121;;12092:184;-1:-1:-1;12092:184:121:o;13645:354::-;13847:2;13829:21;;;13886:2;13866:18;;;13859:30;13925:32;13920:2;13905:18;;13898:60;13990:2;13975:18;;13645:354::o;14004:247::-;14063:6;14116:2;14104:9;14095:7;14091:23;14087:32;14084:52;;;14132:1;14129;14122:12;14084:52;14171:9;14158:23;14190:31;14215:5;14190:31;:::i;15024:174::-;15068:11;15120:3;15107:17;15133:30;15157:5;15133:30;:::i;15587:174::-;15631:11;15683:3;15670:17;15696:30;15720:5;15696:30;:::i;15988:176::-;16033:11;16085:3;16072:17;16098:31;16123:5;16098:31;:::i;16416:220::-;16483:11;16535:3;16522:17;16548:53;16595:5;16548:53;:::i;16641:378::-;16789:1;16782:5;16779:12;16769:143;;16834:10;16829:3;16825:20;16822:1;16815:31;16869:4;16866:1;16859:15;16897:4;16894:1;16887:15;16769:143;16957:3;16953:8;16946:4;16940:11;16936:26;17007:3;17000:5;16996:15;16987:7;16984:28;16978:4;16971:42;;16641:378;;:::o;17449:1306::-;17618:5;17605:19;17599:4;17592:33;17662:1;17656:4;17652:12;17673:103;17733:42;17771:2;17764:5;17760:14;17733:42;:::i;:::-;15307:11;;-1:-1:-1;;15303:33:121;15349:10;15338:22;;;;15300:61;15287:75;;15203:165;17673:103;17785:101;17843:42;17881:2;17874:5;17870:14;17843:42;:::i;:::-;15465:11;;-1:-1:-1;;15501:32:121;15543:2;15539:14;;;;15555:18;15535:39;15498:77;15485:91;;15373:209;17785:101;17895;17953:42;17991:2;17984:5;17980:14;17953:42;:::i;:::-;15858:11;;-1:-1:-1;;;;15894:36:121;15940:2;15936:14;;;;15952:22;15932:43;15891:85;15878:99;;15766:217;17895:101;18005:105;18065:44;18104:3;18097:5;18093:15;18065:44;:::i;:::-;18053:10;16263:11;;-1:-1:-1;;;;;;;;16299:53:121;16395:2;16358:14;;;;-1:-1:-1;;;;;;;16354:49:121;16296:108;;;;16283:122;;16169:242;18005:105;;18164:3;18157:5;18153:15;18140:29;18136:1;18130:4;18126:12;18119:51;18224:3;18217:5;18213:15;18200:29;18196:1;18190:4;18186:12;18179:51;18269:1;18263:4;18259:12;18280:173;18386:66;18447:3;18440:5;18436:15;18386:66;:::i;:::-;18372:12;18280:173;:::i;:::-;18462:109;18526:44;18565:3;18558:5;18554:15;18526:44;:::i;:::-;18512:12;17120:11;;-1:-1:-1;;;;;;17156:35:121;17201:1;17197:13;;;;-1:-1:-1;;;;;17193:41:121;17153:82;;;;17140:96;;17024:218;18462:109;;18625:3;18618:5;18614:15;18601:29;18597:1;18591:4;18587:12;18580:51;18640:109;18704:44;18743:3;18736:5;18732:15;18704:44;:::i;:::-;18700:1;18694:4;18690:12;17353:11;;-1:-1:-1;;;;;;17349:54:121;-1:-1:-1;;;;;17405:31:121;;;;17346:91;;;;17333:105;;17247:197;19355:495;19416:3;19454:5;19448:12;19481:6;19476:3;19469:19;19507:4;19536:2;19531:3;19527:12;19520:19;;19558:5;19555:1;19548:16;19600:2;19597:1;19587:16;19621:1;19631:194;19645:6;19642:1;19639:13;19631:194;;;19710:13;;-1:-1:-1;;;;;19706:39:121;19694:52;;19766:12;;;;19742:1;19801:14;;;;19660:9;19631:194;;;-1:-1:-1;19841:3:121;;19355:495;-1:-1:-1;;;;;19355:495:121:o;19855:337::-;20059:6;20048:9;20041:25;20102:2;20097;20086:9;20082:18;20075:30;20022:4;20122:64;20182:2;20171:9;20167:18;20159:6;20122:64;:::i;:::-;20114:72;19855:337;-1:-1:-1;;;;19855:337:121:o;21559:1047::-;21647:12;;21635:25;;21703:4;21692:16;;21686:23;21728:10;21765:18;;;21794:4;21785:14;;1051:35;21809:64;21867:4;21862:3;21858:14;21853:2;21841:9;21835:4;21831:20;21827:29;1074:10;1063:22;1051:35;;998:94;21809:64;-1:-1:-1;21926:6:121;21908:4;21904:20;;;21900:33;21944:4;21935:14;;1150:31;22024:2;22020:18;-1:-1:-1;;;;;22016:27:121;;;22054:4;22045:14;;735:44;22109:4;22098:16;;22092:23;22085:4;22076:14;;22069:47;22165:4;22154:16;;22148:23;22141:4;22132:14;;22125:47;22217:4;22206:16;;22200:23;;22232:80;22306:4;22297:14;;22290:4;22273:22;;22232:80;:::i;:::-;22321:66;22379:6;22374:3;22370:16;22365:2;22351:11;22348:1;22344:19;22340:28;-1:-1:-1;;;;;747:31:121;735:44;;681:104;22321:66;-1:-1:-1;;22438:4:121;22427:16;;22421:23;22412:6;22403:16;;22396:49;22534:4;22523:16;22517:23;-1:-1:-1;;;;;19308:36:121;22592:6;22583:16;;;735:44;8478:1439:98:o;22611:451:121:-;22835:4;22864:3;22876:59;22925:9;22917:6;22876:59;:::i;:::-;22972:2;22966:3;22955:9;22951:19;22944:31;22992:64;23052:2;23041:9;23037:18;23029:6;22992:64;:::i;23067:251::-;23137:6;23190:2;23178:9;23169:7;23165:23;23161:32;23158:52;;;23206:1;23203;23196:12;23158:52;23238:9;23232:16;23257:31;23282:5;23257:31;:::i;23323:678::-;23697:3;23686:9;23679:22;23738:1;23732:3;23721:9;23717:19;23710:30;-1:-1:-1;;;23771:3:121;23760:9;23756:19;23749:40;23827:3;23820:4;23809:9;23805:20;23798:33;23660:4;23848:50;23893:3;23882:9;23878:19;9884:1;9872:14;;-1:-1:-1;;;9911:4:121;9902:14;;9895:31;9951:2;9942:12;;9807:153;23848:50;23840:58;;23934:6;23929:2;23918:9;23914:18;23907:34;23989:4;23981:6;23977:17;23972:2;23961:9;23957:18;23950:45;23323:678;;;;;:::o;27543:340::-;27775:25;;;27762:3;27747:19;;27809:68;27873:2;27858:18;;27850:6;27809:68;:::i;27888:273::-;27956:6;28009:2;27997:9;27988:7;27984:23;27980:32;27977:52;;;28025:1;28022;28015:12;27977:52;28057:9;28051:16;28107:4;28100:5;28096:16;28089:5;28086:27;28076:55;;28127:1;28124;28117:12;28166:148;28254:4;28233:12;;;28247;;;28229:31;;28272:13;;28269:39;;;28288:18;;:::i;28319:422::-;28408:1;28451:5;28408:1;28465:270;28486:7;28476:8;28473:21;28465:270;;;28545:4;28541:1;28537:6;28533:17;28527:4;28524:27;28521:53;;;28554:18;;:::i;:::-;28604:7;28594:8;28590:22;28587:55;;;28624:16;;;;28587:55;28703:22;;;;28663:15;;;;28465:270;;;28469:3;28319:422;;;;;:::o;28746:806::-;28795:5;28825:8;28815:80;;-1:-1:-1;28866:1:121;28880:5;;28815:80;28914:4;28904:76;;-1:-1:-1;28951:1:121;28965:5;;28904:76;28996:4;29014:1;29009:59;;;;29082:1;29077:130;;;;28989:218;;29009:59;29039:1;29030:10;;29053:5;;;29077:130;29114:3;29104:8;29101:17;29098:43;;;29121:18;;:::i;:::-;-1:-1:-1;;29177:1:121;29163:16;;29192:5;;28989:218;;29291:2;29281:8;29278:16;29272:3;29266:4;29263:13;29259:36;29253:2;29243:8;29240:16;29235:2;29229:4;29226:12;29222:35;29219:77;29216:159;;;-1:-1:-1;29328:19:121;;;29360:5;;29216:159;29407:34;29432:8;29426:4;29407:34;:::i;:::-;29477:6;29473:1;29469:6;29465:19;29456:7;29453:32;29450:58;;;29488:18;;:::i;:::-;29526:20;;28746:806;-1:-1:-1;;;28746:806:121:o;29557:140::-;29615:5;29644:47;29685:4;29675:8;29671:19;29665:4;29644:47;:::i;30672:250::-;30757:1;30767:113;30781:6;30778:1;30775:13;30767:113;;;30857:11;;;30851:18;30838:11;;;30831:39;30803:2;30796:10;30767:113;;;-1:-1:-1;;30914:1:121;30896:16;;30889:27;30672:250::o;30927:384::-;-1:-1:-1;;;;;;31112:33:121;;31100:46;;31169:13;;31082:3;;31191:74;31169:13;31254:1;31245:11;;31238:4;31226:17;;31191:74;:::i;:::-;31285:16;;;;31303:1;31281:24;;30927:384;-1:-1:-1;;;30927:384:121:o;31316:287::-;31445:3;31483:6;31477:13;31499:66;31558:6;31553:3;31546:4;31538:6;31534:17;31499:66;:::i;:::-;31581:16;;;;;31316:287;-1:-1:-1;;31316:287:121:o;31608:277::-;31675:6;31728:2;31716:9;31707:7;31703:23;31699:32;31696:52;;;31744:1;31741;31734:12;31696:52;31776:9;31770:16;31829:5;31822:13;31815:21;31808:5;31805:32;31795:60;;31851:1;31848;31841:12;32561:135;32600:3;32621:17;;;32618:43;;32641:18;;:::i;:::-;-1:-1:-1;32688:1:121;32677:13;;32561:135::o;33061:271::-;33103:3;33141:5;33135:12;33168:6;33163:3;33156:19;33184:76;33253:6;33246:4;33241:3;33237:14;33230:4;33223:5;33219:16;33184:76;:::i;:::-;33314:2;33293:15;-1:-1:-1;;33289:29:121;33280:39;;;;33321:4;33276:50;;33061:271;-1:-1:-1;;33061:271:121:o;33337:446::-;33587:2;33576:9;33569:21;33626:1;33621:2;33610:9;33606:18;33599:29;-1:-1:-1;;;33659:2:121;33648:9;33644:18;33637:35;33710:3;33703:4;33692:9;33688:20;33681:33;33550:4;33731:46;33772:3;33761:9;33757:19;33749:6;33731:46;:::i;33788:168::-;33861:9;;;33892;;33909:15;;;33903:22;;33889:37;33879:71;;33930:18;;:::i;35487:127::-;35548:10;35543:3;35539:20;35536:1;35529:31;35579:4;35576:1;35569:15;35603:4;35600:1;35593:15;35619:125;35684:9;;;35705:10;;;35702:36;;;35718:18;;:::i;36316:348::-;36546:2;36535:9;36528:21;36509:4;36566:49;36611:2;36600:9;36596:18;36229:2;36217:15;;-1:-1:-1;;;36257:4:121;36248:14;;36241:36;36302:2;36293:12;;36152:159;36566:49;36558:57;;36651:6;36646:2;36635:9;36631:18;36624:34;36316:348;;;;:::o;36833:::-;37063:2;37052:9;37045:21;37026:4;37083:49;37128:2;37117:9;37113:18;36746:2;36734:15;;-1:-1:-1;;;36774:4:121;36765:14;;36758:36;36819:2;36810:12;;36669:159;37589:440;37839:2;37828:9;37821:21;37802:4;37865:49;37910:2;37899:9;37895:18;36229:2;36217:15;;-1:-1:-1;;;36257:4:121;36248:14;;36241:36;36302:2;36293:12;;36152:159;37865:49;37962:9;37954:6;37950:22;37945:2;37934:9;37930:18;37923:50;37990:33;38016:6;38008;37990:33;:::i;38034:440::-;38284:2;38273:9;38266:21;38247:4;38310:49;38355:2;38344:9;38340:18;36746:2;36734:15;;-1:-1:-1;;;36774:4:121;36765:14;;36758:36;36819:2;36810:12;;36669:159;39237:374;39467:2;39456:9;39449:21;39430:4;39487:49;39532:2;39521:9;39517:18;36229:2;36217:15;;-1:-1:-1;;;36257:4:121;36248:14;;36241:36;36302:2;36293:12;;36152:159;39487:49;-1:-1:-1;;;;;39572:32:121;;;;39567:2;39552:18;;;;39545:60;;;;-1:-1:-1;39479:57:121;39237:374::o;39616:::-;39846:2;39835:9;39828:21;39809:4;39866:49;39911:2;39900:9;39896:18;36746:2;36734:15;;-1:-1:-1;;;36774:4:121;36765:14;;36758:36;36819:2;36810:12;;36669:159",
    "linkReferences": {},
    "immutableReferences": {
      "8324": [
        {
          "start": 1812,
          "length": 32
        },
        {
          "start": 1869,
          "length": 32
        },
        {
          "start": 2183,
          "length": 32
        }
      ],
      "8326": [
        {
          "start": 1663,
          "length": 32
        },
        {
          "start": 1975,
          "length": 32
        },
        {
          "start": 2239,
          "length": 32
        },
        {
          "start": 5879,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_marketRegistry()": "fd7b2d91",
    "_tellerV2()": "eafef46e",
    "acceptCommitment(uint256,uint256,uint256,uint256,address,uint16,uint32)": "592113d0",
    "commitments(uint256)": "49ce8997",
    "createCommitment((uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address),address[])": "c1abfa11",
    "createCommitment_test()": "1a287b41",
    "decrementCommitment_before()": "93afc31a",
    "decrementCommitment_test()": "6e7b3afe",
    "deleteCommitment(uint256)": "bfb40bc0",
    "failed()": "ba414fa6",
    "getCommitmentBorrowers(uint256)": "7d458e7b",
    "getMarketRegistry()": "c66b8ed2",
    "getRequiredCollateral(uint256,uint256,uint8,address,address)": "7479208b",
    "getTellerV2()": "dc003d5a",
    "getTellerV2MarketOwner(uint256)": "1dcaa70d",
    "setUp()": "0a9254e4",
    "test_acceptCommitment()": "0bc62bf3",
    "test_acceptCommitmentFailsWithInsufficientCollateral()": "4115e42b",
    "test_acceptCommitmentFailsWithInvalidAmount()": "9df2794a",
    "test_acceptCommitmentWithBorrowersArray_invalid()": "1723c247",
    "test_acceptCommitmentWithBorrowersArray_reset()": "d8fd11ca",
    "test_acceptCommitmentWithBorrowersArray_valid()": "aa95bcbd",
    "test_deleteCommitment()": "f8739315",
    "test_getRequiredCollateral_1000_USDC_loan_9_gwei_per_usdc_unit()": "5c012803",
    "test_getRequiredCollateral_1_GWEI_loan__00059_WETH_per_USDC()": "08c31d35",
    "test_getRequiredCollateral_1_WEI_loan__00059_WETH_per_USDC()": "d4840680",
    "test_getRequiredCollateral_1_WETH_loan__00059_per_USDC()": "3ea64627",
    "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC()": "994f8174",
    "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC_unit()": "bca67dc3",
    "test_getRequiredCollateral_500_USDC_loan__500_per_ERC721()": "d833c1bd",
    "test_getRequiredCollateral_6_GWEI_loan__00059_WETH_per_USDC()": "bb68c612",
    "test_getRequiredCollateral_700_USDC__500_per_WETH()": "13dcb087",
    "test_getRequiredCollateral_700_USDC_loan__500_per_ERC1155()": "97dc6201",
    "test_getRequiredCollateral_8888_USDC_loan__9_gwei_per_usdc_unit()": "cccfc69c",
    "test_getRequiredCollateral_8888_USDC_loan__unit()": "35cf4680",
    "test_updateCommitment()": "626722f4",
    "updateCommitment(uint256,(uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address))": "1409a2e4",
    "updateCommitmentBorrowers(uint256,address[])": "5ec77a81"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"InsufficientBorrowerCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"allocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"}],\"name\":\"InsufficientCommitmentAllocation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"commitmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lendingToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"CreatedCommitment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"commitmentId\",\"type\":\"uint256\"}],\"name\":\"DeletedCommitment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"commitmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"}],\"name\":\"ExercisedCommitment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"commitmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lendingToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedCommitment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"commitmentId\",\"type\":\"uint256\"}],\"name\":\"UpdatedCommitmentBorrowers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_marketRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tellerV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitmentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateralTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_interestRate\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_loanDuration\",\"type\":\"uint32\"}],\"name\":\"acceptCommitment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxPrincipal\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"expiration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"minInterestRate\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrincipalPerCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum LenderCommitmentForwarder.CommitmentCollateralType\",\"name\":\"collateralTokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"principalTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxPrincipal\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"expiration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"minInterestRate\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrincipalPerCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum LenderCommitmentForwarder.CommitmentCollateralType\",\"name\":\"collateralTokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"principalTokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct LenderCommitmentForwarder.Commitment\",\"name\":\"_commitment\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_borrowerAddressList\",\"type\":\"address[]\"}],\"name\":\"createCommitment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"commitmentId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createCommitment_test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decrementCommitment_before\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decrementCommitment_test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitmentId\",\"type\":\"uint256\"}],\"name\":\"deleteCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitmentId\",\"type\":\"uint256\"}],\"name\":\"getCommitmentBorrowers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"borrowers_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPrincipalPerCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum LenderCommitmentForwarder.CommitmentCollateralType\",\"name\":\"_collateralTokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_principalTokenAddress\",\"type\":\"address\"}],\"name\":\"getRequiredCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTellerV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getTellerV2MarketOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_acceptCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_acceptCommitmentFailsWithInsufficientCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_acceptCommitmentFailsWithInvalidAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_acceptCommitmentWithBorrowersArray_invalid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_acceptCommitmentWithBorrowersArray_reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_acceptCommitmentWithBorrowersArray_valid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_deleteCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_1000_USDC_loan_9_gwei_per_usdc_unit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_1_GWEI_loan__00059_WETH_per_USDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_1_WEI_loan__00059_WETH_per_USDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_1_WETH_loan__00059_per_USDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC_unit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_500_USDC_loan__500_per_ERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_6_GWEI_loan__00059_WETH_per_USDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_700_USDC__500_per_WETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_700_USDC_loan__500_per_ERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_8888_USDC_loan__9_gwei_per_usdc_unit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRequiredCollateral_8888_USDC_loan__unit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_updateCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitmentId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxPrincipal\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"expiration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"minInterestRate\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrincipalPerCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum LenderCommitmentForwarder.CommitmentCollateralType\",\"name\":\"collateralTokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"principalTokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct LenderCommitmentForwarder.Commitment\",\"name\":\"_commitment\",\"type\":\"tuple\"}],\"name\":\"updateCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitmentId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_borrowerAddressList\",\"type\":\"address[]\"}],\"name\":\"updateCommitmentBorrowers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptCommitment(uint256,uint256,uint256,uint256,address,uint16,uint32)\":{\"details\":\"LoanDuration must be longer than the market payment cycle\",\"params\":{\"_collateralAmount\":\"The amount of collateral to use for the loan.\",\"_collateralTokenAddress\":\"The contract address to use for the loan collateral token.s\",\"_collateralTokenId\":\"The tokenId of collateral to use for the loan if ERC721 or ERC1155.\",\"_commitmentId\":\"The id of the commitment being accepted.\",\"_interestRate\":\"The interest rate APY to use for the loan in basis points.\",\"_loanDuration\":\"The overall duratiion for the loan.  Must be longer than market payment cycle duration.\",\"_principalAmount\":\"The amount of currency to borrow for the loan.\"},\"returns\":{\"bidId\":\"The ID of the loan that was created on TellerV2\"}},\"createCommitment((uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address),address[])\":{\"params\":{\"_borrowerAddressList\":\"The array of borrowers that are allowed to accept loans using this commitment\",\"_commitment\":\"The new commitment data expressed as a struct\"},\"returns\":{\"commitmentId_\":\"returns the commitmentId for the created commitment\"}},\"deleteCommitment(uint256)\":{\"params\":{\"_commitmentId\":\"The id of the commitment to delete.\"}},\"getCommitmentBorrowers(uint256)\":{\"params\":{\"_commitmentId\":\"The commitment id for the commitment to query.\"},\"returns\":{\"borrowers_\":\"An array of addresses restricted to accept the commitment. Empty array means unrestricted.\"}},\"getRequiredCollateral(uint256,uint256,uint8,address,address)\":{\"params\":{\"_collateralTokenAddress\":\"The contract address for the collateral for the loan.\",\"_collateralTokenType\":\"The type of collateral for the loan either ERC20, ERC721, ERC1155, or None.\",\"_maxPrincipalPerCollateralAmount\":\"The ratio for the amount of principal that can be borrowed for each amount of collateral. This is expanded additionally by the principal decimals.\",\"_principalAmount\":\"The amount of currency to borrow for the loan.\",\"_principalTokenAddress\":\"The contract address for the principal for the loan.\"}},\"updateCommitment(uint256,(uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address))\":{\"params\":{\"_commitment\":\"The new commitment data expressed as a struct\",\"_commitmentId\":\"The Id of the commitment to update.\"}},\"updateCommitmentBorrowers(uint256,address[])\":{\"params\":{\"_borrowerAddressList\":\"The array of borrowers that are allowed to accept loans using this commitment\",\"_commitmentId\":\"The Id of the commitment to update.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"CreatedCommitment(uint256,address,uint256,address,uint256)\":{\"notice\":\"This event is emitted when a lender's commitment is created.\"},\"DeletedCommitment(uint256)\":{\"notice\":\"This event is emitted when a lender's commitment has been deleted.\"},\"ExercisedCommitment(uint256,address,uint256,uint256)\":{\"notice\":\"This event is emitted when a lender's commitment is exercised for a loan.\"},\"UpdatedCommitment(uint256,address,uint256,address,uint256)\":{\"notice\":\"This event is emitted when a lender's commitment is updated.\"},\"UpdatedCommitmentBorrowers(uint256)\":{\"notice\":\"This event is emitted when the allowed borrowers for a commitment is updated.\"}},\"kind\":\"user\",\"methods\":{\"acceptCommitment(uint256,uint256,uint256,uint256,address,uint16,uint32)\":{\"notice\":\"Accept the commitment to submitBid and acceptBid using the funds\"},\"createCommitment((uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address),address[])\":{\"notice\":\"Creates a loan commitment from a lender for a market.\"},\"deleteCommitment(uint256)\":{\"notice\":\"Removes the commitment of a lender to a market.\"},\"getCommitmentBorrowers(uint256)\":{\"notice\":\"Return the array of borrowers that are allowlisted for a commitment\"},\"getRequiredCollateral(uint256,uint256,uint8,address,address)\":{\"notice\":\"Calculate the amount of collateral required to borrow a loan with _principalAmount of principal\"},\"test_getRequiredCollateral_1000_USDC_loan_9_gwei_per_usdc_unit()\":{\"notice\":\"collateral token = WETH (10**18)              principal token = USDC (10**6)                    principal = 1000 USDC $ max principal per collateral = 1.0 WETH\"},\"test_getRequiredCollateral_1_GWEI_loan__00059_WETH_per_USDC()\":{\"notice\":\"collateral token = USDC (10**6)              principal token = WETH (10**18)                    principal = 1 GWEI max principal per collateral = 0.00059 WETH per gwei\"},\"test_getRequiredCollateral_1_WEI_loan__00059_WETH_per_USDC()\":{\"notice\":\"collateral token = USDC (10**6)              principal token = WEI (10**0)                    principal = 1 WEI max principal per collateral = // 0.00059 WETH per usdc base unit\"},\"test_getRequiredCollateral_1_WETH_loan__00059_per_USDC()\":{\"notice\":\"collateral token = USDC (10**6)              principal token = WETH (10**18)                    principal = 1 WETH max principal per collateral = 0.00059 WETH\"},\"test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC()\":{\"notice\":\"collateral token = USDC (10**6)              principal token = WETH (10**18)                    principal = 1 GWEI max principal per collateral = 1 wei per usdc $\"},\"test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC_unit()\":{\"notice\":\"collateral token = USDC (10**6)              principal token = WETH (10**18)                    principal = 1 wei max principal per collateral = 1 wei per usdc $\"},\"test_getRequiredCollateral_500_USDC_loan__500_per_ERC721()\":{\"notice\":\"collateral token = NFT (10**0)              principal token = USDC (10**6)                    principal = 500 USDC max principal per collateral = 500 USDC\"},\"test_getRequiredCollateral_6_GWEI_loan__00059_WETH_per_USDC()\":{\"notice\":\"collateral token = USDC (10**6)              principal token = GWEI (10**9)                    principal = 6 GWEI max principal per collateral = 0.00059 USDC per gwei\"},\"test_getRequiredCollateral_700_USDC__500_per_WETH()\":{\"notice\":\"collateral token = WETH (10**18)              principal token = USDC (10**6)                    principal = 700 USDC max principal per collateral = 500 USDC\"},\"test_getRequiredCollateral_700_USDC_loan__500_per_ERC1155()\":{\"notice\":\"collateral token = NFT (10**0)              principal token = USDC (10**6)                    principal = 700 USDC max principal per collateral = 500 USDC\"},\"test_getRequiredCollateral_8888_USDC_loan__9_gwei_per_usdc_unit()\":{\"notice\":\"collateral token = WETH (10**18)              principal token = USDC (10**6)                    principal = 8888 USDC $ max principal per collateral = 1 gwei per USDDC base unit\"},\"test_getRequiredCollateral_8888_USDC_loan__unit()\":{\"notice\":\"collateral token = WETH (10**18)              principal token = USDC (10**8)                    principal = 8888 USDC max principal per collateral =  8888000000 wei per USDC base unit\"},\"updateCommitment(uint256,(uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address))\":{\"notice\":\"Updates the commitment of a lender to a market.\"},\"updateCommitmentBorrowers(uint256,address[])\":{\"notice\":\"Updates the borrowers allowed to accept a commitment\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/LenderCommitmentForwarder_Test.sol\":\"LenderCommitmentForwarder_Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@mangrovedao/=node_modules/@mangrovedao/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/EAS/TellerAS.sol\":{\"keccak256\":\"0x01848d2b9b7815144137d3ad654ac3246dd740f03e9e951ecf70374d71f8e354\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18ac37f315357b8ae3da92f2c5a71dfe3619bf8a2c0c4fc5f66e1f058ee0cdb7\",\"dweb:/ipfs/QmbsDurxc5zdYUtMTb4Hz3M629cLA21HnQGQYD1KRTk8Qs\"]},\"contracts/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xca6e53699cb6e4001eff7527dc3fcea591be3b04514ab899933fc0f107de4933\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66297aa8ca1f16c511b761f5060333780478578bf866a7c8f90af2c44b4dfcdd\",\"dweb:/ipfs/QmcxadMsCeUAb2nkspETvEFGUDCWhvnaFpECogUtJKLvbB\"]},\"contracts/LenderCommitmentForwarder.sol\":{\"keccak256\":\"0x91dee7ceddb2e0791bb8174f1f567536146d51d7f408d6350956b8cda091bfe7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27a2189796b448dd4d516e62a7116e15da128ae518357f942324a89c290088cb\",\"dweb:/ipfs/QmVUhfLRiyGyYirntiRJ7MKV2bMv2NUUYsNfYvwsbiWZ9g\"]},\"contracts/ProtocolFee.sol\":{\"keccak256\":\"0x8a4fbca87131233a11efc1c5006a9b9d5ea45b82078c85726ce9e07ef13e2893\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://158488abd8c3e29e1d4f83173120a3d808a38f330067d94852df767ef00b4acf\",\"dweb:/ipfs/QmRc4iCqThiNT2uptvpHZPV5WCbgD5X86Ty1AfSyim2B2V\"]},\"contracts/TellerV2.sol\":{\"keccak256\":\"0x3f25702f4a20dc051e4d02acf96f3fada90fa5b763e6f1ec4c89fe066cf7c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60d6634efd47aaf00a37afd1d88187d91cbbe601ffa587a27965dc2660d63739\",\"dweb:/ipfs/Qmah59JrjBzNsUXmwfUNo731HGtoLbtpTsRauBAxnfnFca\"]},\"contracts/TellerV2Context.sol\":{\"keccak256\":\"0xac04758cc31571352e976d2b33e660d8161176fdf712c76049fb1eda2289f551\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcfd63c27d26f98b2623eca2c14d817b870f648124d20370eda1e0a032ed9e43\",\"dweb:/ipfs/QmY6aCCsjpGHomnxtrVyLopTBDUzuFisgLiJ6zcy2x68Z9\"]},\"contracts/TellerV2MarketForwarder.sol\":{\"keccak256\":\"0xa5820f997a7e78d2902d3d35eadcbff28a589b5545d023b07acd085f8fc089e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcf5ddc31369884b57d05ddf29fc08bf7cf7e8e561f2ff522092a106ae7128f5\",\"dweb:/ipfs/Qmddxo3DwB8tNPXhCa2b6xYioe3QgEaMW53KKRmfptsEXH\"]},\"contracts/TellerV2Storage.sol\":{\"keccak256\":\"0x600fd24b7211e1883081b4389fbc715365afe563a56808f904a83235e6efbe2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87f9f5779acc5cacde04a3bea2d560a526df9a183079dca5e7ce53158d7217f9\",\"dweb:/ipfs/QmfVwkUZTaZYryw49bDgehFWjCoXQAJBUYBkD66AVGBbfN\"]},\"contracts/Types.sol\":{\"keccak256\":\"0x2e4bcf4a965f840193af8729251386c1826cd050411ba4a9e85984a2551fd2ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbab8d73d76e1aa1eaead6a911d5a35f7edb18f9c67484c08bfaa96d4e3e1d68\",\"dweb:/ipfs/QmVxRujQoBdZEote43JdaAgXkYzfqFdBbiu7rPYU3rXf2N\"]},\"contracts/interfaces/IASRegistry.sol\":{\"keccak256\":\"0x74752921f592df45c8717d7084627e823b1dbc93bad7187cd3023c9690df7e60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14ed67b4973bd1b2797604cfd652387bbe230682f3f5a41e922879a0f4d5b668\",\"dweb:/ipfs/QmTJ5fvKX7deAQ8YpoPmwyVR379BdfbKSzaHSLoje7h5Tx\"]},\"contracts/interfaces/IASResolver.sol\":{\"keccak256\":\"0xfce671ea099d9f997a69c3447eb4a9c9693d37c5b97e43ada376e614e1c7cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6673f2ba98aafbeb4bdbfbc2392b164a7ae4e82b8b8a5f5b9b484fbdf4653cc1\",\"dweb:/ipfs/QmVSkwZpHzgpTyzcydE8SptJiGRvK89KahhxBuwNZNm8d2\"]},\"contracts/interfaces/ICollateralManager.sol\":{\"keccak256\":\"0x549d37cb1390adad543f2e7b1ad46104c4326c4af7dbccda35116833103a6465\",\"urls\":[\"bzz-raw://ccadec56789cef8cd1c1467a25bf51f53cff652be7c04694643fad9af0cf4772\",\"dweb:/ipfs/QmRnx4QyayDXaYSzAMUh9TUG7WMvBBTjYD9yfJ34qRWknq\"]},\"contracts/interfaces/IEAS.sol\":{\"keccak256\":\"0x5db90829269f806ed14a6c638f38d4aac1fa0f85829b34a2fcddd5200261c148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e82edf58a6332d6966f860d847329cb7d7b51f8c30942ba55e31bf26c39f8b5\",\"dweb:/ipfs/QmZYqmByHpugi3YD6ngTfD2ViW2GFYywfzq3BJjifADpWc\"]},\"contracts/interfaces/IEASEIP712Verifier.sol\":{\"keccak256\":\"0xeca3ac3bacec52af15b2c86c5bf1a1be315aade51fa86f95da2b426b28486b1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e3d65dfbe36cc3718f5472061d283bf53ce920b929ed1a3cbab7c7129b7fe9d\",\"dweb:/ipfs/QmPDqoVWC95KkxoWeq4sreQYA2ELsMPhowi7eunU8c6qjW\"]},\"contracts/interfaces/ILenderManager.sol\":{\"keccak256\":\"0xceb1ea2ef4c6e2ad7986db84de49c959e8d59844563d27daca5b8d78b732a8f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c1997731854ff95ffcfe0a6fee9c12da3ccfc422650e9107830347317d950e\",\"dweb:/ipfs/Qmc9Y9Exop9ZNfX3QDRK6ev4nEVLDrdaCUMtNGm8fMUREd\"]},\"contracts/interfaces/IMarketRegistry.sol\":{\"keccak256\":\"0x7209557aa8e3ddd81d0b863a8c063520a0011d96e1b3690a322f3371468f6dc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba66c3c76306b24f4f5f31854d3fd92741eda12ee05f12ddc60c0031d545d502\",\"dweb:/ipfs/QmToDeLtPzo6hbxaoYg3zjwVnAox6CtDGhoSVecX6c45yC\"]},\"contracts/interfaces/IReputationManager.sol\":{\"keccak256\":\"0x8d6e50fd460912231e53135b4459aa2f6f16007ae8deb32bc2cee1e88311a8d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03916311f51b553acf71bad455de12f056d367b5fe2ba5ad1caa74fabd3315d0\",\"dweb:/ipfs/QmXnPx58qKBv5mCuUWP2AemjKsQWzGY1nMemS5NoJQ35NK\"]},\"contracts/interfaces/ITellerV2.sol\":{\"keccak256\":\"0x62c61e6811becc51d0d644e54c342279565e9d8ff5a386cde5a784440a404da7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d886317b83a41a1e8a298c5befb11ca7a5fd3c59df54ecab0c8696b945b3e84a\",\"dweb:/ipfs/QmNikGpckv9PXpxQU1ewnAapD7URV2CAAozw8r8wtZvjwe\"]},\"contracts/interfaces/ITellerV2Context.sol\":{\"keccak256\":\"0x281d1e303563559cbf252e07804d7a8b2a64dc3f49f1c36feefbfdb537a68ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1dce2d581d35c020ddebb8bb41dd29bd902741d7a28b09807f4abd5dc3994f\",\"dweb:/ipfs/QmQ5af5fm9KLkg3TMGmMresHVbthHK8NX4PYsgks1yLkv2\"]},\"contracts/interfaces/escrow/ICollateralEscrowV1.sol\":{\"keccak256\":\"0xefb7928c982f328c8df17f736b2c542df12f6c5b326933076faaae970ae49fa8\",\"urls\":[\"bzz-raw://17fede8e6395ba154eff4e21bd16701d08d036b2287d74983f8d992019241ef5\",\"dweb:/ipfs/QmUBCQhUVsfp1zFoTg6dVyrGjU85uhM7F3FPD1vXbzC7ge\"]},\"contracts/libraries/DateTimeLib.sol\":{\"keccak256\":\"0xf194df8ea9946a5bb3300223629b7e4959c1f20bacba27b3dc5f6dd2a160147a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8860a1dadb201e8997ceda121019f685c4ee6a64e24ef06b008520b442b1f323\",\"dweb:/ipfs/QmYrnjEw3LSwDrdEoHHSVUtH7ww1CiVEnXwowFG8xMyZ7q\"]},\"contracts/libraries/NumbersLib.sol\":{\"keccak256\":\"0x78009ffb3737ab7615a1e38a26635d6c06b65b7b7959af46d6ef840d220e70cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://589ed65f671f403e82c6bc3d8818b972034fdd954e29f24e19520450221cc95e\",\"dweb:/ipfs/QmWiHoGhZqXZr7HEx5LqmEc4w3Xvg452RtVKiGLtmWYV4Q\"]},\"contracts/libraries/V2Calculations.sol\":{\"keccak256\":\"0xcb9f3cb8f8800aa321690418467da8dc40ff115b7697374e5c4364e4c7b2d759\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e86310f871949211747a3c40e02e421ea61d2365246d821b5a34fef7ffd5ece\",\"dweb:/ipfs/QmbGrHbZ1pnPbo1MjYvZaj7X4AuCKvFbWnyjj5nXYUu9y6\"]},\"contracts/libraries/WadRayMath.sol\":{\"keccak256\":\"0x2781319be7a96f56966c601c061849fa94dbf9af5ad80a20c40b879a8d03f14a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://267426cb6b8ef332bc61bd66a2e82ad60710fefbac46c55d7c7e4104dd2297f1\",\"dweb:/ipfs/QmazyCfuGn2amqnPU5Az1eRARbnGZGav3t5veQAjjLH8gK\"]},\"contracts/mock/MarketRegistryMock.sol\":{\"keccak256\":\"0x30aa1aaadb03541d4f7489c84415ce1424345a2da8e6b6b0a7801f4da3ffe11b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6aa1f9f0fff9ff010351396180b29d8586d30a7f5bb46f8fbdd4fae31545d05\",\"dweb:/ipfs/QmP4AuevFVc2wu8xpBfbC4KFCbDoLKeCZGgJuxAdCbAXcK\"]},\"contracts/mock/WethMock.sol\":{\"keccak256\":\"0x93b7aeeb0f44d55287fb36e0c5e78a70e3e3e71c6be958471d0a21e4dd19421f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e43a13640ccf0ccb80aabd3dfb6823a8c1730b28fedec3ca48d52b99e079dfd7\",\"dweb:/ipfs/QmabuUydTvsAGYQi6Ce6SGCJ7TK791tXynUCLKD7i4zQhA\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c\",\"dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4\",\"dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3\",\"dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x4807db844a856813048b5af81a764fdd25a0ae8876a3132593e8d21ddc6b607c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca2fce75b1b20047a41f6f67d2d1be3d24308bf34668a22c2f971689e319a70\",\"dweb:/ipfs/QmQ8hxhdkDmwK9CBURbV2eaEeFTBYb3bB3ByWw1GmjvEWo\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"tests/LenderCommitmentForwarder_Test.sol\":{\"keccak256\":\"0xf6c2183c506c5acc6489f5c95eadeb9f801d0e62bea3ea18dd88100c878a4be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d04ace8f1728d5bf79bb7bec785120f5210579b03924d2a53f17876792c0d004\",\"dweb:/ipfs/QmSwspwJDT2zLhiBSjZH2Wop8VGzNfFbpZYKJdoxKiYbBS\"]},\"tests/Test_Helpers.sol\":{\"keccak256\":\"0x7e8bc5fe5c924431555000612c4f5f986f2d9dbc351a96eab5a90eaef6dbf7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0c6d0e1ff733c8989a3e3e8c4e3eec40799e777c1b07a574f70f06a226dcabc\",\"dweb:/ipfs/QmVmvHAViWdK13EjdFkaFQbeiYputtgxnFu4ASeghXQSES\"]},\"tests/Testable.sol\":{\"keccak256\":\"0x9de2783fbe8f7ce48d88cf052e4fb9774e6d44cac1de5cdb6f3889d7d2ce4474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c42c7a748363a7a34c08ebda6a70a3d3c59828bc87651c6238cccb9eefcfd68\",\"dweb:/ipfs/Qmc1LnQMXXJL9SCTnEPu63kRXjCTMg8D72UTAxVzMB2xfW\"]},\"tests/resolvers/TestERC20Token.sol\":{\"keccak256\":\"0x7a516fc55e1a13f91d9e90a3a87cdcd1a9f5b72df83b9311c42e8266bb7d4c90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1c2c806152b3405cdceb88da95db1b2cf83e26435f159d5a754ace849d7499d\",\"dweb:/ipfs/QmRBwT1Rb4WtadVbn8SXYJ5VHQxsCmiYr9wjwvmV4BsVMz\"]},\"tests/util/FoundryTest.sol\":{\"keccak256\":\"0xdb8ac66b6e0650cf9c6f10a8949bb53f24482af3bb18dfb97368fae12fdf45f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://863071d99087fad831eb89fbfdf46b0591a75639a9c98047c521a691036a5493\",\"dweb:/ipfs/Qmc5oRMK1tQvvt5bfzJhGrLyjVXYZ2gp46rEeVnR6BHkGc\"]},\"tests/util/StdChains.sol\":{\"keccak256\":\"0xfd91ae9acfb0104800a67ab316be4274572a25521e0a98a247eb158933ba953b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://961975fca13be85b2b76234f24a954391069c5ecab444977c506f3655c6d4a35\",\"dweb:/ipfs/QmRbkn8RouoP6TUTU85pru27vMVsvwKLqPM8vERNN64yTx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "required",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientBorrowerCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "allocated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientCommitmentAllocation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "commitmentId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "marketId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "lendingToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreatedCommitment",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "commitmentId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DeletedCommitment",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "commitmentId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExercisedCommitment",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "commitmentId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "marketId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "lendingToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedCommitment",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "commitmentId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UpdatedCommitmentBorrowers",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_marketRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_tellerV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_commitmentId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_collateralTokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "_interestRate",
              "type": "uint16"
            },
            {
              "internalType": "uint32",
              "name": "_loanDuration",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptCommitment",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "commitments",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxPrincipal",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "expiration",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxDuration",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "minInterestRate",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrincipalPerCollateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum LenderCommitmentForwarder.CommitmentCollateralType",
              "name": "collateralTokenType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "marketId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "principalTokenAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LenderCommitmentForwarder.Commitment",
              "name": "_commitment",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxPrincipal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "expiration",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxDuration",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "minInterestRate",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "collateralTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralTokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPrincipalPerCollateralAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "enum LenderCommitmentForwarder.CommitmentCollateralType",
                  "name": "collateralTokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "marketId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "principalTokenAddress",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "_borrowerAddressList",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createCommitment",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "commitmentId_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createCommitment_test"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decrementCommitment_before"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decrementCommitment_test"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_commitmentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteCommitment"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_commitmentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCommitmentBorrowers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "borrowers_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxPrincipalPerCollateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum LenderCommitmentForwarder.CommitmentCollateralType",
              "name": "_collateralTokenType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "_collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_principalTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRequiredCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTellerV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "marketId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getTellerV2MarketOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_acceptCommitment"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_acceptCommitmentFailsWithInsufficientCollateral"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_acceptCommitmentFailsWithInvalidAmount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_acceptCommitmentWithBorrowersArray_invalid"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_acceptCommitmentWithBorrowersArray_reset"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_acceptCommitmentWithBorrowersArray_valid"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_deleteCommitment"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_1000_USDC_loan_9_gwei_per_usdc_unit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_1_GWEI_loan__00059_WETH_per_USDC"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_1_WEI_loan__00059_WETH_per_USDC"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_1_WETH_loan__00059_per_USDC"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC_unit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_500_USDC_loan__500_per_ERC721"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_6_GWEI_loan__00059_WETH_per_USDC"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_700_USDC__500_per_WETH"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_700_USDC_loan__500_per_ERC1155"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_8888_USDC_loan__9_gwei_per_usdc_unit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRequiredCollateral_8888_USDC_loan__unit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_updateCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_commitmentId",
              "type": "uint256"
            },
            {
              "internalType": "struct LenderCommitmentForwarder.Commitment",
              "name": "_commitment",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxPrincipal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "expiration",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxDuration",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "minInterestRate",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "collateralTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralTokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPrincipalPerCollateralAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "enum LenderCommitmentForwarder.CommitmentCollateralType",
                  "name": "collateralTokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "marketId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "principalTokenAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCommitment"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_commitmentId",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_borrowerAddressList",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCommitmentBorrowers"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptCommitment(uint256,uint256,uint256,uint256,address,uint16,uint32)": {
            "details": "LoanDuration must be longer than the market payment cycle",
            "params": {
              "_collateralAmount": "The amount of collateral to use for the loan.",
              "_collateralTokenAddress": "The contract address to use for the loan collateral token.s",
              "_collateralTokenId": "The tokenId of collateral to use for the loan if ERC721 or ERC1155.",
              "_commitmentId": "The id of the commitment being accepted.",
              "_interestRate": "The interest rate APY to use for the loan in basis points.",
              "_loanDuration": "The overall duratiion for the loan.  Must be longer than market payment cycle duration.",
              "_principalAmount": "The amount of currency to borrow for the loan."
            },
            "returns": {
              "bidId": "The ID of the loan that was created on TellerV2"
            }
          },
          "createCommitment((uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address),address[])": {
            "params": {
              "_borrowerAddressList": "The array of borrowers that are allowed to accept loans using this commitment",
              "_commitment": "The new commitment data expressed as a struct"
            },
            "returns": {
              "commitmentId_": "returns the commitmentId for the created commitment"
            }
          },
          "deleteCommitment(uint256)": {
            "params": {
              "_commitmentId": "The id of the commitment to delete."
            }
          },
          "getCommitmentBorrowers(uint256)": {
            "params": {
              "_commitmentId": "The commitment id for the commitment to query."
            },
            "returns": {
              "borrowers_": "An array of addresses restricted to accept the commitment. Empty array means unrestricted."
            }
          },
          "getRequiredCollateral(uint256,uint256,uint8,address,address)": {
            "params": {
              "_collateralTokenAddress": "The contract address for the collateral for the loan.",
              "_collateralTokenType": "The type of collateral for the loan either ERC20, ERC721, ERC1155, or None.",
              "_maxPrincipalPerCollateralAmount": "The ratio for the amount of principal that can be borrowed for each amount of collateral. This is expanded additionally by the principal decimals.",
              "_principalAmount": "The amount of currency to borrow for the loan.",
              "_principalTokenAddress": "The contract address for the principal for the loan."
            }
          },
          "updateCommitment(uint256,(uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address))": {
            "params": {
              "_commitment": "The new commitment data expressed as a struct",
              "_commitmentId": "The Id of the commitment to update."
            }
          },
          "updateCommitmentBorrowers(uint256,address[])": {
            "params": {
              "_borrowerAddressList": "The array of borrowers that are allowed to accept loans using this commitment",
              "_commitmentId": "The Id of the commitment to update."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptCommitment(uint256,uint256,uint256,uint256,address,uint16,uint32)": {
            "notice": "Accept the commitment to submitBid and acceptBid using the funds"
          },
          "createCommitment((uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address),address[])": {
            "notice": "Creates a loan commitment from a lender for a market."
          },
          "deleteCommitment(uint256)": {
            "notice": "Removes the commitment of a lender to a market."
          },
          "getCommitmentBorrowers(uint256)": {
            "notice": "Return the array of borrowers that are allowlisted for a commitment"
          },
          "getRequiredCollateral(uint256,uint256,uint8,address,address)": {
            "notice": "Calculate the amount of collateral required to borrow a loan with _principalAmount of principal"
          },
          "test_getRequiredCollateral_1000_USDC_loan_9_gwei_per_usdc_unit()": {
            "notice": "collateral token = WETH (10**18)              principal token = USDC (10**6)                    principal = 1000 USDC $ max principal per collateral = 1.0 WETH"
          },
          "test_getRequiredCollateral_1_GWEI_loan__00059_WETH_per_USDC()": {
            "notice": "collateral token = USDC (10**6)              principal token = WETH (10**18)                    principal = 1 GWEI max principal per collateral = 0.00059 WETH per gwei"
          },
          "test_getRequiredCollateral_1_WEI_loan__00059_WETH_per_USDC()": {
            "notice": "collateral token = USDC (10**6)              principal token = WEI (10**0)                    principal = 1 WEI max principal per collateral = // 0.00059 WETH per usdc base unit"
          },
          "test_getRequiredCollateral_1_WETH_loan__00059_per_USDC()": {
            "notice": "collateral token = USDC (10**6)              principal token = WETH (10**18)                    principal = 1 WETH max principal per collateral = 0.00059 WETH"
          },
          "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC()": {
            "notice": "collateral token = USDC (10**6)              principal token = WETH (10**18)                    principal = 1 GWEI max principal per collateral = 1 wei per usdc $"
          },
          "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC_unit()": {
            "notice": "collateral token = USDC (10**6)              principal token = WETH (10**18)                    principal = 1 wei max principal per collateral = 1 wei per usdc $"
          },
          "test_getRequiredCollateral_500_USDC_loan__500_per_ERC721()": {
            "notice": "collateral token = NFT (10**0)              principal token = USDC (10**6)                    principal = 500 USDC max principal per collateral = 500 USDC"
          },
          "test_getRequiredCollateral_6_GWEI_loan__00059_WETH_per_USDC()": {
            "notice": "collateral token = USDC (10**6)              principal token = GWEI (10**9)                    principal = 6 GWEI max principal per collateral = 0.00059 USDC per gwei"
          },
          "test_getRequiredCollateral_700_USDC__500_per_WETH()": {
            "notice": "collateral token = WETH (10**18)              principal token = USDC (10**6)                    principal = 700 USDC max principal per collateral = 500 USDC"
          },
          "test_getRequiredCollateral_700_USDC_loan__500_per_ERC1155()": {
            "notice": "collateral token = NFT (10**0)              principal token = USDC (10**6)                    principal = 700 USDC max principal per collateral = 500 USDC"
          },
          "test_getRequiredCollateral_8888_USDC_loan__9_gwei_per_usdc_unit()": {
            "notice": "collateral token = WETH (10**18)              principal token = USDC (10**6)                    principal = 8888 USDC $ max principal per collateral = 1 gwei per USDDC base unit"
          },
          "test_getRequiredCollateral_8888_USDC_loan__unit()": {
            "notice": "collateral token = WETH (10**18)              principal token = USDC (10**8)                    principal = 8888 USDC max principal per collateral =  8888000000 wei per USDC base unit"
          },
          "updateCommitment(uint256,(uint256,uint32,uint32,uint16,address,uint256,uint256,uint8,address,uint256,address))": {
            "notice": "Updates the commitment of a lender to a market."
          },
          "updateCommitmentBorrowers(uint256,address[])": {
            "notice": "Updates the borrowers allowed to accept a commitment"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@mangrovedao/=node_modules/@mangrovedao/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "tests/LenderCommitmentForwarder_Test.sol": "LenderCommitmentForwarder_Test"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/EAS/TellerAS.sol": {
        "keccak256": "0x01848d2b9b7815144137d3ad654ac3246dd740f03e9e951ecf70374d71f8e354",
        "urls": [
          "bzz-raw://18ac37f315357b8ae3da92f2c5a71dfe3619bf8a2c0c4fc5f66e1f058ee0cdb7",
          "dweb:/ipfs/QmbsDurxc5zdYUtMTb4Hz3M629cLA21HnQGQYD1KRTk8Qs"
        ],
        "license": "MIT"
      },
      "contracts/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xca6e53699cb6e4001eff7527dc3fcea591be3b04514ab899933fc0f107de4933",
        "urls": [
          "bzz-raw://66297aa8ca1f16c511b761f5060333780478578bf866a7c8f90af2c44b4dfcdd",
          "dweb:/ipfs/QmcxadMsCeUAb2nkspETvEFGUDCWhvnaFpECogUtJKLvbB"
        ],
        "license": "MIT"
      },
      "contracts/LenderCommitmentForwarder.sol": {
        "keccak256": "0x91dee7ceddb2e0791bb8174f1f567536146d51d7f408d6350956b8cda091bfe7",
        "urls": [
          "bzz-raw://27a2189796b448dd4d516e62a7116e15da128ae518357f942324a89c290088cb",
          "dweb:/ipfs/QmVUhfLRiyGyYirntiRJ7MKV2bMv2NUUYsNfYvwsbiWZ9g"
        ],
        "license": "MIT"
      },
      "contracts/ProtocolFee.sol": {
        "keccak256": "0x8a4fbca87131233a11efc1c5006a9b9d5ea45b82078c85726ce9e07ef13e2893",
        "urls": [
          "bzz-raw://158488abd8c3e29e1d4f83173120a3d808a38f330067d94852df767ef00b4acf",
          "dweb:/ipfs/QmRc4iCqThiNT2uptvpHZPV5WCbgD5X86Ty1AfSyim2B2V"
        ],
        "license": "MIT"
      },
      "contracts/TellerV2.sol": {
        "keccak256": "0x3f25702f4a20dc051e4d02acf96f3fada90fa5b763e6f1ec4c89fe066cf7c336",
        "urls": [
          "bzz-raw://60d6634efd47aaf00a37afd1d88187d91cbbe601ffa587a27965dc2660d63739",
          "dweb:/ipfs/Qmah59JrjBzNsUXmwfUNo731HGtoLbtpTsRauBAxnfnFca"
        ],
        "license": "MIT"
      },
      "contracts/TellerV2Context.sol": {
        "keccak256": "0xac04758cc31571352e976d2b33e660d8161176fdf712c76049fb1eda2289f551",
        "urls": [
          "bzz-raw://bcfd63c27d26f98b2623eca2c14d817b870f648124d20370eda1e0a032ed9e43",
          "dweb:/ipfs/QmY6aCCsjpGHomnxtrVyLopTBDUzuFisgLiJ6zcy2x68Z9"
        ],
        "license": "MIT"
      },
      "contracts/TellerV2MarketForwarder.sol": {
        "keccak256": "0xa5820f997a7e78d2902d3d35eadcbff28a589b5545d023b07acd085f8fc089e8",
        "urls": [
          "bzz-raw://bcf5ddc31369884b57d05ddf29fc08bf7cf7e8e561f2ff522092a106ae7128f5",
          "dweb:/ipfs/Qmddxo3DwB8tNPXhCa2b6xYioe3QgEaMW53KKRmfptsEXH"
        ],
        "license": "MIT"
      },
      "contracts/TellerV2Storage.sol": {
        "keccak256": "0x600fd24b7211e1883081b4389fbc715365afe563a56808f904a83235e6efbe2b",
        "urls": [
          "bzz-raw://87f9f5779acc5cacde04a3bea2d560a526df9a183079dca5e7ce53158d7217f9",
          "dweb:/ipfs/QmfVwkUZTaZYryw49bDgehFWjCoXQAJBUYBkD66AVGBbfN"
        ],
        "license": "MIT"
      },
      "contracts/Types.sol": {
        "keccak256": "0x2e4bcf4a965f840193af8729251386c1826cd050411ba4a9e85984a2551fd2ff",
        "urls": [
          "bzz-raw://cbab8d73d76e1aa1eaead6a911d5a35f7edb18f9c67484c08bfaa96d4e3e1d68",
          "dweb:/ipfs/QmVxRujQoBdZEote43JdaAgXkYzfqFdBbiu7rPYU3rXf2N"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IASRegistry.sol": {
        "keccak256": "0x74752921f592df45c8717d7084627e823b1dbc93bad7187cd3023c9690df7e60",
        "urls": [
          "bzz-raw://14ed67b4973bd1b2797604cfd652387bbe230682f3f5a41e922879a0f4d5b668",
          "dweb:/ipfs/QmTJ5fvKX7deAQ8YpoPmwyVR379BdfbKSzaHSLoje7h5Tx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IASResolver.sol": {
        "keccak256": "0xfce671ea099d9f997a69c3447eb4a9c9693d37c5b97e43ada376e614e1c7cb61",
        "urls": [
          "bzz-raw://6673f2ba98aafbeb4bdbfbc2392b164a7ae4e82b8b8a5f5b9b484fbdf4653cc1",
          "dweb:/ipfs/QmVSkwZpHzgpTyzcydE8SptJiGRvK89KahhxBuwNZNm8d2"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICollateralManager.sol": {
        "keccak256": "0x549d37cb1390adad543f2e7b1ad46104c4326c4af7dbccda35116833103a6465",
        "urls": [
          "bzz-raw://ccadec56789cef8cd1c1467a25bf51f53cff652be7c04694643fad9af0cf4772",
          "dweb:/ipfs/QmRnx4QyayDXaYSzAMUh9TUG7WMvBBTjYD9yfJ34qRWknq"
        ],
        "license": null
      },
      "contracts/interfaces/IEAS.sol": {
        "keccak256": "0x5db90829269f806ed14a6c638f38d4aac1fa0f85829b34a2fcddd5200261c148",
        "urls": [
          "bzz-raw://7e82edf58a6332d6966f860d847329cb7d7b51f8c30942ba55e31bf26c39f8b5",
          "dweb:/ipfs/QmZYqmByHpugi3YD6ngTfD2ViW2GFYywfzq3BJjifADpWc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IEASEIP712Verifier.sol": {
        "keccak256": "0xeca3ac3bacec52af15b2c86c5bf1a1be315aade51fa86f95da2b426b28486b1e",
        "urls": [
          "bzz-raw://5e3d65dfbe36cc3718f5472061d283bf53ce920b929ed1a3cbab7c7129b7fe9d",
          "dweb:/ipfs/QmPDqoVWC95KkxoWeq4sreQYA2ELsMPhowi7eunU8c6qjW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILenderManager.sol": {
        "keccak256": "0xceb1ea2ef4c6e2ad7986db84de49c959e8d59844563d27daca5b8d78b732a8f7",
        "urls": [
          "bzz-raw://74c1997731854ff95ffcfe0a6fee9c12da3ccfc422650e9107830347317d950e",
          "dweb:/ipfs/Qmc9Y9Exop9ZNfX3QDRK6ev4nEVLDrdaCUMtNGm8fMUREd"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IMarketRegistry.sol": {
        "keccak256": "0x7209557aa8e3ddd81d0b863a8c063520a0011d96e1b3690a322f3371468f6dc6",
        "urls": [
          "bzz-raw://ba66c3c76306b24f4f5f31854d3fd92741eda12ee05f12ddc60c0031d545d502",
          "dweb:/ipfs/QmToDeLtPzo6hbxaoYg3zjwVnAox6CtDGhoSVecX6c45yC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReputationManager.sol": {
        "keccak256": "0x8d6e50fd460912231e53135b4459aa2f6f16007ae8deb32bc2cee1e88311a8d8",
        "urls": [
          "bzz-raw://03916311f51b553acf71bad455de12f056d367b5fe2ba5ad1caa74fabd3315d0",
          "dweb:/ipfs/QmXnPx58qKBv5mCuUWP2AemjKsQWzGY1nMemS5NoJQ35NK"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ITellerV2.sol": {
        "keccak256": "0x62c61e6811becc51d0d644e54c342279565e9d8ff5a386cde5a784440a404da7",
        "urls": [
          "bzz-raw://d886317b83a41a1e8a298c5befb11ca7a5fd3c59df54ecab0c8696b945b3e84a",
          "dweb:/ipfs/QmNikGpckv9PXpxQU1ewnAapD7URV2CAAozw8r8wtZvjwe"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ITellerV2Context.sol": {
        "keccak256": "0x281d1e303563559cbf252e07804d7a8b2a64dc3f49f1c36feefbfdb537a68ae0",
        "urls": [
          "bzz-raw://bb1dce2d581d35c020ddebb8bb41dd29bd902741d7a28b09807f4abd5dc3994f",
          "dweb:/ipfs/QmQ5af5fm9KLkg3TMGmMresHVbthHK8NX4PYsgks1yLkv2"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/escrow/ICollateralEscrowV1.sol": {
        "keccak256": "0xefb7928c982f328c8df17f736b2c542df12f6c5b326933076faaae970ae49fa8",
        "urls": [
          "bzz-raw://17fede8e6395ba154eff4e21bd16701d08d036b2287d74983f8d992019241ef5",
          "dweb:/ipfs/QmUBCQhUVsfp1zFoTg6dVyrGjU85uhM7F3FPD1vXbzC7ge"
        ],
        "license": null
      },
      "contracts/libraries/DateTimeLib.sol": {
        "keccak256": "0xf194df8ea9946a5bb3300223629b7e4959c1f20bacba27b3dc5f6dd2a160147a",
        "urls": [
          "bzz-raw://8860a1dadb201e8997ceda121019f685c4ee6a64e24ef06b008520b442b1f323",
          "dweb:/ipfs/QmYrnjEw3LSwDrdEoHHSVUtH7ww1CiVEnXwowFG8xMyZ7q"
        ],
        "license": "MIT"
      },
      "contracts/libraries/NumbersLib.sol": {
        "keccak256": "0x78009ffb3737ab7615a1e38a26635d6c06b65b7b7959af46d6ef840d220e70cf",
        "urls": [
          "bzz-raw://589ed65f671f403e82c6bc3d8818b972034fdd954e29f24e19520450221cc95e",
          "dweb:/ipfs/QmWiHoGhZqXZr7HEx5LqmEc4w3Xvg452RtVKiGLtmWYV4Q"
        ],
        "license": "MIT"
      },
      "contracts/libraries/V2Calculations.sol": {
        "keccak256": "0xcb9f3cb8f8800aa321690418467da8dc40ff115b7697374e5c4364e4c7b2d759",
        "urls": [
          "bzz-raw://4e86310f871949211747a3c40e02e421ea61d2365246d821b5a34fef7ffd5ece",
          "dweb:/ipfs/QmbGrHbZ1pnPbo1MjYvZaj7X4AuCKvFbWnyjj5nXYUu9y6"
        ],
        "license": "MIT"
      },
      "contracts/libraries/WadRayMath.sol": {
        "keccak256": "0x2781319be7a96f56966c601c061849fa94dbf9af5ad80a20c40b879a8d03f14a",
        "urls": [
          "bzz-raw://267426cb6b8ef332bc61bd66a2e82ad60710fefbac46c55d7c7e4104dd2297f1",
          "dweb:/ipfs/QmazyCfuGn2amqnPU5Az1eRARbnGZGav3t5veQAjjLH8gK"
        ],
        "license": "MIT"
      },
      "contracts/mock/MarketRegistryMock.sol": {
        "keccak256": "0x30aa1aaadb03541d4f7489c84415ce1424345a2da8e6b6b0a7801f4da3ffe11b",
        "urls": [
          "bzz-raw://a6aa1f9f0fff9ff010351396180b29d8586d30a7f5bb46f8fbdd4fae31545d05",
          "dweb:/ipfs/QmP4AuevFVc2wu8xpBfbC4KFCbDoLKeCZGgJuxAdCbAXcK"
        ],
        "license": "MIT"
      },
      "contracts/mock/WethMock.sol": {
        "keccak256": "0x93b7aeeb0f44d55287fb36e0c5e78a70e3e3e71c6be958471d0a21e4dd19421f",
        "urls": [
          "bzz-raw://e43a13640ccf0ccb80aabd3dfb6823a8c1730b28fedec3ca48d52b99e079dfd7",
          "dweb:/ipfs/QmabuUydTvsAGYQi6Ce6SGCJ7TK791tXynUCLKD7i4zQhA"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9",
        "urls": [
          "bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c",
          "dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f",
        "urls": [
          "bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4",
          "dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a",
        "urls": [
          "bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3",
          "dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229",
        "urls": [
          "bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195",
          "dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol": {
        "keccak256": "0x4807db844a856813048b5af81a764fdd25a0ae8876a3132593e8d21ddc6b607c",
        "urls": [
          "bzz-raw://3ca2fce75b1b20047a41f6f67d2d1be3d24308bf34668a22c2f971689e319a70",
          "dweb:/ipfs/QmQ8hxhdkDmwK9CBURbV2eaEeFTBYb3bB3ByWw1GmjvEWo"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "tests/LenderCommitmentForwarder_Test.sol": {
        "keccak256": "0xf6c2183c506c5acc6489f5c95eadeb9f801d0e62bea3ea18dd88100c878a4be1",
        "urls": [
          "bzz-raw://d04ace8f1728d5bf79bb7bec785120f5210579b03924d2a53f17876792c0d004",
          "dweb:/ipfs/QmSwspwJDT2zLhiBSjZH2Wop8VGzNfFbpZYKJdoxKiYbBS"
        ],
        "license": "MIT"
      },
      "tests/Test_Helpers.sol": {
        "keccak256": "0x7e8bc5fe5c924431555000612c4f5f986f2d9dbc351a96eab5a90eaef6dbf7d7",
        "urls": [
          "bzz-raw://a0c6d0e1ff733c8989a3e3e8c4e3eec40799e777c1b07a574f70f06a226dcabc",
          "dweb:/ipfs/QmVmvHAViWdK13EjdFkaFQbeiYputtgxnFu4ASeghXQSES"
        ],
        "license": "MIT"
      },
      "tests/Testable.sol": {
        "keccak256": "0x9de2783fbe8f7ce48d88cf052e4fb9774e6d44cac1de5cdb6f3889d7d2ce4474",
        "urls": [
          "bzz-raw://3c42c7a748363a7a34c08ebda6a70a3d3c59828bc87651c6238cccb9eefcfd68",
          "dweb:/ipfs/Qmc1LnQMXXJL9SCTnEPu63kRXjCTMg8D72UTAxVzMB2xfW"
        ],
        "license": "MIT"
      },
      "tests/resolvers/TestERC20Token.sol": {
        "keccak256": "0x7a516fc55e1a13f91d9e90a3a87cdcd1a9f5b72df83b9311c42e8266bb7d4c90",
        "urls": [
          "bzz-raw://a1c2c806152b3405cdceb88da95db1b2cf83e26435f159d5a754ace849d7499d",
          "dweb:/ipfs/QmRBwT1Rb4WtadVbn8SXYJ5VHQxsCmiYr9wjwvmV4BsVMz"
        ],
        "license": "MIT"
      },
      "tests/util/FoundryTest.sol": {
        "keccak256": "0xdb8ac66b6e0650cf9c6f10a8949bb53f24482af3bb18dfb97368fae12fdf45f9",
        "urls": [
          "bzz-raw://863071d99087fad831eb89fbfdf46b0591a75639a9c98047c521a691036a5493",
          "dweb:/ipfs/Qmc5oRMK1tQvvt5bfzJhGrLyjVXYZ2gp46rEeVnR6BHkGc"
        ],
        "license": "MIT"
      },
      "tests/util/StdChains.sol": {
        "keccak256": "0xfd91ae9acfb0104800a67ab316be4274572a25521e0a98a247eb158933ba953b",
        "urls": [
          "bzz-raw://961975fca13be85b2b76234f24a954391069c5ecab444977c506f3655c6d4a35",
          "dweb:/ipfs/QmRbkn8RouoP6TUTU85pru27vMVsvwKLqPM8vERNN64yTx"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "tests/LenderCommitmentForwarder_Test.sol",
    "id": 60155,
    "exportedSymbols": {
      "Address": [
        46354
      ],
      "AddressUpgradeable": [
        41826
      ],
      "Bid": [
        8588
      ],
      "BidState": [
        8560
      ],
      "Collateral": [
        10118
      ],
      "CollateralType": [
        10108
      ],
      "Context": [
        46532
      ],
      "ContextUpgradeable": [
        41868
      ],
      "EMPTY_UUID": [
        8713
      ],
      "ERC20": [
        45488
      ],
      "ERC2771ContextUpgradeable": [
        2134
      ],
      "EnumerableSet": [
        49935
      ],
      "IASRegistry": [
        9235
      ],
      "IASResolver": [
        9261
      ],
      "ICollateralManager": [
        9349
      ],
      "IEAS": [
        9601
      ],
      "IEASEIP712Verifier": [
        9649
      ],
      "IERC165Upgradeable": [
        42610
      ],
      "IERC20": [
        45566
      ],
      "IERC20Metadata": [
        45591
      ],
      "IERC20Upgradeable": [
        40069
      ],
      "IERC721Upgradeable": [
        41515
      ],
      "ILenderManager": [
        9663
      ],
      "IMarketRegistry": [
        9813
      ],
      "IReputationManager": [
        9872
      ],
      "ITellerV2": [
        10026
      ],
      "Initializable": [
        39742
      ],
      "LenderCommitmentForwarder": [
        2990
      ],
      "LenderCommitmentForwarderTest_TellerV2Mock": [
        60154
      ],
      "LenderCommitmentForwarder_Test": [
        59979
      ],
      "LenderCommitmentUser": [
        60094
      ],
      "LoanDetails": [
        8605
      ],
      "MarketRegistryMock": [
        12808
      ],
      "Payment": [
        8565
      ],
      "PaymentCycleType": [
        11911
      ],
      "PaymentType": [
        11908
      ],
      "RepMark": [
        9819
      ],
      "TellerAS": [
        2022
      ],
      "TellerV2Context": [
        8306
      ],
      "TellerV2MarketForwarder": [
        8541
      ],
      "TellerV2Storage": [
        8708
      ],
      "TellerV2Storage_G0": [
        8671
      ],
      "TellerV2Storage_G1": [
        8683
      ],
      "TellerV2Storage_G2": [
        8688
      ],
      "TellerV2Storage_G3": [
        8694
      ],
      "TellerV2Storage_G4": [
        8705
      ],
      "Terms": [
        8612
      ],
      "TestERC20Token": [
        64986
      ],
      "Testable": [
        63558
      ],
      "User": [
        63548
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:27560:98",
    "nodes": [
      {
        "id": 58415,
        "nodeType": "PragmaDirective",
        "src": "32:23:98",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 58416,
        "nodeType": "ImportDirective",
        "src": "58:51:98",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 46355,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58417,
        "nodeType": "ImportDirective",
        "src": "110:55:98",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 45489,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58418,
        "nodeType": "ImportDirective",
        "src": "166:50:98",
        "nodes": [],
        "absolutePath": "contracts/TellerV2MarketForwarder.sol",
        "file": "../contracts/TellerV2MarketForwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 8542,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58419,
        "nodeType": "ImportDirective",
        "src": "222:40:98",
        "nodes": [],
        "absolutePath": "tests/resolvers/TestERC20Token.sol",
        "file": "./resolvers/TestERC20Token.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 64987,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58420,
        "nodeType": "ImportDirective",
        "src": "264:42:98",
        "nodes": [],
        "absolutePath": "contracts/TellerV2Context.sol",
        "file": "../contracts/TellerV2Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 8307,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58422,
        "nodeType": "ImportDirective",
        "src": "309:42:98",
        "nodes": [],
        "absolutePath": "tests/Testable.sol",
        "file": "./Testable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 63559,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58421,
              "name": "Testable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63558,
              "src": "318:8:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58424,
        "nodeType": "ImportDirective",
        "src": "352:87:98",
        "nodes": [],
        "absolutePath": "contracts/LenderCommitmentForwarder.sol",
        "file": "../contracts/LenderCommitmentForwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 2991,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58423,
              "name": "LenderCommitmentForwarder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2990,
              "src": "361:25:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58427,
        "nodeType": "ImportDirective",
        "src": "441:100:98",
        "nodes": [],
        "absolutePath": "contracts/interfaces/escrow/ICollateralEscrowV1.sol",
        "file": "../contracts/interfaces/escrow/ICollateralEscrowV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 10161,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58425,
              "name": "Collateral",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10118,
              "src": "450:10:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 58426,
              "name": "CollateralType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10108,
              "src": "462:14:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58429,
        "nodeType": "ImportDirective",
        "src": "543:42:98",
        "nodes": [],
        "absolutePath": "tests/Test_Helpers.sol",
        "file": "./Test_Helpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 63549,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58428,
              "name": "User",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63548,
              "src": "552:4:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58430,
        "nodeType": "ImportDirective",
        "src": "587:50:98",
        "nodes": [],
        "absolutePath": "contracts/mock/MarketRegistryMock.sol",
        "file": "../contracts/mock/MarketRegistryMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60155,
        "sourceUnit": 12809,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59979,
        "nodeType": "ContractDefinition",
        "src": "640:24435:98",
        "nodes": [
          {
            "id": 58437,
            "nodeType": "VariableDeclaration",
            "src": "725:63:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tellerV2Mock",
            "nameLocation": "776:12:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
              "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
            },
            "typeName": {
              "id": 58436,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58435,
                "name": "LenderCommitmentForwarderTest_TellerV2Mock",
                "nameLocations": [
                  "725:42:98"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60154,
                "src": "725:42:98"
              },
              "referencedDeclaration": 60154,
              "src": "725:42:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
              }
            },
            "visibility": "private"
          },
          {
            "id": 58440,
            "nodeType": "VariableDeclaration",
            "src": "794:37:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockMarketRegistry",
            "nameLocation": "813:18:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
              "typeString": "contract MarketRegistryMock"
            },
            "typeName": {
              "id": 58439,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58438,
                "name": "MarketRegistryMock",
                "nameLocations": [
                  "794:18:98"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12808,
                "src": "794:18:98"
              },
              "referencedDeclaration": 12808,
              "src": "794:18:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                "typeString": "contract MarketRegistryMock"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58443,
            "nodeType": "VariableDeclaration",
            "src": "838:40:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "marketOwner",
            "nameLocation": "867:11:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
              "typeString": "contract LenderCommitmentUser"
            },
            "typeName": {
              "id": 58442,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58441,
                "name": "LenderCommitmentUser",
                "nameLocations": [
                  "838:20:98"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60094,
                "src": "838:20:98"
              },
              "referencedDeclaration": 60094,
              "src": "838:20:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                "typeString": "contract LenderCommitmentUser"
              }
            },
            "visibility": "private"
          },
          {
            "id": 58446,
            "nodeType": "VariableDeclaration",
            "src": "884:35:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "lender",
            "nameLocation": "913:6:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
              "typeString": "contract LenderCommitmentUser"
            },
            "typeName": {
              "id": 58445,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58444,
                "name": "LenderCommitmentUser",
                "nameLocations": [
                  "884:20:98"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60094,
                "src": "884:20:98"
              },
              "referencedDeclaration": 60094,
              "src": "884:20:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                "typeString": "contract LenderCommitmentUser"
              }
            },
            "visibility": "private"
          },
          {
            "id": 58449,
            "nodeType": "VariableDeclaration",
            "src": "925:37:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "borrower",
            "nameLocation": "954:8:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
              "typeString": "contract LenderCommitmentUser"
            },
            "typeName": {
              "id": 58448,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58447,
                "name": "LenderCommitmentUser",
                "nameLocations": [
                  "925:20:98"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60094,
                "src": "925:20:98"
              },
              "referencedDeclaration": 60094,
              "src": "925:20:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                "typeString": "contract LenderCommitmentUser"
              }
            },
            "visibility": "private"
          },
          {
            "id": 58451,
            "nodeType": "VariableDeclaration",
            "src": "999:16:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "marketId",
            "nameLocation": "1007:8:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58450,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "999:7:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58453,
            "nodeType": "VariableDeclaration",
            "src": "1021:17:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "maxAmount",
            "nameLocation": "1029:9:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58452,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1021:7:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58456,
            "nodeType": "VariableDeclaration",
            "src": "1045:20:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "emptyArray",
            "nameLocation": "1055:10:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 58454,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1045:7:98",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 58455,
              "nodeType": "ArrayTypeName",
              "src": "1045:9:98",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58459,
            "nodeType": "VariableDeclaration",
            "src": "1071:24:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "borrowersArray",
            "nameLocation": "1081:14:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 58457,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1071:7:98",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 58458,
              "nodeType": "ArrayTypeName",
              "src": "1071:9:98",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58461,
            "nodeType": "VariableDeclaration",
            "src": "1102:22:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "maxLoanDuration",
            "nameLocation": "1109:15:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 58460,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1102:6:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58463,
            "nodeType": "VariableDeclaration",
            "src": "1130:22:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minInterestRate",
            "nameLocation": "1137:15:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 58462,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1130:6:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58465,
            "nodeType": "VariableDeclaration",
            "src": "1158:17:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "expiration",
            "nameLocation": "1165:10:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 58464,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1158:6:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58467,
            "nodeType": "VariableDeclaration",
            "src": "1182:23:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "acceptBidWasCalled",
            "nameLocation": "1187:18:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 58466,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1182:4:98",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58469,
            "nodeType": "VariableDeclaration",
            "src": "1211:23:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "submitBidWasCalled",
            "nameLocation": "1216:18:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 58468,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1211:4:98",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58471,
            "nodeType": "VariableDeclaration",
            "src": "1240:37:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "submitBidWithCollateralWasCalled",
            "nameLocation": "1245:32:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 58470,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1240:4:98",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58474,
            "nodeType": "VariableDeclaration",
            "src": "1284:29:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "principalToken",
            "nameLocation": "1299:14:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
              "typeString": "contract TestERC20Token"
            },
            "typeName": {
              "id": 58473,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58472,
                "name": "TestERC20Token",
                "nameLocations": [
                  "1284:14:98"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64986,
                "src": "1284:14:98"
              },
              "referencedDeclaration": 64986,
              "src": "1284:14:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                "typeString": "contract TestERC20Token"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58477,
            "nodeType": "VariableDeclaration",
            "src": "1319:42:98",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "principalTokenDecimals",
            "nameLocation": "1334:22:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 58475,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1319:5:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 58476,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1359:2:98",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "internal"
          },
          {
            "id": 58480,
            "nodeType": "VariableDeclaration",
            "src": "1368:30:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "collateralToken",
            "nameLocation": "1383:15:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
              "typeString": "contract TestERC20Token"
            },
            "typeName": {
              "id": 58479,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58478,
                "name": "TestERC20Token",
                "nameLocations": [
                  "1368:14:98"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64986,
                "src": "1368:14:98"
              },
              "referencedDeclaration": 64986,
              "src": "1368:14:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                "typeString": "contract TestERC20Token"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58483,
            "nodeType": "VariableDeclaration",
            "src": "1404:42:98",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "collateralTokenDecimals",
            "nameLocation": "1419:23:98",
            "scope": 59979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 58481,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1404:5:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "36",
              "id": 58482,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1445:1:98",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6_by_1",
                "typeString": "int_const 6"
              },
              "value": "6"
            },
            "visibility": "internal"
          },
          {
            "id": 58507,
            "nodeType": "FunctionDefinition",
            "src": "1453:212:98",
            "nodes": [],
            "body": {
              "id": 58506,
              "nodeType": "Block",
              "src": "1663:2:98",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 58490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1522:46:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154_$",
                            "typeString": "function () returns (contract LenderCommitmentForwarderTest_TellerV2Mock)"
                          },
                          "typeName": {
                            "id": 58489,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 58488,
                              "name": "LenderCommitmentForwarderTest_TellerV2Mock",
                              "nameLocations": [
                                "1526:42:98"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 60154,
                              "src": "1526:42:98"
                            },
                            "referencedDeclaration": 60154,
                            "src": "1526:42:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                              "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                            }
                          }
                        },
                        "id": 58491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1522:48:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                          "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                          "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                        }
                      ],
                      "id": 58487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1514:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 58486,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1514:7:98",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 58492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:57:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 58500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1644:1:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 58499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1636:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 58498,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1636:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 58501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1636:10:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1613:22:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MarketRegistryMock_$12808_$",
                            "typeString": "function (address) returns (contract MarketRegistryMock)"
                          },
                          "typeName": {
                            "id": 58496,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 58495,
                              "name": "MarketRegistryMock",
                              "nameLocations": [
                                "1617:18:98"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 12808,
                              "src": "1617:18:98"
                            },
                            "referencedDeclaration": 12808,
                            "src": "1617:18:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                              "typeString": "contract MarketRegistryMock"
                            }
                          }
                        },
                        "id": 58502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1613:34:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                          "typeString": "contract MarketRegistryMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                          "typeString": "contract MarketRegistryMock"
                        }
                      ],
                      "id": 58494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1605:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 58493,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1605:7:98",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 58503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1605:43:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 58504,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 58485,
                  "name": "LenderCommitmentForwarder",
                  "nameLocations": [
                    "1475:25:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2990,
                  "src": "1475:25:98"
                },
                "nodeType": "ModifierInvocation",
                "src": "1475:183:98"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 58484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1464:2:98"
            },
            "returnParameters": {
              "id": 58505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1663:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58685,
            "nodeType": "FunctionDefinition",
            "src": "1672:1542:98",
            "nodes": [],
            "body": {
              "id": 58684,
              "nodeType": "Block",
              "src": "1696:1518:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 58518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58510,
                      "name": "tellerV2Mock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58437,
                      "src": "1708:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                        "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 58514,
                                "name": "getTellerV2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8365,
                                "src": "1787:11:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 58515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1787:13:98",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 58513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1779:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58512,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1779:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 58516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1779:22:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58511,
                        "name": "LenderCommitmentForwarderTest_TellerV2Mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60154,
                        "src": "1723:42:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154_$",
                          "typeString": "type(contract LenderCommitmentForwarderTest_TellerV2Mock)"
                        }
                      },
                      "id": 58517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1723:88:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                        "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                      }
                    },
                    "src": "1708:103:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                      "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                    }
                  },
                  "id": 58519,
                  "nodeType": "ExpressionStatement",
                  "src": "1708:103:98"
                },
                {
                  "expression": {
                    "id": 58528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58520,
                      "name": "mockMarketRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58440,
                      "src": "1821:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                        "typeString": "contract MarketRegistryMock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 58524,
                                "name": "getMarketRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8373,
                                "src": "1869:17:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 58525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1869:19:98",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 58523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1861:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58522,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1861:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 58526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1861:28:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58521,
                        "name": "MarketRegistryMock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12808,
                        "src": "1842:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MarketRegistryMock_$12808_$",
                          "typeString": "type(contract MarketRegistryMock)"
                        }
                      },
                      "id": 58527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1842:48:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                        "typeString": "contract MarketRegistryMock"
                      }
                    },
                    "src": "1821:69:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                      "typeString": "contract MarketRegistryMock"
                    }
                  },
                  "id": 58529,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:69:98"
                },
                {
                  "expression": {
                    "id": 58541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58530,
                      "name": "marketOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58443,
                      "src": "1901:11:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                        "typeString": "contract LenderCommitmentUser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 58536,
                              "name": "tellerV2Mock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58437,
                              "src": "1948:12:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                                "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                                "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                              }
                            ],
                            "id": 58535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1940:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58534,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1940:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 58537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1940:21:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 58538,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1964:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                                "typeString": "contract LenderCommitmentForwarder_Test"
                              }
                            }
                          ],
                          "id": 58539,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1963:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                            "typeString": "contract LenderCommitmentForwarder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                            "typeString": "contract LenderCommitmentForwarder_Test"
                          }
                        ],
                        "id": 58533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1915:24:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_LenderCommitmentForwarder_$2990_$returns$_t_contract$_LenderCommitmentUser_$60094_$",
                          "typeString": "function (address,contract LenderCommitmentForwarder) returns (contract LenderCommitmentUser)"
                        },
                        "typeName": {
                          "id": 58532,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 58531,
                            "name": "LenderCommitmentUser",
                            "nameLocations": [
                              "1919:20:98"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 60094,
                            "src": "1919:20:98"
                          },
                          "referencedDeclaration": 60094,
                          "src": "1919:20:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                            "typeString": "contract LenderCommitmentUser"
                          }
                        }
                      },
                      "id": 58540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1915:55:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                        "typeString": "contract LenderCommitmentUser"
                      }
                    },
                    "src": "1901:69:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                      "typeString": "contract LenderCommitmentUser"
                    }
                  },
                  "id": 58542,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:69:98"
                },
                {
                  "expression": {
                    "id": 58554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58543,
                      "name": "borrower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58449,
                      "src": "1980:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                        "typeString": "contract LenderCommitmentUser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 58549,
                              "name": "tellerV2Mock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58437,
                              "src": "2024:12:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                                "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                                "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                              }
                            ],
                            "id": 58548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2016:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58547,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2016:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 58550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2016:21:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 58551,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2040:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                                "typeString": "contract LenderCommitmentForwarder_Test"
                              }
                            }
                          ],
                          "id": 58552,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2039:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                            "typeString": "contract LenderCommitmentForwarder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                            "typeString": "contract LenderCommitmentForwarder_Test"
                          }
                        ],
                        "id": 58546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1991:24:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_LenderCommitmentForwarder_$2990_$returns$_t_contract$_LenderCommitmentUser_$60094_$",
                          "typeString": "function (address,contract LenderCommitmentForwarder) returns (contract LenderCommitmentUser)"
                        },
                        "typeName": {
                          "id": 58545,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 58544,
                            "name": "LenderCommitmentUser",
                            "nameLocations": [
                              "1995:20:98"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 60094,
                            "src": "1995:20:98"
                          },
                          "referencedDeclaration": 60094,
                          "src": "1995:20:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                            "typeString": "contract LenderCommitmentUser"
                          }
                        }
                      },
                      "id": 58553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1991:55:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                        "typeString": "contract LenderCommitmentUser"
                      }
                    },
                    "src": "1980:66:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                      "typeString": "contract LenderCommitmentUser"
                    }
                  },
                  "id": 58555,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:66:98"
                },
                {
                  "expression": {
                    "id": 58567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58556,
                      "name": "lender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58446,
                      "src": "2056:6:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                        "typeString": "contract LenderCommitmentUser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 58562,
                              "name": "tellerV2Mock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58437,
                              "src": "2098:12:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                                "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                                "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                              }
                            ],
                            "id": 58561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2090:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58560,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2090:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 58563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2090:21:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 58564,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2114:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                                "typeString": "contract LenderCommitmentForwarder_Test"
                              }
                            }
                          ],
                          "id": 58565,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2113:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                            "typeString": "contract LenderCommitmentForwarder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                            "typeString": "contract LenderCommitmentForwarder_Test"
                          }
                        ],
                        "id": 58559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2065:24:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_LenderCommitmentForwarder_$2990_$returns$_t_contract$_LenderCommitmentUser_$60094_$",
                          "typeString": "function (address,contract LenderCommitmentForwarder) returns (contract LenderCommitmentUser)"
                        },
                        "typeName": {
                          "id": 58558,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 58557,
                            "name": "LenderCommitmentUser",
                            "nameLocations": [
                              "2069:20:98"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 60094,
                            "src": "2069:20:98"
                          },
                          "referencedDeclaration": 60094,
                          "src": "2069:20:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                            "typeString": "contract LenderCommitmentUser"
                          }
                        }
                      },
                      "id": 58566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2065:55:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                        "typeString": "contract LenderCommitmentUser"
                      }
                    },
                    "src": "2056:64:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                      "typeString": "contract LenderCommitmentUser"
                    }
                  },
                  "id": 58568,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:64:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58572,
                        "name": "marketOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58443,
                        "src": "2160:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      ],
                      "expression": {
                        "id": 58569,
                        "name": "tellerV2Mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58437,
                        "src": "2130:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentForwarderTest_TellerV2Mock_$60154",
                          "typeString": "contract LenderCommitmentForwarderTest_TellerV2Mock"
                        }
                      },
                      "id": 58571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2143:16:98",
                      "memberName": "__setMarketOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60129,
                      "src": "2130:29:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_User_$63548_$returns$__$",
                        "typeString": "function (contract User) external"
                      }
                    },
                    "id": 58573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2130:42:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58574,
                  "nodeType": "ExpressionStatement",
                  "src": "2130:42:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58580,
                            "name": "marketOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58443,
                            "src": "2225:11:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                              "typeString": "contract LenderCommitmentUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                              "typeString": "contract LenderCommitmentUser"
                            }
                          ],
                          "id": 58579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2217:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2217:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2217:20:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58575,
                        "name": "mockMarketRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58440,
                        "src": "2183:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                          "typeString": "contract MarketRegistryMock"
                        }
                      },
                      "id": 58577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2202:14:98",
                      "memberName": "setMarketOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12748,
                      "src": "2183:33:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 58582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2183:55:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58583,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:55:98"
                },
                {
                  "expression": {
                    "id": 58586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58584,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58451,
                      "src": "2327:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 58585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2338:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "2327:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58587,
                  "nodeType": "ExpressionStatement",
                  "src": "2327:12:98"
                },
                {
                  "expression": {
                    "id": 58590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58588,
                      "name": "maxAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58453,
                      "src": "2349:9:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030303030303030303030303030303030303030",
                      "id": 58589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2361:21:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100000000000000000000"
                    },
                    "src": "2349:33:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58591,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:33:98"
                },
                {
                  "expression": {
                    "id": 58594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58592,
                      "name": "maxLoanDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58461,
                      "src": "2392:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32343830303030",
                      "id": 58593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2410:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2480000_by_1",
                        "typeString": "int_const 2480000"
                      },
                      "value": "2480000"
                    },
                    "src": "2392:25:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 58595,
                  "nodeType": "ExpressionStatement",
                  "src": "2392:25:98"
                },
                {
                  "expression": {
                    "id": 58598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58596,
                      "name": "minInterestRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58463,
                      "src": "2427:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33303030",
                      "id": 58597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2445:4:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3000_by_1",
                        "typeString": "int_const 3000"
                      },
                      "value": "3000"
                    },
                    "src": "2427:22:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 58599,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:22:98"
                },
                {
                  "expression": {
                    "id": 58611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58600,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58465,
                      "src": "2459:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 58610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 58603,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2479:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 58604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2485:9:98",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2479:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 58602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2472:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 58601,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2472:6:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2472:23:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "3634303030",
                            "id": 58608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2505:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64000_by_1",
                              "typeString": "int_const 64000"
                            },
                            "value": "64000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_64000_by_1",
                              "typeString": "int_const 64000"
                            }
                          ],
                          "id": 58607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2498:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 58606,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2498:6:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2498:13:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "2472:39:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2459:52:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 58612,
                  "nodeType": "ExpressionStatement",
                  "src": "2459:52:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58616,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58451,
                        "src": "2560:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 58619,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2578:4:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                              "typeString": "contract LenderCommitmentForwarder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                              "typeString": "contract LenderCommitmentForwarder_Test"
                            }
                          ],
                          "id": 58618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2570:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58617,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2570:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2570:13:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58613,
                        "name": "marketOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58443,
                        "src": "2522:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 58615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2534:25:98",
                      "memberName": "setTrustedMarketForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63527,
                      "src": "2522:37:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 58621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2522:62:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58622,
                  "nodeType": "ExpressionStatement",
                  "src": "2522:62:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58626,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58451,
                        "src": "2624:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 58629,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2642:4:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                              "typeString": "contract LenderCommitmentForwarder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LenderCommitmentForwarder_Test_$59979",
                              "typeString": "contract LenderCommitmentForwarder_Test"
                            }
                          ],
                          "id": 58628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2634:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58627,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2634:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2634:13:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58623,
                        "name": "lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58446,
                        "src": "2594:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 58625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2601:22:98",
                      "memberName": "approveMarketForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63543,
                      "src": "2594:29:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 58631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2594:54:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58632,
                  "nodeType": "ExpressionStatement",
                  "src": "2594:54:98"
                },
                {
                  "expression": {
                    "id": 58639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58633,
                      "name": "borrowersArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58459,
                      "src": "2659:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 58637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2690:1:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 58636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2676:13:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 58634,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2680:7:98",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 58635,
                          "nodeType": "ArrayTypeName",
                          "src": "2680:9:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 58638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2676:16:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2659:33:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 58640,
                  "nodeType": "ExpressionStatement",
                  "src": "2659:33:98"
                },
                {
                  "expression": {
                    "id": 58648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 58641,
                        "name": "borrowersArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58459,
                        "src": "2702:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 58643,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 58642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2717:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2702:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58646,
                          "name": "borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58449,
                          "src": "2730:8:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                            "typeString": "contract LenderCommitmentUser"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                            "typeString": "contract LenderCommitmentUser"
                          }
                        ],
                        "id": 58645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2722:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 58644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2722:7:98",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 58647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2722:17:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2702:37:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 58649,
                  "nodeType": "ExpressionStatement",
                  "src": "2702:37:98"
                },
                {
                  "expression": {
                    "id": 58659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58650,
                      "name": "principalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58474,
                      "src": "2750:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54657374205772617070656420455448",
                          "id": 58654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2799:18:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4eed15b323253607e76c74626006cd349abc6ef43961aafeff285df92be84ccb",
                            "typeString": "literal_string \"Test Wrapped ETH\""
                          },
                          "value": "Test Wrapped ETH"
                        },
                        {
                          "hexValue": "5457455448",
                          "id": 58655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2831:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                            "typeString": "literal_string \"TWETH\""
                          },
                          "value": "TWETH"
                        },
                        {
                          "hexValue": "30",
                          "id": 58656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2852:1:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 58657,
                          "name": "principalTokenDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58477,
                          "src": "2867:22:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_4eed15b323253607e76c74626006cd349abc6ef43961aafeff285df92be84ccb",
                            "typeString": "literal_string \"Test Wrapped ETH\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                            "typeString": "literal_string \"TWETH\""
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 58653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2767:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                          "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                        },
                        "typeName": {
                          "id": 58652,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 58651,
                            "name": "TestERC20Token",
                            "nameLocations": [
                              "2771:14:98"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 64986,
                            "src": "2771:14:98"
                          },
                          "referencedDeclaration": 64986,
                          "src": "2771:14:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                            "typeString": "contract TestERC20Token"
                          }
                        }
                      },
                      "id": 58658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2767:132:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      }
                    },
                    "src": "2750:149:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "id": 58660,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:149:98"
                },
                {
                  "expression": {
                    "id": 58670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58661,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58480,
                      "src": "2910:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546573742055534443",
                          "id": 58665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2960:11:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                            "typeString": "literal_string \"Test USDC\""
                          },
                          "value": "Test USDC"
                        },
                        {
                          "hexValue": "5455534443",
                          "id": 58666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2985:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                            "typeString": "literal_string \"TUSDC\""
                          },
                          "value": "TUSDC"
                        },
                        {
                          "hexValue": "30",
                          "id": 58667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3006:1:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 58668,
                          "name": "collateralTokenDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58483,
                          "src": "3021:23:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                            "typeString": "literal_string \"Test USDC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                            "typeString": "literal_string \"TUSDC\""
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 58664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2928:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                          "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                        },
                        "typeName": {
                          "id": 58663,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 58662,
                            "name": "TestERC20Token",
                            "nameLocations": [
                              "2932:14:98"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 64986,
                            "src": "2932:14:98"
                          },
                          "referencedDeclaration": 64986,
                          "src": "2932:14:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                            "typeString": "contract TestERC20Token"
                          }
                        }
                      },
                      "id": 58669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2928:126:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      }
                    },
                    "src": "2910:144:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "id": 58671,
                  "nodeType": "ExpressionStatement",
                  "src": "2910:144:98"
                },
                {
                  "expression": {
                    "id": 58673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3065:25:98",
                    "subExpression": {
                      "id": 58672,
                      "name": "acceptBidWasCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58467,
                      "src": "3072:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58674,
                  "nodeType": "ExpressionStatement",
                  "src": "3065:25:98"
                },
                {
                  "expression": {
                    "id": 58676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3100:25:98",
                    "subExpression": {
                      "id": 58675,
                      "name": "submitBidWasCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58469,
                      "src": "3107:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58677,
                  "nodeType": "ExpressionStatement",
                  "src": "3100:25:98"
                },
                {
                  "expression": {
                    "id": 58679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3135:39:98",
                    "subExpression": {
                      "id": 58678,
                      "name": "submitBidWithCollateralWasCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58471,
                      "src": "3142:32:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58680,
                  "nodeType": "ExpressionStatement",
                  "src": "3135:39:98"
                },
                {
                  "expression": {
                    "id": 58682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3185:22:98",
                    "subExpression": {
                      "id": 58681,
                      "name": "commitmentCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2189,
                      "src": "3192:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58683,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:22:98"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1681:5:98",
            "parameters": {
              "id": 58508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1686:2:98"
            },
            "returnParameters": {
              "id": 58509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58812,
            "nodeType": "FunctionDefinition",
            "src": "3220:1332:98",
            "nodes": [],
            "body": {
              "id": 58811,
              "nodeType": "Block",
              "src": "3397:1155:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 58700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58696,
                      "name": "commitment_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58694,
                      "src": "3407:11:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 58697,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2187,
                        "src": "3421:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Commitment_$2182_storage_$",
                          "typeString": "mapping(uint256 => struct LenderCommitmentForwarder.Commitment storage ref)"
                        }
                      },
                      "id": 58699,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 58698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3433:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3421:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage",
                        "typeString": "struct LenderCommitmentForwarder.Commitment storage ref"
                      }
                    },
                    "src": "3407:28:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "id": 58701,
                  "nodeType": "ExpressionStatement",
                  "src": "3407:28:98"
                },
                {
                  "expression": {
                    "id": 58706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 58702,
                        "name": "commitment_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58694,
                        "src": "3445:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      "id": 58704,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3457:8:98",
                      "memberName": "marketId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2179,
                      "src": "3445:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58705,
                      "name": "marketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58451,
                      "src": "3468:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3445:31:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58707,
                  "nodeType": "ExpressionStatement",
                  "src": "3445:31:98"
                },
                {
                  "expression": {
                    "id": 58715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 58708,
                        "name": "commitment_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58694,
                        "src": "3486:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      "id": 58710,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3498:21:98",
                      "memberName": "principalTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2181,
                      "src": "3486:33:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58713,
                          "name": "principalToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58474,
                          "src": "3530:14:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                            "typeString": "contract TestERC20Token"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                            "typeString": "contract TestERC20Token"
                          }
                        ],
                        "id": 58712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3522:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 58711,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3522:7:98",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 58714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3522:23:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3486:59:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 58716,
                  "nodeType": "ExpressionStatement",
                  "src": "3486:59:98"
                },
                {
                  "expression": {
                    "id": 58721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 58717,
                        "name": "commitment_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58694,
                        "src": "3555:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      "id": 58719,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3567:12:98",
                      "memberName": "maxPrincipal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2160,
                      "src": "3555:24:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58720,
                      "name": "maxAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58453,
                      "src": "3582:9:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3555:36:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58722,
                  "nodeType": "ExpressionStatement",
                  "src": "3555:36:98"
                },
                {
                  "expression": {
                    "id": 58727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 58723,
                        "name": "commitment_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58694,
                        "src": "3601:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      "id": 58725,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3613:11:98",
                      "memberName": "maxDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2164,
                      "src": "3601:23:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58726,
                      "name": "maxLoanDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58461,
                      "src": "3627:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3601:41:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 58728,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:41:98"
                },
                {
                  "expression": {
                    "id": 58733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 58729,
                        "name": "commitment_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58694,
                        "src": "3652:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      "id": 58731,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3664:15:98",
                      "memberName": "minInterestRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2166,
                      "src": "3652:27:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58732,
                      "name": "minInterestRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58463,
                      "src": "3682:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "3652:45:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 58734,
                  "nodeType": "ExpressionStatement",
                  "src": "3652:45:98"
                },
                {
                  "expression": {
                    "id": 58739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 58735,
                        "name": "commitment_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58694,
                        "src": "3707:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      "id": 58737,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3719:10:98",
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2162,
                      "src": "3707:22:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58738,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58465,
                      "src": "3732:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3707:35:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 58740,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:35:98"
                },
                {
                  "expression": {
                    "id": 58748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 58741,
                        "name": "commitment_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58694,
                        "src": "3752:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      "id": 58743,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3764:6:98",
                      "memberName": "lender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2177,
                      "src": "3752:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58746,
                          "name": "lender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58446,
                          "src": "3781:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                            "typeString": "contract LenderCommitmentUser"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                            "typeString": "contract LenderCommitmentUser"
                          }
                        ],
                        "id": 58745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3773:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 58744,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3773:7:98",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 58747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3773:15:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3752:36:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 58749,
                  "nodeType": "ExpressionStatement",
                  "src": "3752:36:98"
                },
                {
                  "expression": {
                    "id": 58754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 58750,
                        "name": "commitment_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58694,
                        "src": "3799:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      "id": 58752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3811:19:98",
                      "memberName": "collateralTokenType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2175,
                      "src": "3799:31:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                        "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58753,
                      "name": "_collateralType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58688,
                      "src": "3833:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                        "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                      }
                    },
                    "src": "3799:49:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                      "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                    }
                  },
                  "id": 58755,
                  "nodeType": "ExpressionStatement",
                  "src": "3799:49:98"
                },
                {
                  "expression": {
                    "id": 58764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 58756,
                        "name": "commitment_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58694,
                        "src": "3858:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      "id": 58758,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3870:31:98",
                      "memberName": "maxPrincipalPerCollateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2172,
                      "src": "3858:43:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 58763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 58759,
                        "name": "_maxPrincipalPerCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58690,
                        "src": "3916:26:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 58760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3957:2:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "id": 58761,
                          "name": "principalTokenDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58477,
                          "src": "3961:22:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3957:26:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3916:67:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3858:125:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58765,
                  "nodeType": "ExpressionStatement",
                  "src": "3858:125:98"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                      "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                    },
                    "id": 58769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 58766,
                      "name": "_collateralType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58688,
                      "src": "3998:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                        "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 58767,
                        "name": "CommitmentCollateralType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2158,
                        "src": "4017:24:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                          "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                        }
                      },
                      "id": 58768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4042:5:98",
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2153,
                      "src": "4017:30:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                        "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                      }
                    },
                    "src": "3998:49:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                        "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                      },
                      "id": 58783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 58780,
                        "name": "_collateralType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58688,
                        "src": "4145:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 58781,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "4164:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 58782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4189:6:98",
                        "memberName": "ERC721",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2154,
                        "src": "4164:31:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      "src": "4145:50:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        "id": 58797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58794,
                          "name": "_collateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58688,
                          "src": "4350:15:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                            "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 58795,
                            "name": "CommitmentCollateralType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2158,
                            "src": "4369:24:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                              "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                            }
                          },
                          "id": 58796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4394:7:98",
                          "memberName": "ERC1155",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2155,
                          "src": "4369:32:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                            "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                          }
                        },
                        "src": "4350:51:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 58808,
                      "nodeType": "IfStatement",
                      "src": "4346:200:98",
                      "trueBody": {
                        "id": 58807,
                        "nodeType": "Block",
                        "src": "4403:143:98",
                        "statements": [
                          {
                            "expression": {
                              "id": 58805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 58798,
                                  "name": "commitment_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58694,
                                  "src": "4417:11:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                                    "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                                  }
                                },
                                "id": 58800,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "4429:22:98",
                                "memberName": "collateralTokenAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2168,
                                "src": "4417:34:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "hexValue": "307832373931426361316632646534363631454438384133304339394137613934343941613834313734",
                                    "id": 58803,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4479:42:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "value": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 58802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4454:7:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 58801,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4454:7:98",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 58804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4454:81:98",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4417:118:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 58806,
                            "nodeType": "ExpressionStatement",
                            "src": "4417:118:98"
                          }
                        ]
                      }
                    },
                    "id": 58809,
                    "nodeType": "IfStatement",
                    "src": "4141:405:98",
                    "trueBody": {
                      "id": 58793,
                      "nodeType": "Block",
                      "src": "4197:143:98",
                      "statements": [
                        {
                          "expression": {
                            "id": 58791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 58784,
                                "name": "commitment_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58694,
                                "src": "4211:11:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                                  "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                                }
                              },
                              "id": 58786,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "4223:22:98",
                              "memberName": "collateralTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2168,
                              "src": "4211:34:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "307832373931426361316632646534363631454438384133304339394137613934343941613834313734",
                                  "id": 58789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4273:42:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "value": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 58788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4248:7:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 58787,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4248:7:98",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 58790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4248:81:98",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4211:118:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 58792,
                          "nodeType": "ExpressionStatement",
                          "src": "4211:118:98"
                        }
                      ]
                    }
                  },
                  "id": 58810,
                  "nodeType": "IfStatement",
                  "src": "3994:552:98",
                  "trueBody": {
                    "id": 58779,
                    "nodeType": "Block",
                    "src": "4049:86:98",
                    "statements": [
                      {
                        "expression": {
                          "id": 58777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 58770,
                              "name": "commitment_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58694,
                              "src": "4063:11:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                                "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                              }
                            },
                            "id": 58772,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4075:22:98",
                            "memberName": "collateralTokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2168,
                            "src": "4063:34:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 58775,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58480,
                                "src": "4108:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 58774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4100:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 58773,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4100:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 58776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4100:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4063:61:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 58778,
                        "nodeType": "ExpressionStatement",
                        "src": "4063:61:98"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createCommitment",
            "nameLocation": "3229:17:98",
            "parameters": {
              "id": 58691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58688,
                  "mutability": "mutable",
                  "name": "_collateralType",
                  "nameLocation": "3281:15:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 58812,
                  "src": "3256:40:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                    "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                  },
                  "typeName": {
                    "id": 58687,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58686,
                      "name": "CommitmentCollateralType",
                      "nameLocations": [
                        "3256:24:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2158,
                      "src": "3256:24:98"
                    },
                    "referencedDeclaration": 2158,
                    "src": "3256:24:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                      "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58690,
                  "mutability": "mutable",
                  "name": "_maxPrincipalPerCollateral",
                  "nameLocation": "3314:26:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 58812,
                  "src": "3306:34:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3246:100:98"
            },
            "returnParameters": {
              "id": 58695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58694,
                  "mutability": "mutable",
                  "name": "commitment_",
                  "nameLocation": "3384:11:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 58812,
                  "src": "3365:30:98",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                    "typeString": "struct LenderCommitmentForwarder.Commitment"
                  },
                  "typeName": {
                    "id": 58693,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58692,
                      "name": "Commitment",
                      "nameLocations": [
                        "3365:10:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2182,
                      "src": "3365:10:98"
                    },
                    "referencedDeclaration": 2182,
                    "src": "3365:10:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3364:32:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 58838,
            "nodeType": "FunctionDefinition",
            "src": "4558:297:98",
            "nodes": [],
            "body": {
              "id": 58837,
              "nodeType": "Block",
              "src": "4598:257:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58816,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "4616:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 58837,
                      "src": "4608:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58815,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4608:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58818,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 58817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4631:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4608:24:98"
                },
                {
                  "assignments": [
                    58821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58821,
                      "mutability": "mutable",
                      "name": "existingCommitment",
                      "nameLocation": "4662:18:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 58837,
                      "src": "4643:37:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 58820,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58819,
                          "name": "Commitment",
                          "nameLocations": [
                            "4643:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "4643:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "4643:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58829,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 58823,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "4714:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 58824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4739:5:98",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2153,
                        "src": "4714:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        },
                        "id": 58827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030306536",
                          "id": 58825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4758:6:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          },
                          "value": "1000e6"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 58826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4767:4:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "4758:13:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      ],
                      "id": 58822,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "4683:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 58828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4683:98:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4643:138:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58833,
                        "name": "existingCommitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58821,
                        "src": "4817:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      },
                      {
                        "id": 58834,
                        "name": "emptyArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58456,
                        "src": "4837:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 58830,
                        "name": "lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58446,
                        "src": "4792:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 58832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4799:17:98",
                      "memberName": "_createCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60018,
                      "src": "4792:24:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Commitment_$2182_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct LenderCommitmentForwarder.Commitment memory,address[] memory) external returns (uint256)"
                      }
                    },
                    "id": 58835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4792:56:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58836,
                  "nodeType": "ExpressionStatement",
                  "src": "4792:56:98"
                }
              ]
            },
            "functionSelector": "1a287b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCommitment_test",
            "nameLocation": "4567:21:98",
            "parameters": {
              "id": 58813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4588:2:98"
            },
            "returnParameters": {
              "id": 58814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4598:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58872,
            "nodeType": "FunctionDefinition",
            "src": "4861:440:98",
            "nodes": [],
            "body": {
              "id": 58871,
              "nodeType": "Block",
              "src": "4901:400:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58842,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "4919:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 58871,
                      "src": "4911:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58841,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4911:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58844,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 58843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4934:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4911:24:98"
                },
                {
                  "assignments": [
                    58847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58847,
                      "mutability": "mutable",
                      "name": "existingCommitment",
                      "nameLocation": "4965:18:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 58871,
                      "src": "4946:37:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 58846,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58845,
                          "name": "Commitment",
                          "nameLocations": [
                            "4946:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "4946:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "4946:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58853,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 58849,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "5017:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 58850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5042:5:98",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2153,
                        "src": "5017:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "hexValue": "313030306536",
                        "id": 58851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5061:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 58848,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "4986:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 58852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4986:91:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4946:131:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58857,
                            "name": "lender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58446,
                            "src": "5118:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                              "typeString": "contract LenderCommitmentUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                              "typeString": "contract LenderCommitmentUser"
                            }
                          ],
                          "id": 58856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5110:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5110:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5110:15:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 58859,
                          "name": "existingCommitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58847,
                          "src": "5139:18:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                            "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                          }
                        },
                        "id": 58860,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5158:6:98",
                        "memberName": "lender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2177,
                        "src": "5139:25:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4e6f7420746865206f776e6572206f66206372656174656420636f6d6d69746d656e74",
                        "id": 58861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5178:37:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7a1d69a45732cd1c081a5dd012a2e6a405c7a1ca0227fc56aa58456026e2bb6",
                          "typeString": "literal_string \"Not the owner of created commitment\""
                        },
                        "value": "Not the owner of created commitment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7a1d69a45732cd1c081a5dd012a2e6a405c7a1ca0227fc56aa58456026e2bb6",
                          "typeString": "literal_string \"Not the owner of created commitment\""
                        }
                      ],
                      "id": 58854,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 13876,
                      "src": "5088:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 58862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5088:137:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58863,
                  "nodeType": "ExpressionStatement",
                  "src": "5088:137:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58867,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58842,
                        "src": "5261:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 58868,
                        "name": "existingCommitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58847,
                        "src": "5275:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                        }
                      ],
                      "expression": {
                        "id": 58864,
                        "name": "lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58446,
                        "src": "5236:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 58866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5243:17:98",
                      "memberName": "_updateCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60034,
                      "src": "5236:24:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Commitment_$2182_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct LenderCommitmentForwarder.Commitment memory) external"
                      }
                    },
                    "id": 58869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5236:58:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58870,
                  "nodeType": "ExpressionStatement",
                  "src": "5236:58:98"
                }
              ]
            },
            "functionSelector": "626722f4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateCommitment",
            "nameLocation": "4870:21:98",
            "parameters": {
              "id": 58839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4891:2:98"
            },
            "returnParameters": {
              "id": 58840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4901:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58915,
            "nodeType": "FunctionDefinition",
            "src": "5307:533:98",
            "nodes": [],
            "body": {
              "id": 58914,
              "nodeType": "Block",
              "src": "5347:493:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58876,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "5365:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 58914,
                      "src": "5357:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58875,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5357:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58878,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 58877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5380:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5357:24:98"
                },
                {
                  "assignments": [
                    58881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58881,
                      "mutability": "mutable",
                      "name": "commitment",
                      "nameLocation": "5410:10:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 58914,
                      "src": "5391:29:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 58880,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58879,
                          "name": "Commitment",
                          "nameLocations": [
                            "5391:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "5391:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "5391:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58887,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 58883,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "5454:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 58884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5479:5:98",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2153,
                        "src": "5454:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "hexValue": "313030306536",
                        "id": 58885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5498:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 58882,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "5423:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 58886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5423:91:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5391:123:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 58889,
                          "name": "commitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58881,
                          "src": "5547:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                            "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                          }
                        },
                        "id": 58890,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5558:6:98",
                        "memberName": "lender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2177,
                        "src": "5547:17:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 58893,
                            "name": "lender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58446,
                            "src": "5586:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                              "typeString": "contract LenderCommitmentUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                              "typeString": "contract LenderCommitmentUser"
                            }
                          ],
                          "id": 58892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5578:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5578:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5578:15:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4e6f7420746865206f776e6572206f66206372656174656420636f6d6d69746d656e74",
                        "id": 58895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5607:37:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7a1d69a45732cd1c081a5dd012a2e6a405c7a1ca0227fc56aa58456026e2bb6",
                          "typeString": "literal_string \"Not the owner of created commitment\""
                        },
                        "value": "Not the owner of created commitment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7a1d69a45732cd1c081a5dd012a2e6a405c7a1ca0227fc56aa58456026e2bb6",
                          "typeString": "literal_string \"Not the owner of created commitment\""
                        }
                      ],
                      "id": 58888,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 13876,
                      "src": "5525:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 58896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5525:129:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58897,
                  "nodeType": "ExpressionStatement",
                  "src": "5525:129:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58901,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58876,
                        "src": "5690:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 58898,
                        "name": "lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58446,
                        "src": "5665:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 58900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5672:17:98",
                      "memberName": "_deleteCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60093,
                      "src": "5665:24:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 58902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5665:38:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58903,
                  "nodeType": "ExpressionStatement",
                  "src": "5665:38:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 58905,
                          "name": "commitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58881,
                          "src": "5736:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                            "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                          }
                        },
                        "id": 58906,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5747:6:98",
                        "memberName": "lender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2177,
                        "src": "5736:17:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 58909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5775:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 58908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5767:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58907,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5767:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5767:10:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "54686520636f6d6d69746d656e7420776173206e6f742064656c65746564",
                        "id": 58911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5791:32:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26b6d863faf71e7c248a82b9a228de087e6d11a4eb1b89bfa119f2923efa36f6",
                          "typeString": "literal_string \"The commitment was not deleted\""
                        },
                        "value": "The commitment was not deleted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26b6d863faf71e7c248a82b9a228de087e6d11a4eb1b89bfa119f2923efa36f6",
                          "typeString": "literal_string \"The commitment was not deleted\""
                        }
                      ],
                      "id": 58904,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 13876,
                      "src": "5714:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 58912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5714:119:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58913,
                  "nodeType": "ExpressionStatement",
                  "src": "5714:119:98"
                }
              ]
            },
            "functionSelector": "f8739315",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_deleteCommitment",
            "nameLocation": "5316:21:98",
            "parameters": {
              "id": 58873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5337:2:98"
            },
            "returnParameters": {
              "id": 58874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5347:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59027,
            "nodeType": "FunctionDefinition",
            "src": "5846:1881:98",
            "nodes": [],
            "body": {
              "id": 59026,
              "nodeType": "Block",
              "src": "5886:1841:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58919,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "5904:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59026,
                      "src": "5896:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58918,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5896:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58921,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 58920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5919:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5896:24:98"
                },
                {
                  "assignments": [
                    58924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58924,
                      "mutability": "mutable",
                      "name": "commitment",
                      "nameLocation": "5950:10:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59026,
                      "src": "5931:29:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 58923,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58922,
                          "name": "Commitment",
                          "nameLocations": [
                            "5931:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "5931:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "5931:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58930,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 58926,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "5994:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 58927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6019:5:98",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2153,
                        "src": "5994:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "id": 58928,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58453,
                        "src": "6038:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58925,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "5963:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 58929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5963:94:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5931:126:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58932,
                        "name": "acceptBidWasCalled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58467,
                        "src": "6090:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 58933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6122:5:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4578706563742061636365707420626964206e6f742063616c6c6564206265666f7265206578657263697365",
                        "id": 58934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6141:46:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b287e7ed4b948a29cb907ebe675a5ce15f806d77f24d779092660f9c238ef7cb",
                          "typeString": "literal_string \"Expect accept bid not called before exercise\""
                        },
                        "value": "Expect accept bid not called before exercise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b287e7ed4b948a29cb907ebe675a5ce15f806d77f24d779092660f9c238ef7cb",
                          "typeString": "literal_string \"Expect accept bid not called before exercise\""
                        }
                      ],
                      "id": 58931,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "6068:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 58935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6068:129:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58936,
                  "nodeType": "ExpressionStatement",
                  "src": "6068:129:98"
                },
                {
                  "assignments": [
                    58938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58938,
                      "mutability": "mutable",
                      "name": "bidId",
                      "nameLocation": "6216:5:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59026,
                      "src": "6208:13:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58937,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6208:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58954,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 58941,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58919,
                        "src": "6264:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58942,
                          "name": "maxAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58453,
                          "src": "6290:9:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 58943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6302:3:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "6290:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 58945,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58453,
                        "src": "6331:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 58946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6373:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 58949,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58480,
                            "src": "6416:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          ],
                          "id": 58948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6408:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58947,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6408:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6408:24:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 58951,
                        "name": "minInterestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58463,
                        "src": "6446:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 58952,
                        "name": "maxLoanDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58461,
                        "src": "6475:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 58939,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58449,
                        "src": "6224:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 58940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6233:17:98",
                      "memberName": "_acceptCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60081,
                      "src": "6224:26:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                      }
                    },
                    "id": 58953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6224:276:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6208:292:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58956,
                        "name": "acceptBidWasCalled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58467,
                        "src": "6533:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 58957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6565:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "45787065637420616363657074206269642063616c6c6564206166746572206578657263697365",
                        "id": 58958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6583:41:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_159437278d6fdff08abca8f37d1be4479b50d9dc2872456fce4b0aed10ac2ca3",
                          "typeString": "literal_string \"Expect accept bid called after exercise\""
                        },
                        "value": "Expect accept bid called after exercise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_159437278d6fdff08abca8f37d1be4479b50d9dc2872456fce4b0aed10ac2ca3",
                          "typeString": "literal_string \"Expect accept bid called after exercise\""
                        }
                      ],
                      "id": 58955,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "6511:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 58959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6511:123:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58960,
                  "nodeType": "ExpressionStatement",
                  "src": "6511:123:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 58962,
                            "name": "commitment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58924,
                            "src": "6667:10:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                              "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                            }
                          },
                          "id": 58963,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6678:12:98",
                          "memberName": "maxPrincipal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2160,
                          "src": "6667:23:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 58964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6694:3:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "6667:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 58966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6711:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "436f6d6d69746d656e74206d6178207072696e636970616c20776173206e6f742064656372656d656e746564",
                        "id": 58967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6729:46:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7561b95e0f7e57c71aa80f0efaf64153d7462848b77bd1c3eb5defb67086eba",
                          "typeString": "literal_string \"Commitment max principal was not decremented\""
                        },
                        "value": "Commitment max principal was not decremented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7561b95e0f7e57c71aa80f0efaf64153d7462848b77bd1c3eb5defb67086eba",
                          "typeString": "literal_string \"Commitment max principal was not decremented\""
                        }
                      ],
                      "id": 58961,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "6645:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 58968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6645:140:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58969,
                  "nodeType": "ExpressionStatement",
                  "src": "6645:140:98"
                },
                {
                  "expression": {
                    "id": 58984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58970,
                      "name": "bidId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58938,
                      "src": "6796:5:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58973,
                          "name": "commitmentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58919,
                          "src": "6844:12:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "313030",
                          "id": 58974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6870:3:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "hexValue": "313030",
                          "id": 58975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6905:3:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "hexValue": "30",
                          "id": 58976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6941:1:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "id": 58979,
                              "name": "collateralToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58480,
                              "src": "6984:15:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                "typeString": "contract TestERC20Token"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                "typeString": "contract TestERC20Token"
                              }
                            ],
                            "id": 58978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6976:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58977,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6976:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 58980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6976:24:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 58981,
                          "name": "minInterestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58463,
                          "src": "7014:15:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 58982,
                          "name": "maxLoanDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58461,
                          "src": "7043:15:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "id": 58971,
                          "name": "borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58449,
                          "src": "6804:8:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                            "typeString": "contract LenderCommitmentUser"
                          }
                        },
                        "id": 58972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6813:17:98",
                        "memberName": "_acceptCommitment",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60081,
                        "src": "6804:26:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                        }
                      },
                      "id": 58983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6804:264:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6796:272:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58985,
                  "nodeType": "ExpressionStatement",
                  "src": "6796:272:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 58987,
                            "name": "commitment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58924,
                            "src": "7088:10:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                              "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                            }
                          },
                          "id": 58988,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7099:12:98",
                          "memberName": "maxPrincipal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2160,
                          "src": "7088:23:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 58989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7115:1:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7088:28:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 58991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7118:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "636f6d6d69746d656e74206e6f74206163636570746564",
                        "id": 58992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7124:25:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07b46111133be93fb8aa05e78c332ec9a9e21dc52219d07725535bd874aa60d4",
                          "typeString": "literal_string \"commitment not accepted\""
                        },
                        "value": "commitment not accepted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07b46111133be93fb8aa05e78c332ec9a9e21dc52219d07725535bd874aa60d4",
                          "typeString": "literal_string \"commitment not accepted\""
                        }
                      ],
                      "id": 58986,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "7079:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 58993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7079:71:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58994,
                  "nodeType": "ExpressionStatement",
                  "src": "7079:71:98"
                },
                {
                  "assignments": [
                    58996
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58996,
                      "mutability": "mutable",
                      "name": "acceptCommitTwiceFails",
                      "nameLocation": "7166:22:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59026,
                      "src": "7161:27:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 58995,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7161:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58997,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7161:27:98"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 59011,
                        "nodeType": "Block",
                        "src": "7520:2:98",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 59012,
                      "nodeType": "TryCatchClause",
                      "src": "7520:2:98"
                    },
                    {
                      "block": {
                        "id": 59017,
                        "nodeType": "Block",
                        "src": "7529:54:98",
                        "statements": [
                          {
                            "expression": {
                              "id": 59015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 59013,
                                "name": "acceptCommitTwiceFails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58996,
                                "src": "7543:22:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 59014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7568:4:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "7543:29:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 59016,
                            "nodeType": "ExpressionStatement",
                            "src": "7543:29:98"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 59018,
                      "nodeType": "TryCatchClause",
                      "src": "7523:60:98"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 59000,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58919,
                        "src": "7259:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 59001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7289:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "313030",
                        "id": 59002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7328:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "30",
                        "id": 59003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7368:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59006,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58480,
                            "src": "7415:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          ],
                          "id": 59005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7407:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59004,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7407:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7407:24:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59008,
                        "name": "minInterestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58463,
                        "src": "7449:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 59009,
                        "name": "maxLoanDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58461,
                        "src": "7482:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 58998,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58449,
                        "src": "7215:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 58999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7224:17:98",
                      "memberName": "_acceptCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60081,
                      "src": "7215:26:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                      }
                    },
                    "id": 59010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7215:296:98",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59019,
                  "nodeType": "TryStatement",
                  "src": "7199:384:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59021,
                        "name": "acceptCommitTwiceFails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58996,
                        "src": "7615:22:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7651:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "53686f756c64206661696c207768656e20616363657074696e6720636f6d6d6974207477696365",
                        "id": 59023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7669:41:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27540c45d715a47905eb1c57883e382190698adf298ee2d6067a3f1fe8982e04",
                          "typeString": "literal_string \"Should fail when accepting commit twice\""
                        },
                        "value": "Should fail when accepting commit twice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27540c45d715a47905eb1c57883e382190698adf298ee2d6067a3f1fe8982e04",
                          "typeString": "literal_string \"Should fail when accepting commit twice\""
                        }
                      ],
                      "id": 59020,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "7593:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7593:127:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59025,
                  "nodeType": "ExpressionStatement",
                  "src": "7593:127:98"
                }
              ]
            },
            "functionSelector": "0bc62bf3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_acceptCommitment",
            "nameLocation": "5855:21:98",
            "parameters": {
              "id": 58916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5876:2:98"
            },
            "returnParameters": {
              "id": 58917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5886:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59073,
            "nodeType": "FunctionDefinition",
            "src": "7733:739:98",
            "nodes": [],
            "body": {
              "id": 59072,
              "nodeType": "Block",
              "src": "7797:675:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59031
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59031,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "7815:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59072,
                      "src": "7807:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59030,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7807:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59033,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 59032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7830:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7807:24:98"
                },
                {
                  "assignments": [
                    59036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59036,
                      "mutability": "mutable",
                      "name": "commitment",
                      "nameLocation": "7861:10:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59072,
                      "src": "7842:29:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 59035,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59034,
                          "name": "Commitment",
                          "nameLocations": [
                            "7842:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "7842:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "7842:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59042,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59038,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "7905:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 59039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7930:5:98",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2153,
                        "src": "7905:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "id": 59040,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58453,
                        "src": "7949:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59037,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "7874:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 59041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7874:94:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7842:126:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59046,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59031,
                        "src": "8013:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59047,
                        "name": "borrowersArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58459,
                        "src": "8027:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 59043,
                        "name": "lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58446,
                        "src": "7979:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7986:26:98",
                      "memberName": "_updateCommitmentBorrowers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60050,
                      "src": "7979:33:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address[] memory) external"
                      }
                    },
                    "id": 59048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7979:63:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59049,
                  "nodeType": "ExpressionStatement",
                  "src": "7979:63:98"
                },
                {
                  "assignments": [
                    59051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59051,
                      "mutability": "mutable",
                      "name": "bidId",
                      "nameLocation": "8061:5:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59072,
                      "src": "8053:13:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59050,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8053:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59065,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59054,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59031,
                        "src": "8109:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 59055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8135:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 59056,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58453,
                        "src": "8162:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 59057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8204:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59060,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58480,
                            "src": "8247:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          ],
                          "id": 59059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8239:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59058,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8239:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8239:24:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59062,
                        "name": "minInterestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58463,
                        "src": "8277:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 59063,
                        "name": "maxLoanDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58461,
                        "src": "8306:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 59052,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58449,
                        "src": "8069:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8078:17:98",
                      "memberName": "_acceptCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60081,
                      "src": "8069:26:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                      }
                    },
                    "id": 59064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8069:262:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8053:278:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59067,
                        "name": "acceptBidWasCalled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58467,
                        "src": "8364:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8396:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "45787065637420616363657074206269642063616c6c6564206166746572206578657263697365",
                        "id": 59069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8414:41:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_159437278d6fdff08abca8f37d1be4479b50d9dc2872456fce4b0aed10ac2ca3",
                          "typeString": "literal_string \"Expect accept bid called after exercise\""
                        },
                        "value": "Expect accept bid called after exercise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_159437278d6fdff08abca8f37d1be4479b50d9dc2872456fce4b0aed10ac2ca3",
                          "typeString": "literal_string \"Expect accept bid called after exercise\""
                        }
                      ],
                      "id": 59066,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "8342:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8342:123:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59071,
                  "nodeType": "ExpressionStatement",
                  "src": "8342:123:98"
                }
              ]
            },
            "functionSelector": "aa95bcbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_acceptCommitmentWithBorrowersArray_valid",
            "nameLocation": "7742:45:98",
            "parameters": {
              "id": 59028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7787:2:98"
            },
            "returnParameters": {
              "id": 59029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7797:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59160,
            "nodeType": "FunctionDefinition",
            "src": "8478:1439:98",
            "nodes": [],
            "body": {
              "id": 59159,
              "nodeType": "Block",
              "src": "8544:1373:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59077,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "8562:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59159,
                      "src": "8554:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59076,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8554:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59079,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 59078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8577:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8554:24:98"
                },
                {
                  "assignments": [
                    59082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59082,
                      "mutability": "mutable",
                      "name": "commitment",
                      "nameLocation": "8608:10:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59159,
                      "src": "8589:29:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 59081,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59080,
                          "name": "Commitment",
                          "nameLocations": [
                            "8589:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "8589:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "8589:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59088,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59084,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "8652:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 59085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "8677:5:98",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2153,
                        "src": "8652:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "id": 59086,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58453,
                        "src": "8696:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59083,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "8621:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 59087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8621:94:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8589:126:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59092,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59077,
                        "src": "8760:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59093,
                        "name": "borrowersArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58459,
                        "src": "8774:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 59089,
                        "name": "lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58446,
                        "src": "8726:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8733:26:98",
                      "memberName": "_updateCommitmentBorrowers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60050,
                      "src": "8726:33:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address[] memory) external"
                      }
                    },
                    "id": 59094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8726:63:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59095,
                  "nodeType": "ExpressionStatement",
                  "src": "8726:63:98"
                },
                {
                  "assignments": [
                    59097
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59097,
                      "mutability": "mutable",
                      "name": "acceptCommitAsMarketOwnerFails",
                      "nameLocation": "8805:30:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59159,
                      "src": "8800:35:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 59096,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8800:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59098,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8800:35:98"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 59112,
                        "nodeType": "Block",
                        "src": "9170:2:98",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 59113,
                      "nodeType": "TryCatchClause",
                      "src": "9170:2:98"
                    },
                    {
                      "block": {
                        "id": 59118,
                        "nodeType": "Block",
                        "src": "9179:62:98",
                        "statements": [
                          {
                            "expression": {
                              "id": 59116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 59114,
                                "name": "acceptCommitAsMarketOwnerFails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59097,
                                "src": "9193:30:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 59115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9226:4:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "9193:37:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 59117,
                            "nodeType": "ExpressionStatement",
                            "src": "9193:37:98"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 59119,
                      "nodeType": "TryCatchClause",
                      "src": "9173:68:98"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 59101,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59077,
                        "src": "8909:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 59102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8939:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 59103,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58453,
                        "src": "8972:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 59104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9018:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59107,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58480,
                            "src": "9065:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          ],
                          "id": 59106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9057:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59105,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9057:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9057:24:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59109,
                        "name": "minInterestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58463,
                        "src": "9099:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 59110,
                        "name": "maxLoanDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58461,
                        "src": "9132:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 59099,
                        "name": "marketOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58443,
                        "src": "8862:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8874:17:98",
                      "memberName": "_acceptCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60081,
                      "src": "8862:29:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                      }
                    },
                    "id": 59111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8862:299:98",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59120,
                  "nodeType": "TryStatement",
                  "src": "8846:395:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59122,
                        "name": "acceptCommitAsMarketOwnerFails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59097,
                        "src": "9273:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9317:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "53686f756c64206661696c207768656e20616363657074696e6720617320696e76616c696420626f72726f776572",
                        "id": 59124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9335:48:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba9363ebbe5ed45d172fd17b42534ac16fc818b5d0fdc470330f7ec4f86d8d09",
                          "typeString": "literal_string \"Should fail when accepting as invalid borrower\""
                        },
                        "value": "Should fail when accepting as invalid borrower"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba9363ebbe5ed45d172fd17b42534ac16fc818b5d0fdc470330f7ec4f86d8d09",
                          "typeString": "literal_string \"Should fail when accepting as invalid borrower\""
                        }
                      ],
                      "id": 59121,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "9251:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9251:142:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59126,
                  "nodeType": "ExpressionStatement",
                  "src": "9251:142:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59130,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59077,
                        "src": "9438:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59131,
                        "name": "emptyArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58456,
                        "src": "9452:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 59127,
                        "name": "lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58446,
                        "src": "9404:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9411:26:98",
                      "memberName": "_updateCommitmentBorrowers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60050,
                      "src": "9404:33:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address[] memory) external"
                      }
                    },
                    "id": 59132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9404:59:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59133,
                  "nodeType": "ExpressionStatement",
                  "src": "9404:59:98"
                },
                {
                  "expression": {
                    "id": 59136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59134,
                      "name": "acceptBidWasCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58467,
                      "src": "9474:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 59135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9495:5:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9474:26:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59137,
                  "nodeType": "ExpressionStatement",
                  "src": "9474:26:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59141,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59077,
                        "src": "9554:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 59142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9580:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 59143,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58453,
                        "src": "9607:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 59144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9649:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59147,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58480,
                            "src": "9692:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          ],
                          "id": 59146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9684:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9684:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9684:24:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59149,
                        "name": "minInterestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58463,
                        "src": "9722:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 59150,
                        "name": "maxLoanDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58461,
                        "src": "9751:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 59138,
                        "name": "marketOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58443,
                        "src": "9511:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9523:17:98",
                      "memberName": "_acceptCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60081,
                      "src": "9511:29:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                      }
                    },
                    "id": 59151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9511:265:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59152,
                  "nodeType": "ExpressionStatement",
                  "src": "9511:265:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59154,
                        "name": "acceptBidWasCalled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58467,
                        "src": "9809:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9841:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "45787065637420616363657074206269642063616c6c6564206166746572206578657263697365",
                        "id": 59156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9859:41:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_159437278d6fdff08abca8f37d1be4479b50d9dc2872456fce4b0aed10ac2ca3",
                          "typeString": "literal_string \"Expect accept bid called after exercise\""
                        },
                        "value": "Expect accept bid called after exercise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_159437278d6fdff08abca8f37d1be4479b50d9dc2872456fce4b0aed10ac2ca3",
                          "typeString": "literal_string \"Expect accept bid called after exercise\""
                        }
                      ],
                      "id": 59153,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "9787:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9787:123:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59158,
                  "nodeType": "ExpressionStatement",
                  "src": "9787:123:98"
                }
              ]
            },
            "functionSelector": "1723c247",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_acceptCommitmentWithBorrowersArray_invalid",
            "nameLocation": "8487:47:98",
            "parameters": {
              "id": 59074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8534:2:98"
            },
            "returnParameters": {
              "id": 59075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8544:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59212,
            "nodeType": "FunctionDefinition",
            "src": "9923:796:98",
            "nodes": [],
            "body": {
              "id": 59211,
              "nodeType": "Block",
              "src": "9987:732:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59164,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "10005:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59211,
                      "src": "9997:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9997:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59166,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 59165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10020:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9997:24:98"
                },
                {
                  "assignments": [
                    59169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59169,
                      "mutability": "mutable",
                      "name": "commitment",
                      "nameLocation": "10051:10:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59211,
                      "src": "10032:29:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 59168,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59167,
                          "name": "Commitment",
                          "nameLocations": [
                            "10032:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "10032:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "10032:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59175,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59171,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "10095:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 59172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "10120:5:98",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2153,
                        "src": "10095:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "id": 59173,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58453,
                        "src": "10139:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59170,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "10064:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 59174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10064:94:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10032:126:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59179,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59164,
                        "src": "10203:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59180,
                        "name": "borrowersArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58459,
                        "src": "10217:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 59176,
                        "name": "lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58446,
                        "src": "10169:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10176:26:98",
                      "memberName": "_updateCommitmentBorrowers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60050,
                      "src": "10169:33:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address[] memory) external"
                      }
                    },
                    "id": 59181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10169:63:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59182,
                  "nodeType": "ExpressionStatement",
                  "src": "10169:63:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59186,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59164,
                        "src": "10277:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59187,
                        "name": "emptyArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58456,
                        "src": "10291:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 59183,
                        "name": "lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58446,
                        "src": "10243:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10250:26:98",
                      "memberName": "_updateCommitmentBorrowers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60050,
                      "src": "10243:33:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address[] memory) external"
                      }
                    },
                    "id": 59188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10243:59:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59189,
                  "nodeType": "ExpressionStatement",
                  "src": "10243:59:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59193,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59164,
                        "src": "10356:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 59194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10382:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 59195,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58453,
                        "src": "10409:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 59196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10451:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59199,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58480,
                            "src": "10494:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          ],
                          "id": 59198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10486:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59197,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10486:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10486:24:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59201,
                        "name": "minInterestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58463,
                        "src": "10524:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 59202,
                        "name": "maxLoanDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58461,
                        "src": "10553:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 59190,
                        "name": "marketOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58443,
                        "src": "10313:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10325:17:98",
                      "memberName": "_acceptCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60081,
                      "src": "10313:29:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                      }
                    },
                    "id": 59203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10313:265:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59204,
                  "nodeType": "ExpressionStatement",
                  "src": "10313:265:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59206,
                        "name": "acceptBidWasCalled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58467,
                        "src": "10611:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10643:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "45787065637420616363657074206269642063616c6c6564206166746572206578657263697365",
                        "id": 59208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10661:41:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_159437278d6fdff08abca8f37d1be4479b50d9dc2872456fce4b0aed10ac2ca3",
                          "typeString": "literal_string \"Expect accept bid called after exercise\""
                        },
                        "value": "Expect accept bid called after exercise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_159437278d6fdff08abca8f37d1be4479b50d9dc2872456fce4b0aed10ac2ca3",
                          "typeString": "literal_string \"Expect accept bid called after exercise\""
                        }
                      ],
                      "id": 59205,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "10589:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10589:123:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59210,
                  "nodeType": "ExpressionStatement",
                  "src": "10589:123:98"
                }
              ]
            },
            "functionSelector": "d8fd11ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_acceptCommitmentWithBorrowersArray_reset",
            "nameLocation": "9932:45:98",
            "parameters": {
              "id": 59161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9977:2:98"
            },
            "returnParameters": {
              "id": 59162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9987:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59260,
            "nodeType": "FunctionDefinition",
            "src": "10725:839:98",
            "nodes": [],
            "body": {
              "id": 59259,
              "nodeType": "Block",
              "src": "10796:768:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59216
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59216,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "10814:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59259,
                      "src": "10806:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59215,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10806:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59218,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 59217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10829:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10806:24:98"
                },
                {
                  "assignments": [
                    59221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59221,
                      "mutability": "mutable",
                      "name": "commitment",
                      "nameLocation": "10860:10:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59259,
                      "src": "10841:29:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 59220,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59219,
                          "name": "Commitment",
                          "nameLocations": [
                            "10841:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "10841:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "10841:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59227,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59223,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "10904:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 59224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "10929:5:98",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2153,
                        "src": "10904:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "hexValue": "313030306536",
                        "id": 59225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10948:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 59222,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "10873:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 59226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10873:91:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10841:123:98"
                },
                {
                  "assignments": [
                    59229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59229,
                      "mutability": "mutable",
                      "name": "failedToAcceptCommitment",
                      "nameLocation": "10980:24:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59259,
                      "src": "10975:29:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 59228,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10975:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59230,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10975:29:98"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 59244,
                        "nodeType": "Block",
                        "src": "11331:2:98",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 59245,
                      "nodeType": "TryCatchClause",
                      "src": "11331:2:98"
                    },
                    {
                      "block": {
                        "id": 59250,
                        "nodeType": "Block",
                        "src": "11340:56:98",
                        "statements": [
                          {
                            "expression": {
                              "id": 59248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 59246,
                                "name": "failedToAcceptCommitment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59229,
                                "src": "11354:24:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 59247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11381:4:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "11354:31:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 59249,
                            "nodeType": "ExpressionStatement",
                            "src": "11354:31:98"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 59251,
                      "nodeType": "TryCatchClause",
                      "src": "11334:62:98"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 59233,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59216,
                        "src": "11078:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 59234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11108:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "30",
                        "id": 59235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11141:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 59236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11179:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59239,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58480,
                            "src": "11226:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          ],
                          "id": 59238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11218:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59237,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11218:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11218:24:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59241,
                        "name": "minInterestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58463,
                        "src": "11260:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 59242,
                        "name": "maxLoanDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58461,
                        "src": "11293:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 59231,
                        "name": "marketOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58443,
                        "src": "11031:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11043:17:98",
                      "memberName": "_acceptCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60081,
                      "src": "11031:29:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                      }
                    },
                    "id": 59243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11031:291:98",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59252,
                  "nodeType": "TryStatement",
                  "src": "11015:381:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59254,
                        "name": "failedToAcceptCommitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59229,
                        "src": "11428:24:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11466:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "53686f756c64206661696c20746f2061636365707420636f6d6d69746d656e74207769746820696e73756666696369656e7420636f6c6c61746572616c",
                        "id": 59256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11484:63:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_938a12c7f750d5440d04d1f890a8db9bd23e0ceafe23581094f6315323f31f66",
                          "typeString": "literal_string \"Should fail to accept commitment with insufficient collateral\""
                        },
                        "value": "Should fail to accept commitment with insufficient collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_938a12c7f750d5440d04d1f890a8db9bd23e0ceafe23581094f6315323f31f66",
                          "typeString": "literal_string \"Should fail to accept commitment with insufficient collateral\""
                        }
                      ],
                      "id": 59253,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "11406:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11406:151:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59258,
                  "nodeType": "ExpressionStatement",
                  "src": "11406:151:98"
                }
              ]
            },
            "functionSelector": "4115e42b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_acceptCommitmentFailsWithInsufficientCollateral",
            "nameLocation": "10734:52:98",
            "parameters": {
              "id": 59213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10786:2:98"
            },
            "returnParameters": {
              "id": 59214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10796:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59308,
            "nodeType": "FunctionDefinition",
            "src": "11570:834:98",
            "nodes": [],
            "body": {
              "id": 59307,
              "nodeType": "Block",
              "src": "11632:772:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59264,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "11650:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59307,
                      "src": "11642:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11642:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59266,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 59265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11665:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11642:24:98"
                },
                {
                  "assignments": [
                    59269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59269,
                      "mutability": "mutable",
                      "name": "commitment",
                      "nameLocation": "11696:10:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59307,
                      "src": "11677:29:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 59268,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59267,
                          "name": "Commitment",
                          "nameLocations": [
                            "11677:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "11677:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "11677:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59275,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59271,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "11740:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 59272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "11765:6:98",
                        "memberName": "ERC721",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2154,
                        "src": "11740:31:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "hexValue": "313030306536",
                        "id": 59273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11785:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 59270,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "11709:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 59274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11709:92:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11677:124:98"
                },
                {
                  "assignments": [
                    59277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59277,
                      "mutability": "mutable",
                      "name": "failedToAcceptCommitment",
                      "nameLocation": "11817:24:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59307,
                      "src": "11812:29:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 59276,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11812:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59278,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11812:29:98"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 59292,
                        "nodeType": "Block",
                        "src": "12169:2:98",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 59293,
                      "nodeType": "TryCatchClause",
                      "src": "12169:2:98"
                    },
                    {
                      "block": {
                        "id": 59298,
                        "nodeType": "Block",
                        "src": "12178:56:98",
                        "statements": [
                          {
                            "expression": {
                              "id": 59296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 59294,
                                "name": "failedToAcceptCommitment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59277,
                                "src": "12192:24:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 59295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12219:4:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "12192:31:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 59297,
                            "nodeType": "ExpressionStatement",
                            "src": "12192:31:98"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 59299,
                      "nodeType": "TryCatchClause",
                      "src": "12172:62:98"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 59281,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59264,
                        "src": "11915:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 59282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11945:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "32",
                        "id": 59283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11978:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "3232",
                        "id": 59284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12016:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_22_by_1",
                          "typeString": "int_const 22"
                        },
                        "value": "22"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59287,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58480,
                            "src": "12064:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                              "typeString": "contract TestERC20Token"
                            }
                          ],
                          "id": 59286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12056:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12056:7:98",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12056:24:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59289,
                        "name": "minInterestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58463,
                        "src": "12098:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 59290,
                        "name": "maxLoanDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58461,
                        "src": "12131:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_rational_22_by_1",
                          "typeString": "int_const 22"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 59279,
                        "name": "marketOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58443,
                        "src": "11868:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentUser_$60094",
                          "typeString": "contract LenderCommitmentUser"
                        }
                      },
                      "id": 59280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11880:17:98",
                      "memberName": "_acceptCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60081,
                      "src": "11868:29:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                      }
                    },
                    "id": 59291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11868:292:98",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59300,
                  "nodeType": "TryStatement",
                  "src": "11852:382:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59302,
                        "name": "failedToAcceptCommitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59277,
                        "src": "12266:24:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12304:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "53686f756c64206661696c20746f2061636365707420636f6d6d69746d656e74207769746820696e76616c696420616d6f756e7420666f7220455243373231",
                        "id": 59304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12322:65:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_743d824efead21dcf752930f846ffa438846bd9d460366695820b05d7f6e938a",
                          "typeString": "literal_string \"Should fail to accept commitment with invalid amount for ERC721\""
                        },
                        "value": "Should fail to accept commitment with invalid amount for ERC721"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_743d824efead21dcf752930f846ffa438846bd9d460366695820b05d7f6e938a",
                          "typeString": "literal_string \"Should fail to accept commitment with invalid amount for ERC721\""
                        }
                      ],
                      "id": 59301,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "12244:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12244:153:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59306,
                  "nodeType": "ExpressionStatement",
                  "src": "12244:153:98"
                }
              ]
            },
            "functionSelector": "9df2794a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_acceptCommitmentFailsWithInvalidAmount",
            "nameLocation": "11579:43:98",
            "parameters": {
              "id": 59261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11622:2:98"
            },
            "returnParameters": {
              "id": 59262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11632:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59312,
            "nodeType": "FunctionDefinition",
            "src": "12410:47:98",
            "nodes": [],
            "body": {
              "id": 59311,
              "nodeType": "Block",
              "src": "12455:2:98",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "93afc31a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrementCommitment_before",
            "nameLocation": "12419:26:98",
            "parameters": {
              "id": 59309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12445:2:98"
            },
            "returnParameters": {
              "id": 59310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12455:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59349,
            "nodeType": "FunctionDefinition",
            "src": "12463:496:98",
            "nodes": [],
            "body": {
              "id": 59348,
              "nodeType": "Block",
              "src": "12506:453:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59316,
                      "mutability": "mutable",
                      "name": "commitmentId",
                      "nameLocation": "12524:12:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59348,
                      "src": "12516:20:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12516:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59318,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 59317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12539:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12516:24:98"
                },
                {
                  "assignments": [
                    59320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59320,
                      "mutability": "mutable",
                      "name": "_decrementAmount",
                      "nameLocation": "12558:16:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59348,
                      "src": "12550:24:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12550:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59322,
                  "initialValue": {
                    "hexValue": "3232",
                    "id": 59321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12577:2:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_22_by_1",
                      "typeString": "int_const 22"
                    },
                    "value": "22"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12550:29:98"
                },
                {
                  "assignments": [
                    59325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59325,
                      "mutability": "mutable",
                      "name": "commitment",
                      "nameLocation": "12609:10:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59348,
                      "src": "12590:29:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                        "typeString": "struct LenderCommitmentForwarder.Commitment"
                      },
                      "typeName": {
                        "id": 59324,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59323,
                          "name": "Commitment",
                          "nameLocations": [
                            "12590:10:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2182,
                          "src": "12590:10:98"
                        },
                        "referencedDeclaration": 2182,
                        "src": "12590:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59331,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59327,
                          "name": "CommitmentCollateralType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2158,
                          "src": "12653:24:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                            "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                          }
                        },
                        "id": 59328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "12678:5:98",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2153,
                        "src": "12653:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        }
                      },
                      {
                        "hexValue": "313030306536",
                        "id": 59329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12697:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                          "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 59326,
                      "name": "_createCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58812,
                      "src": "12622:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_CommitmentCollateralType_$2158_$_t_uint256_$returns$_t_struct$_Commitment_$2182_storage_ptr_$",
                        "typeString": "function (enum LenderCommitmentForwarder.CommitmentCollateralType,uint256) returns (struct LenderCommitmentForwarder.Commitment storage pointer)"
                      }
                    },
                    "id": 59330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12622:91:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12590:123:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59333,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59316,
                        "src": "12745:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59334,
                        "name": "_decrementAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59320,
                        "src": "12759:16:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59332,
                      "name": "_decrementCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2555,
                      "src": "12724:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 59335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12724:52:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59336,
                  "nodeType": "ExpressionStatement",
                  "src": "12724:52:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 59343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59338,
                            "name": "commitment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59325,
                            "src": "12809:10:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                              "typeString": "struct LenderCommitmentForwarder.Commitment storage pointer"
                            }
                          },
                          "id": 59339,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12820:12:98",
                          "memberName": "maxPrincipal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2160,
                          "src": "12809:23:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 59340,
                            "name": "maxAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58453,
                            "src": "12836:9:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 59341,
                            "name": "_decrementAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59320,
                            "src": "12848:16:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12836:28:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12809:55:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12878:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "436f6d6d69746d656e74206d6178207072696e636970616c20776173206e6f742064656372656d656e746564",
                        "id": 59345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12896:46:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7561b95e0f7e57c71aa80f0efaf64153d7462848b77bd1c3eb5defb67086eba",
                          "typeString": "literal_string \"Commitment max principal was not decremented\""
                        },
                        "value": "Commitment max principal was not decremented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7561b95e0f7e57c71aa80f0efaf64153d7462848b77bd1c3eb5defb67086eba",
                          "typeString": "literal_string \"Commitment max principal was not decremented\""
                        }
                      ],
                      "id": 59337,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "12787:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12787:165:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59347,
                  "nodeType": "ExpressionStatement",
                  "src": "12787:165:98"
                }
              ]
            },
            "functionSelector": "6e7b3afe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrementCommitment_test",
            "nameLocation": "12472:24:98",
            "parameters": {
              "id": 59313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12496:2:98"
            },
            "returnParameters": {
              "id": 59314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12506:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59407,
            "nodeType": "FunctionDefinition",
            "src": "13180:813:98",
            "nodes": [],
            "body": {
              "id": 59406,
              "nodeType": "Block",
              "src": "13248:745:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59355,
                      "mutability": "mutable",
                      "name": "usdcToken",
                      "nameLocation": "13275:9:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59406,
                      "src": "13260:24:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59354,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59353,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "13260:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "13260:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "13260:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59364,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13319:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13344:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13365:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13380:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13287:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59357,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59356,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "13291:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "13291:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "13291:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13287:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13260:131:98"
                },
                {
                  "assignments": [
                    59367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59367,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "13417:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59406,
                      "src": "13402:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59366,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59365,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "13402:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "13402:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "13402:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59376,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "54657374205772617070656420455448",
                        "id": 59371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13467:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4eed15b323253607e76c74626006cd349abc6ef43961aafeff285df92be84ccb",
                          "typeString": "literal_string \"Test Wrapped ETH\""
                        },
                        "value": "Test Wrapped ETH"
                      },
                      {
                        "hexValue": "5457455448",
                        "id": 59372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13499:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                          "typeString": "literal_string \"TWETH\""
                        },
                        "value": "TWETH"
                      },
                      {
                        "hexValue": "30",
                        "id": 59373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13520:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3138",
                        "id": 59374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13535:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4eed15b323253607e76c74626006cd349abc6ef43961aafeff285df92be84ccb",
                          "typeString": "literal_string \"Test Wrapped ETH\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                          "typeString": "literal_string \"TWETH\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 59370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13435:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59369,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59368,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "13439:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "13439:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "13439:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13435:112:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13402:145:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_700000000_by_1",
                              "typeString": "int_const 700000000"
                            },
                            "id": 59383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "373030",
                              "id": 59380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13624:3:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_700_by_1",
                                "typeString": "int_const 700"
                              },
                              "value": "700"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316536",
                                  "id": 59381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13631:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "id": 59382,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13630:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "src": "13624:11:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700000000_by_1",
                              "typeString": "int_const 700000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_500000000000000_by_1",
                              "typeString": "int_const 500000000000000"
                            },
                            "id": 59390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_500000000_by_1",
                                "typeString": "int_const 500000000"
                              },
                              "id": 59387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "353030",
                                "id": 59384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13670:3:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500_by_1",
                                  "typeString": "int_const 500"
                                },
                                "value": "500"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "316536",
                                    "id": 59385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13677:3:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000_by_1",
                                      "typeString": "int_const 1000000"
                                    },
                                    "value": "1e6"
                                  }
                                ],
                                "id": 59386,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "13676:5:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              },
                              "src": "13670:11:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500000000_by_1",
                                "typeString": "int_const 500000000"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316536",
                                  "id": 59388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13685:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "id": 59389,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13684:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "src": "13670:19:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000000000_by_1",
                              "typeString": "int_const 500000000000000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59391,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "13779:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "13804:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "13779:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59395,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59367,
                                "src": "13835:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13827:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59393,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13827:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13827:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59399,
                                "name": "usdcToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59355,
                                "src": "13877:9:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13869:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59397,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13869:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13869:18:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_700000000_by_1",
                              "typeString": "int_const 700000000"
                            },
                            {
                              "typeIdentifier": "t_rational_500000000000000_by_1",
                              "typeString": "int_const 500000000000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59378,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "13579:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13585:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "13579:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13579:322:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3134653137",
                        "id": 59402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13915:5:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1400000000000000000_by_1",
                          "typeString": "int_const 1400000000000000000"
                        },
                        "value": "14e17"
                      },
                      {
                        "hexValue": "657870656374656420312e34205745544820636f6c6c61746572616c",
                        "id": 59403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13946:30:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eed6ac695e23ed67d82a804f5193a50706bb66eac5359c0bccc3fdb267062c07",
                          "typeString": "literal_string \"expected 1.4 WETH collateral\""
                        },
                        "value": "expected 1.4 WETH collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1400000000000000000_by_1",
                          "typeString": "int_const 1400000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eed6ac695e23ed67d82a804f5193a50706bb66eac5359c0bccc3fdb267062c07",
                          "typeString": "literal_string \"expected 1.4 WETH collateral\""
                        }
                      ],
                      "id": 59377,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "13557:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13557:429:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59405,
                  "nodeType": "ExpressionStatement",
                  "src": "13557:429:98"
                }
              ]
            },
            "documentation": {
              "id": 59350,
              "nodeType": "StructuredDocumentation",
              "src": "12965:208:98",
              "text": "             collateral token = WETH (10**18)\n              principal token = USDC (10**6)\n                    principal = 700 USDC\n max principal per collateral = 500 USDC"
            },
            "functionSelector": "13dcb087",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_700_USDC__500_per_WETH",
            "nameLocation": "13189:49:98",
            "parameters": {
              "id": 59351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13238:2:98"
            },
            "returnParameters": {
              "id": 59352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13248:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59454,
            "nodeType": "FunctionDefinition",
            "src": "14210:605:98",
            "nodes": [],
            "body": {
              "id": 59453,
              "nodeType": "Block",
              "src": "14298:517:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59413,
                      "mutability": "mutable",
                      "name": "usdcToken",
                      "nameLocation": "14323:9:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59453,
                      "src": "14308:24:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59412,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59411,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "14308:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "14308:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "14308:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59422,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14367:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14392:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14413:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14428:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14335:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59415,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59414,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "14339:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "14339:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "14339:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14335:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14308:131:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3730306536",
                            "id": 59426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14518:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700000000_by_1",
                              "typeString": "int_const 700000000"
                            },
                            "value": "700e6"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_500000000000000_by_1",
                              "typeString": "int_const 500000000000000"
                            },
                            "id": 59437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_500000000000000_by_1",
                                "typeString": "int_const 500000000000000"
                              },
                              "id": 59432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3530306536",
                                "id": 59427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14558:5:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000_by_1",
                                  "typeString": "int_const 500000000"
                                },
                                "value": "500e6"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000_by_1",
                                      "typeString": "int_const 1000000"
                                    },
                                    "id": 59430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 59428,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14567:2:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "hexValue": "36",
                                      "id": 59429,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14571:1:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_6_by_1",
                                        "typeString": "int_const 6"
                                      },
                                      "value": "6"
                                    },
                                    "src": "14567:5:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000_by_1",
                                      "typeString": "int_const 1000000"
                                    }
                                  }
                                ],
                                "id": 59431,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14566:7:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              },
                              "src": "14558:15:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500000000000000_by_1",
                                "typeString": "int_const 500000000000000"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "id": 59435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 59433,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14577:2:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 59434,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14581:1:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "14577:5:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                }
                              ],
                              "id": 59436,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14576:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            },
                            "src": "14558:25:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000000000_by_1",
                              "typeString": "int_const 500000000000000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59438,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "14621:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14646:7:98",
                            "memberName": "ERC1155",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2155,
                            "src": "14621:32:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 59442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14679:1:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 59441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14671:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59440,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14671:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14671:10:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59446,
                                "name": "usdcToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59413,
                                "src": "14707:9:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14699:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59444,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14699:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14699:18:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_700000000_by_1",
                              "typeString": "int_const 700000000"
                            },
                            {
                              "typeIdentifier": "t_rational_500000000000000_by_1",
                              "typeString": "int_const 500000000000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59424,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "14473:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14479:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "14473:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14473:258:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 59449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14745:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "65787065637465642032204e46547320636f6c6c61746572616c",
                        "id": 59450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14770:28:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f756e5563625d115f64bf86ce4692cae41bbc4002ffdd495d1da1c86715f3623",
                          "typeString": "literal_string \"expected 2 NFTs collateral\""
                        },
                        "value": "expected 2 NFTs collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f756e5563625d115f64bf86ce4692cae41bbc4002ffdd495d1da1c86715f3623",
                          "typeString": "literal_string \"expected 2 NFTs collateral\""
                        }
                      ],
                      "id": 59423,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "14451:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14451:357:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59452,
                  "nodeType": "ExpressionStatement",
                  "src": "14451:357:98"
                }
              ]
            },
            "documentation": {
              "id": 59408,
              "nodeType": "StructuredDocumentation",
              "src": "13999:206:98",
              "text": "             collateral token = NFT (10**0)\n              principal token = USDC (10**6)\n                    principal = 700 USDC\n max principal per collateral = 500 USDC"
            },
            "functionSelector": "97dc6201",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_700_USDC_loan__500_per_ERC1155",
            "nameLocation": "14219:57:98",
            "parameters": {
              "id": 59409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14276:2:98"
            },
            "returnParameters": {
              "id": 59410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14298:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59494,
            "nodeType": "FunctionDefinition",
            "src": "15034:617:98",
            "nodes": [],
            "body": {
              "id": 59493,
              "nodeType": "Block",
              "src": "15109:542:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59460,
                      "mutability": "mutable",
                      "name": "usdcToken",
                      "nameLocation": "15134:9:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59493,
                      "src": "15119:24:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59459,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59458,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "15119:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "15119:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "15119:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59469,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15178:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15203:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15224:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15239:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15146:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59462,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59461,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "15150:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "15150:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "15150:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15146:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15119:131:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3530306536",
                            "id": 59473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15330:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            },
                            "value": "500e6"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_500000000000000_by_1",
                              "typeString": "int_const 500000000000000"
                            },
                            "id": 59477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3530306536",
                              "id": 59474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15371:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500000000_by_1",
                                "typeString": "int_const 500000000"
                              },
                              "value": "500e6"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316536",
                                  "id": 59475,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15380:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "id": 59476,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15379:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "src": "15371:13:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000000000_by_1",
                              "typeString": "int_const 500000000000000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59478,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "15460:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15485:6:98",
                            "memberName": "ERC721",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2154,
                            "src": "15460:31:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 59482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15517:1:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 59481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15509:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59480,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15509:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15509:10:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59486,
                                "name": "usdcToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59460,
                                "src": "15545:9:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15537:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59484,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15537:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15537:18:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            },
                            {
                              "typeIdentifier": "t_rational_500000000000000_by_1",
                              "typeString": "int_const 500000000000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59471,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "15285:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15291:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "15285:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15285:284:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 59489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15583:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "65787065637465642031204e465420636f6c6c61746572616c",
                        "id": 59490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15607:27:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38dee8926181f3aa8fc019831f14ace678c1e2d36aae6cffe00eafef811de637",
                          "typeString": "literal_string \"expected 1 NFT collateral\""
                        },
                        "value": "expected 1 NFT collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38dee8926181f3aa8fc019831f14ace678c1e2d36aae6cffe00eafef811de637",
                          "typeString": "literal_string \"expected 1 NFT collateral\""
                        }
                      ],
                      "id": 59470,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "15263:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15263:381:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59492,
                  "nodeType": "ExpressionStatement",
                  "src": "15263:381:98"
                }
              ]
            },
            "documentation": {
              "id": 59455,
              "nodeType": "StructuredDocumentation",
              "src": "14821:206:98",
              "text": "             collateral token = NFT (10**0)\n              principal token = USDC (10**6)\n                    principal = 500 USDC\n max principal per collateral = 500 USDC"
            },
            "functionSelector": "d833c1bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_500_USDC_loan__500_per_ERC721",
            "nameLocation": "15043:56:98",
            "parameters": {
              "id": 59456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15099:2:98"
            },
            "returnParameters": {
              "id": 59457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15109:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59534,
            "nodeType": "FunctionDefinition",
            "src": "15872:688:98",
            "nodes": [],
            "body": {
              "id": 59533,
              "nodeType": "Block",
              "src": "15945:615:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59500,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "15970:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59533,
                      "src": "15955:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59499,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59498,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "15955:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "15955:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "15955:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59509,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16020:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16045:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16066:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16081:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15988:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59502,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59501,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "15992:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "15992:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "15992:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15988:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15955:137:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31653138",
                            "id": 59513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16169:4:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_590000000000000000000000000000000_by_1",
                              "typeString": "int_const 5900...(25 digits omitted)...0000"
                            },
                            "id": 59517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3539653133",
                              "id": 59514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16206:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_590000000000000_by_1",
                                "typeString": "int_const 590000000000000"
                              },
                              "value": "59e13"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "31653138",
                                  "id": 59515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16215:4:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                }
                              ],
                              "id": 59516,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "16214:6:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "16206:14:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_590000000000000000000000000000000_by_1",
                              "typeString": "int_const 5900...(25 digits omitted)...0000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59518,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "16273:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "16298:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "16273:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59522,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59500,
                                "src": "16329:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16321:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59520,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16321:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16321:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59526,
                                "name": "principalToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58474,
                                "src": "16371:14:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16363:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59524,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16363:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16363:23:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_590000000000000000000000000000000_by_1",
                              "typeString": "int_const 5900...(25 digits omitted)...0000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59511,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "16124:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16130:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "16124:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16124:276:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "315f3639345f3931355f323535",
                        "id": 59529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16414:13:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1694915255_by_1",
                          "typeString": "int_const 1694915255"
                        },
                        "value": "1_694_915_255"
                      },
                      {
                        "hexValue": "657870656374656420312c3639342e393135323535205553444320636f6c6c61746572616c",
                        "id": 59530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16504:39:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e02ab674b76df3a87f7486a85e605456d3fbbe275a2d37f42355d27f2f153c21",
                          "typeString": "literal_string \"expected 1,694.915255 USDC collateral\""
                        },
                        "value": "expected 1,694.915255 USDC collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1694915255_by_1",
                          "typeString": "int_const 1694915255"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e02ab674b76df3a87f7486a85e605456d3fbbe275a2d37f42355d27f2f153c21",
                          "typeString": "literal_string \"expected 1,694.915255 USDC collateral\""
                        }
                      ],
                      "id": 59510,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "16102:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16102:451:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59532,
                  "nodeType": "ExpressionStatement",
                  "src": "16102:451:98"
                }
              ]
            },
            "documentation": {
              "id": 59495,
              "nodeType": "StructuredDocumentation",
              "src": "15657:210:98",
              "text": "             collateral token = USDC (10**6)\n              principal token = WETH (10**18)\n                    principal = 1 WETH\n max principal per collateral = 0.00059 WETH"
            },
            "functionSelector": "3ea64627",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_1_WETH_loan__00059_per_USDC",
            "nameLocation": "15881:54:98",
            "parameters": {
              "id": 59496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15935:2:98"
            },
            "returnParameters": {
              "id": 59497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15945:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59589,
            "nodeType": "FunctionDefinition",
            "src": "16784:816:98",
            "nodes": [],
            "body": {
              "id": 59588,
              "nodeType": "Block",
              "src": "16877:723:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59540,
                      "mutability": "mutable",
                      "name": "usdcToken",
                      "nameLocation": "16902:9:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59588,
                      "src": "16887:24:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59539,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59538,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "16887:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "16887:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "16887:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59549,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16946:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16971:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16992:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17007:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "16914:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59542,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59541,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "16918:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "16918:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "16918:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16914:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16887:131:98"
                },
                {
                  "assignments": [
                    59552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59552,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "17044:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59588,
                      "src": "17029:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59551,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59550,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "17029:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "17029:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "17029:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59561,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742057455448",
                        "id": 59556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17094:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ec5d6e4f731616320143bf13f84caf9f152fde3056743a4718b420db0e69585",
                          "typeString": "literal_string \"Test WETH\""
                        },
                        "value": "Test WETH"
                      },
                      {
                        "hexValue": "5457455448",
                        "id": 59557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17119:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                          "typeString": "literal_string \"TWETH\""
                        },
                        "value": "TWETH"
                      },
                      {
                        "hexValue": "30",
                        "id": 59558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17140:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3138",
                        "id": 59559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17155:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9ec5d6e4f731616320143bf13f84caf9f152fde3056743a4718b420db0e69585",
                          "typeString": "literal_string \"Test WETH\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                          "typeString": "literal_string \"TWETH\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 59555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "17062:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59554,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59553,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "17066:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "17066:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "17066:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17062:105:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17029:138:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "id": 59568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030",
                              "id": 59565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17245:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316536",
                                  "id": 59566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17253:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "id": 59567,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17252:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "src": "17245:12:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            },
                            "id": 59572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "316539",
                              "id": 59569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17306:3:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000_by_1",
                                "typeString": "int_const 1000000000"
                              },
                              "value": "1e9"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316536",
                                  "id": 59570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17313:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "id": 59571,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17312:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "src": "17306:11:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59573,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "17383:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "17408:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "17383:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59577,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59552,
                                "src": "17439:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17431:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59575,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17431:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17431:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59581,
                                "name": "usdcToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59540,
                                "src": "17481:9:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17473:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17473:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17473:18:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59563,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "17200:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17206:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "17200:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17200:305:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 59584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17519:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "657870656374656420312045544820726571756972656420636f6c6c61746572616c",
                        "id": 59585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17547:36:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bc10a2c918b29c064b4d2f539e3bb0734c06bcda6d03bd12c1d9cd564cd609f",
                          "typeString": "literal_string \"expected 1 ETH required collateral\""
                        },
                        "value": "expected 1 ETH required collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bc10a2c918b29c064b4d2f539e3bb0734c06bcda6d03bd12c1d9cd564cd609f",
                          "typeString": "literal_string \"expected 1 ETH required collateral\""
                        }
                      ],
                      "id": 59562,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "17178:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17178:415:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59587,
                  "nodeType": "ExpressionStatement",
                  "src": "17178:415:98"
                }
              ]
            },
            "documentation": {
              "id": 59535,
              "nodeType": "StructuredDocumentation",
              "src": "16566:211:98",
              "text": "             collateral token = WETH (10**18)\n              principal token = USDC (10**6)\n                    principal = 1000 USDC $\n max principal per collateral = 1.0 WETH"
            },
            "functionSelector": "5c012803",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_1000_USDC_loan_9_gwei_per_usdc_unit",
            "nameLocation": "16793:62:98",
            "parameters": {
              "id": 59536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16855:2:98"
            },
            "returnParameters": {
              "id": 59537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16877:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59644,
            "nodeType": "FunctionDefinition",
            "src": "17842:826:98",
            "nodes": [],
            "body": {
              "id": 59643,
              "nodeType": "Block",
              "src": "17936:732:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59595,
                      "mutability": "mutable",
                      "name": "usdcToken",
                      "nameLocation": "17961:9:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59643,
                      "src": "17946:24:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59594,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59593,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "17946:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "17946:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "17946:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59604,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18005:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18030:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18051:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18066:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "17973:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59597,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59596,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "17977:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "17977:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "17977:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17973:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17946:131:98"
                },
                {
                  "assignments": [
                    59607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59607,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "18103:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59643,
                      "src": "18088:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59606,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59605,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "18088:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "18088:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "18088:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59616,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742057455448",
                        "id": 59611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18153:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ec5d6e4f731616320143bf13f84caf9f152fde3056743a4718b420db0e69585",
                          "typeString": "literal_string \"Test WETH\""
                        },
                        "value": "Test WETH"
                      },
                      {
                        "hexValue": "5457455448",
                        "id": 59612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18178:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                          "typeString": "literal_string \"TWETH\""
                        },
                        "value": "TWETH"
                      },
                      {
                        "hexValue": "30",
                        "id": 59613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18199:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3138",
                        "id": 59614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18214:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9ec5d6e4f731616320143bf13f84caf9f152fde3056743a4718b420db0e69585",
                          "typeString": "literal_string \"Test WETH\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                          "typeString": "literal_string \"TWETH\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 59610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "18121:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59609,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59608,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "18125:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "18125:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "18125:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18121:105:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18088:138:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_8888000000_by_1",
                              "typeString": "int_const 8888000000"
                            },
                            "id": 59623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "38383838",
                              "id": 59620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18306:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8888_by_1",
                                "typeString": "int_const 8888"
                              },
                              "value": "8888"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316536",
                                  "id": 59621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18314:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "id": 59622,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "18313:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "src": "18306:12:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8888000000_by_1",
                              "typeString": "int_const 8888000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            },
                            "id": 59627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "316539",
                              "id": 59624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18367:3:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000_by_1",
                                "typeString": "int_const 1000000000"
                              },
                              "value": "1e9"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316536",
                                  "id": 59625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18374:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "id": 59626,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "18373:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "src": "18367:11:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59628,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "18444:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "18469:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "18444:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59632,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59607,
                                "src": "18500:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18492:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59630,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18492:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18492:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59636,
                                "name": "usdcToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59595,
                                "src": "18542:9:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18534:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59634,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18534:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18534:18:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_8888000000_by_1",
                              "typeString": "int_const 8888000000"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59618,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "18261:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18267:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "18261:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18261:305:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "38383838653135",
                        "id": 59639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18580:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8888000000000000000_by_1",
                          "typeString": "int_const 8888000000000000000"
                        },
                        "value": "8888e15"
                      },
                      {
                        "hexValue": "657870656374656420312045544820726571756972656420636f6c6c61746572616c",
                        "id": 59640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18615:36:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bc10a2c918b29c064b4d2f539e3bb0734c06bcda6d03bd12c1d9cd564cd609f",
                          "typeString": "literal_string \"expected 1 ETH required collateral\""
                        },
                        "value": "expected 1 ETH required collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_8888000000000000000_by_1",
                          "typeString": "int_const 8888000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bc10a2c918b29c064b4d2f539e3bb0734c06bcda6d03bd12c1d9cd564cd609f",
                          "typeString": "literal_string \"expected 1 ETH required collateral\""
                        }
                      ],
                      "id": 59617,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "18239:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18239:422:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59642,
                  "nodeType": "ExpressionStatement",
                  "src": "18239:422:98"
                }
              ]
            },
            "documentation": {
              "id": 59590,
              "nodeType": "StructuredDocumentation",
              "src": "17606:229:98",
              "text": "             collateral token = WETH (10**18)\n              principal token = USDC (10**6)\n                    principal = 8888 USDC $\n max principal per collateral = 1 gwei per USDDC base unit"
            },
            "functionSelector": "cccfc69c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_8888_USDC_loan__9_gwei_per_usdc_unit",
            "nameLocation": "17851:63:98",
            "parameters": {
              "id": 59591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17914:2:98"
            },
            "returnParameters": {
              "id": 59592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17936:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59699,
            "nodeType": "FunctionDefinition",
            "src": "18915:789:98",
            "nodes": [],
            "body": {
              "id": 59698,
              "nodeType": "Block",
              "src": "18981:723:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59650,
                      "mutability": "mutable",
                      "name": "usdcToken",
                      "nameLocation": "19007:9:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59698,
                      "src": "18992:24:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59649,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59648,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "18992:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "18992:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "18992:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59659,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19051:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19076:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19097:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19112:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "19019:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59652,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59651,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "19023:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "19023:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "19023:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19019:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18992:131:98"
                },
                {
                  "assignments": [
                    59662
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59662,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "19149:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59698,
                      "src": "19134:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59661,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59660,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "19134:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "19134:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "19134:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59671,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742057455448",
                        "id": 59666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19199:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ec5d6e4f731616320143bf13f84caf9f152fde3056743a4718b420db0e69585",
                          "typeString": "literal_string \"Test WETH\""
                        },
                        "value": "Test WETH"
                      },
                      {
                        "hexValue": "5457455448",
                        "id": 59667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19224:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                          "typeString": "literal_string \"TWETH\""
                        },
                        "value": "TWETH"
                      },
                      {
                        "hexValue": "30",
                        "id": 59668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19245:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3138",
                        "id": 59669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19260:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9ec5d6e4f731616320143bf13f84caf9f152fde3056743a4718b420db0e69585",
                          "typeString": "literal_string \"Test WETH\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd8bb47a2373a84f2436b8d9e674a2bbfe69d0d2a059d429826f620f4621fb89",
                          "typeString": "literal_string \"TWETH\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 59665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "19167:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59664,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59663,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "19171:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "19171:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "19171:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19167:105:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19134:138:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_8888000000_by_1",
                              "typeString": "int_const 8888000000"
                            },
                            "id": 59678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "38383838",
                              "id": 59675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19352:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8888_by_1",
                                "typeString": "int_const 8888"
                              },
                              "value": "8888"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316536",
                                  "id": 59676,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19360:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "id": 59677,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "19359:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "src": "19352:12:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8888000000_by_1",
                              "typeString": "int_const 8888000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_8888000000000000_by_1",
                              "typeString": "int_const 8888000000000000"
                            },
                            "id": 59682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "38383838303030303030",
                              "id": 59679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19413:10:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8888000000_by_1",
                                "typeString": "int_const 8888000000"
                              },
                              "value": "8888000000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316536",
                                  "id": 59680,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19427:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "id": 59681,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "19426:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "src": "19413:18:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8888000000000000_by_1",
                              "typeString": "int_const 8888000000000000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59683,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "19487:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "19512:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "19487:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59687,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59662,
                                "src": "19543:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19535:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59685,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19535:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19535:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59691,
                                "name": "usdcToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59650,
                                "src": "19585:9:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19577:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59689,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19577:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19577:18:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_8888000000_by_1",
                              "typeString": "int_const 8888000000"
                            },
                            {
                              "typeIdentifier": "t_rational_8888000000000000_by_1",
                              "typeString": "int_const 8888000000000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59673,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "19307:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19313:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "19307:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19307:302:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 59694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19623:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "657870656374656420312045544820726571756972656420636f6c6c61746572616c",
                        "id": 59695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19651:36:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bc10a2c918b29c064b4d2f539e3bb0734c06bcda6d03bd12c1d9cd564cd609f",
                          "typeString": "literal_string \"expected 1 ETH required collateral\""
                        },
                        "value": "expected 1 ETH required collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bc10a2c918b29c064b4d2f539e3bb0734c06bcda6d03bd12c1d9cd564cd609f",
                          "typeString": "literal_string \"expected 1 ETH required collateral\""
                        }
                      ],
                      "id": 59672,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "19284:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19284:413:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59697,
                  "nodeType": "ExpressionStatement",
                  "src": "19284:413:98"
                }
              ]
            },
            "documentation": {
              "id": 59645,
              "nodeType": "StructuredDocumentation",
              "src": "18674:235:98",
              "text": "             collateral token = WETH (10**18)\n              principal token = USDC (10**8)\n                    principal = 8888 USDC\n max principal per collateral =  8888000000 wei per USDC base unit"
            },
            "functionSelector": "35cf4680",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_8888_USDC_loan__unit",
            "nameLocation": "18924:47:98",
            "parameters": {
              "id": 59646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18971:2:98"
            },
            "returnParameters": {
              "id": 59647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18981:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59751,
            "nodeType": "FunctionDefinition",
            "src": "19933:811:98",
            "nodes": [],
            "body": {
              "id": 59750,
              "nodeType": "Block",
              "src": "20023:721:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59705
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59705,
                      "mutability": "mutable",
                      "name": "gweiToken",
                      "nameLocation": "20048:9:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59750,
                      "src": "20033:24:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59704,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59703,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "20033:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "20033:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "20033:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59714,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20092:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20117:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20138:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "39",
                        "id": 59712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20153:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        }
                      ],
                      "id": 59708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "20060:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59707,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59706,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "20064:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "20064:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "20064:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20060:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20033:131:98"
                },
                {
                  "assignments": [
                    59717
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59717,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "20190:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59750,
                      "src": "20175:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59716,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59715,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "20175:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "20175:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "20175:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59726,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20240:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20265:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20286:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20301:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "20208:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59719,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59718,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "20212:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "20212:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "20212:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20208:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20175:137:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "36",
                            "id": 59730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20389:6:98",
                            "subdenomination": "gwei",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6000000000_by_1",
                              "typeString": "int_const 6000000000"
                            },
                            "value": "6"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_590000000000000000000000_by_1",
                              "typeString": "int_const 590000000000000000000000"
                            },
                            "id": 59734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3539653133",
                              "id": 59731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20428:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_590000000000000_by_1",
                                "typeString": "int_const 590000000000000"
                              },
                              "value": "59e13"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "316539",
                                  "id": 59732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20437:3:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                    "typeString": "int_const 1000000000"
                                  },
                                  "value": "1e9"
                                }
                              ],
                              "id": 59733,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "20436:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000_by_1",
                                "typeString": "int_const 1000000000"
                              }
                            },
                            "src": "20428:13:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_590000000000000000000000_by_1",
                              "typeString": "int_const 590000000000000000000000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59735,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "20484:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "20509:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "20484:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59739,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59717,
                                "src": "20540:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20532:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59737,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20532:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20532:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59743,
                                "name": "gweiToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59705,
                                "src": "20582:9:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20574:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59741,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20574:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20574:18:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_6000000000_by_1",
                              "typeString": "int_const 6000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_590000000000000000000000_by_1",
                              "typeString": "int_const 590000000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59728,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "20344:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20350:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "20344:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20344:262:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3131",
                        "id": 59746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20620:2:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        },
                        "value": "11"
                      },
                      {
                        "hexValue": "657870656374656420302e303030303131205553444320636f6c6c61746572616c",
                        "id": 59747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20692:35:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f19bf834739518f52964f7fa16cc7ca633a6f670d455a5427f7252589f79a5ed",
                          "typeString": "literal_string \"expected 0.000011 USDC collateral\""
                        },
                        "value": "expected 0.000011 USDC collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f19bf834739518f52964f7fa16cc7ca633a6f670d455a5427f7252589f79a5ed",
                          "typeString": "literal_string \"expected 0.000011 USDC collateral\""
                        }
                      ],
                      "id": 59727,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "20322:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20322:415:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59749,
                  "nodeType": "ExpressionStatement",
                  "src": "20322:415:98"
                }
              ]
            },
            "documentation": {
              "id": 59700,
              "nodeType": "StructuredDocumentation",
              "src": "19710:218:98",
              "text": "             collateral token = USDC (10**6)\n              principal token = GWEI (10**9)\n                    principal = 6 GWEI\n max principal per collateral = 0.00059 USDC per gwei"
            },
            "functionSelector": "bb68c612",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_6_GWEI_loan__00059_WETH_per_USDC",
            "nameLocation": "19942:59:98",
            "parameters": {
              "id": 59701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20001:2:98"
            },
            "returnParameters": {
              "id": 59702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20023:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59790,
            "nodeType": "FunctionDefinition",
            "src": "20982:652:98",
            "nodes": [],
            "body": {
              "id": 59789,
              "nodeType": "Block",
              "src": "21071:563:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59757,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "21096:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59789,
                      "src": "21081:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59756,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59755,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "21081:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "21081:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "21081:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59766,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21146:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21171:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21192:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21207:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "21114:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59759,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59758,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "21118:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "21118:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "21118:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21114:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21081:137:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 59770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21295:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_590000000000000000000000000000000_by_1",
                              "typeString": "int_const 5900...(25 digits omitted)...0000"
                            },
                            "id": 59773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3539653133",
                              "id": 59771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21328:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_590000000000000_by_1",
                                "typeString": "int_const 590000000000000"
                              },
                              "value": "59e13"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 59772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21336:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "21328:12:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_590000000000000000000000000000000_by_1",
                              "typeString": "int_const 5900...(25 digits omitted)...0000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59774,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "21393:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21418:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "21393:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59778,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59757,
                                "src": "21449:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21441:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59776,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21441:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21441:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59782,
                                "name": "principalToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58474,
                                "src": "21491:14:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21483:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59780,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21483:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21483:23:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_rational_590000000000000000000000000000000_by_1",
                              "typeString": "int_const 5900...(25 digits omitted)...0000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59768,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "21250:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21256:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "21250:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21250:270:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 59785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21534:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6578706563746564206174206c65617374203120756e6974206f6620636f6c6c61746572616c",
                        "id": 59786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21577:40:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0360abddfff0f8e1c31e4245f13d46682b279a7f560963b58285ee8f0a3b7d5",
                          "typeString": "literal_string \"expected at least 1 unit of collateral\""
                        },
                        "value": "expected at least 1 unit of collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0360abddfff0f8e1c31e4245f13d46682b279a7f560963b58285ee8f0a3b7d5",
                          "typeString": "literal_string \"expected at least 1 unit of collateral\""
                        }
                      ],
                      "id": 59767,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "21228:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21228:399:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59788,
                  "nodeType": "ExpressionStatement",
                  "src": "21228:399:98"
                }
              ]
            },
            "documentation": {
              "id": 59752,
              "nodeType": "StructuredDocumentation",
              "src": "20748:229:98",
              "text": "             collateral token = USDC (10**6)\n              principal token = WEI (10**0)\n                    principal = 1 WEI\n max principal per collateral = // 0.00059 WETH per usdc base unit"
            },
            "functionSelector": "d4840680",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_1_WEI_loan__00059_WETH_per_USDC",
            "nameLocation": "20991:58:98",
            "parameters": {
              "id": 59753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21049:2:98"
            },
            "returnParameters": {
              "id": 59754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21071:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59829,
            "nodeType": "FunctionDefinition",
            "src": "21864:664:98",
            "nodes": [],
            "body": {
              "id": 59828,
              "nodeType": "Block",
              "src": "21954:574:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59796,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "21979:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59828,
                      "src": "21964:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59795,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59794,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "21964:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "21964:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "21964:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59805,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22029:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22054:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22075:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22090:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "21997:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59798,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59797,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "22001:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "22001:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "22001:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21997:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21964:137:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "316539",
                            "id": 59809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22178:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1e9"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_590000000000000000000000000000000_by_1",
                              "typeString": "int_const 5900...(25 digits omitted)...0000"
                            },
                            "id": 59812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3539653133",
                              "id": 59810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22214:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_590000000000000_by_1",
                                "typeString": "int_const 590000000000000"
                              },
                              "value": "59e13"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 59811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22222:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "22214:12:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_590000000000000000000000000000000_by_1",
                              "typeString": "int_const 5900...(25 digits omitted)...0000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59813,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "22314:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "22339:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "22314:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59817,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59796,
                                "src": "22370:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22362:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59815,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22362:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22362:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59821,
                                "name": "principalToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58474,
                                "src": "22412:14:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22404:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59819,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22404:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22404:23:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_590000000000000000000000000000000_by_1",
                              "typeString": "int_const 5900...(25 digits omitted)...0000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59807,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "22133:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "22139:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "22133:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22133:308:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 59824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22455:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "6578706563746564206174206c65617374203220756e697473206f6620636f6c6c61746572616c",
                        "id": 59825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22470:41:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a43964eb69642c4f078b4215f35411edf10924045192391aeb241eeeb122c46",
                          "typeString": "literal_string \"expected at least 2 units of collateral\""
                        },
                        "value": "expected at least 2 units of collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a43964eb69642c4f078b4215f35411edf10924045192391aeb241eeeb122c46",
                          "typeString": "literal_string \"expected at least 2 units of collateral\""
                        }
                      ],
                      "id": 59806,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "22111:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22111:410:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59827,
                  "nodeType": "ExpressionStatement",
                  "src": "22111:410:98"
                }
              ]
            },
            "documentation": {
              "id": 59791,
              "nodeType": "StructuredDocumentation",
              "src": "21640:219:98",
              "text": "             collateral token = USDC (10**6)\n              principal token = WETH (10**18)\n                    principal = 1 GWEI\n max principal per collateral = 0.00059 WETH per gwei"
            },
            "functionSelector": "08c31d35",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_1_GWEI_loan__00059_WETH_per_USDC",
            "nameLocation": "21873:59:98",
            "parameters": {
              "id": 59792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21932:2:98"
            },
            "returnParameters": {
              "id": 59793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21954:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59873,
            "nodeType": "FunctionDefinition",
            "src": "22753:637:98",
            "nodes": [],
            "body": {
              "id": 59872,
              "nodeType": "Block",
              "src": "22825:565:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59835,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "22850:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59872,
                      "src": "22835:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59834,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59833,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "22835:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "22835:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "22835:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59844,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22900:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22925:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22946:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22961:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "22868:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59837,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59836,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "22872:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "22872:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "22872:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22868:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22835:137:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "316539",
                            "id": 59848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23049:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1e9"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000"
                            },
                            "id": 59854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "id": 59851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 59849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23081:1:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "316536",
                                    "id": 59850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23085:3:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000_by_1",
                                      "typeString": "int_const 1000000"
                                    },
                                    "value": "1e6"
                                  },
                                  "src": "23081:7:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  }
                                }
                              ],
                              "id": 59852,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "23080:9:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 59853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23092:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "23080:16:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59855,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "23154:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "23179:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "23154:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59859,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59835,
                                "src": "23210:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23202:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59857,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23202:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23202:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59863,
                                "name": "principalToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58474,
                                "src": "23252:14:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23244:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59861,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23244:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23244:23:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59846,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "23004:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "23010:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "23004:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23004:277:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "id": 59868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "316533",
                          "id": 59866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23295:3:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1e3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 59867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23301:3:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "23295:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      },
                      {
                        "hexValue": "6578706563746564206174206c65617374203120756e6974206f6620636f6c6c61746572616c",
                        "id": 59869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23333:40:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0360abddfff0f8e1c31e4245f13d46682b279a7f560963b58285ee8f0a3b7d5",
                          "typeString": "literal_string \"expected at least 1 unit of collateral\""
                        },
                        "value": "expected at least 1 unit of collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0360abddfff0f8e1c31e4245f13d46682b279a7f560963b58285ee8f0a3b7d5",
                          "typeString": "literal_string \"expected at least 1 unit of collateral\""
                        }
                      ],
                      "id": 59845,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "22982:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22982:401:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59871,
                  "nodeType": "ExpressionStatement",
                  "src": "22982:401:98"
                }
              ]
            },
            "documentation": {
              "id": 59830,
              "nodeType": "StructuredDocumentation",
              "src": "22534:214:98",
              "text": "             collateral token = USDC (10**6)\n              principal token = WETH (10**18)\n                    principal = 1 GWEI\n max principal per collateral = 1 wei per usdc $"
            },
            "functionSelector": "994f8174",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC",
            "nameLocation": "22762:53:98",
            "parameters": {
              "id": 59831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22815:2:98"
            },
            "returnParameters": {
              "id": 59832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22825:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59915,
            "nodeType": "FunctionDefinition",
            "src": "23614:684:98",
            "nodes": [],
            "body": {
              "id": 59914,
              "nodeType": "Block",
              "src": "23703:595:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59879,
                      "mutability": "mutable",
                      "name": "collateralToken",
                      "nameLocation": "23728:15:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 59914,
                      "src": "23713:30:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                        "typeString": "contract TestERC20Token"
                      },
                      "typeName": {
                        "id": 59878,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59877,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "23713:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "23713:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "23713:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59888,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "546573742055534443",
                        "id": 59883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23778:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        "value": "Test USDC"
                      },
                      {
                        "hexValue": "5455534443",
                        "id": 59884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23803:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        "value": "TUSDC"
                      },
                      {
                        "hexValue": "30",
                        "id": 59885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23824:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "36",
                        "id": 59886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23839:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1d8fea91063c9a9018fd25c438f38f4b22f43581bc98d2ab8d0e422340b198db",
                          "typeString": "literal_string \"Test USDC\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce",
                          "typeString": "literal_string \"TUSDC\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 59882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "23746:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_TestERC20Token_$64986_$",
                        "typeString": "function (string memory,string memory,uint256,uint8) returns (contract TestERC20Token)"
                      },
                      "typeName": {
                        "id": 59881,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59880,
                          "name": "TestERC20Token",
                          "nameLocations": [
                            "23750:14:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64986,
                          "src": "23750:14:98"
                        },
                        "referencedDeclaration": 64986,
                        "src": "23750:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                          "typeString": "contract TestERC20Token"
                        }
                      }
                    },
                    "id": 59887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23746:104:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                      "typeString": "contract TestERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23713:137:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 59892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23927:1:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000"
                            },
                            "id": 59898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "id": 59895,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 59893,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23956:1:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "316536",
                                    "id": 59894,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23960:3:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000_by_1",
                                      "typeString": "int_const 1000000"
                                    },
                                    "value": "1e6"
                                  },
                                  "src": "23956:7:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  }
                                }
                              ],
                              "id": 59896,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "23955:9:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 59897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23967:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "23955:16:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000"
                            }
                          },
                          {
                            "expression": {
                              "id": 59899,
                              "name": "CommitmentCollateralType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "24065:24:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CommitmentCollateralType_$2158_$",
                                "typeString": "type(enum LenderCommitmentForwarder.CommitmentCollateralType)"
                              }
                            },
                            "id": 59900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "24090:5:98",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2153,
                            "src": "24065:30:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59903,
                                "name": "collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59879,
                                "src": "24121:15:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24113:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59901,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24113:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24113:24:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 59907,
                                "name": "principalToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58474,
                                "src": "24163:14:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20Token_$64986",
                                  "typeString": "contract TestERC20Token"
                                }
                              ],
                              "id": 59906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24155:7:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59905,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24155:7:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24155:23:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_CommitmentCollateralType_$2158",
                              "typeString": "enum LenderCommitmentForwarder.CommitmentCollateralType"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59890,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "23882:5:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_LenderCommitmentForwarder_Test_$59979_$",
                              "typeString": "type(contract super LenderCommitmentForwarder_Test)"
                            }
                          },
                          "id": 59891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "23888:21:98",
                          "memberName": "getRequiredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2815,
                          "src": "23882:27:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_CommitmentCollateralType_$2158_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,enum LenderCommitmentForwarder.CommitmentCollateralType,address,address) view returns (uint256)"
                          }
                        },
                        "id": 59909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23882:310:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 59910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24206:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6578706563746564206174206c65617374203120756e6974206f6620636f6c6c61746572616c",
                        "id": 59911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24241:40:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0360abddfff0f8e1c31e4245f13d46682b279a7f560963b58285ee8f0a3b7d5",
                          "typeString": "literal_string \"expected at least 1 unit of collateral\""
                        },
                        "value": "expected at least 1 unit of collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0360abddfff0f8e1c31e4245f13d46682b279a7f560963b58285ee8f0a3b7d5",
                          "typeString": "literal_string \"expected at least 1 unit of collateral\""
                        }
                      ],
                      "id": 59889,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 14070,
                      "src": "23860:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 59912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23860:431:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59913,
                  "nodeType": "ExpressionStatement",
                  "src": "23860:431:98"
                }
              ]
            },
            "documentation": {
              "id": 59874,
              "nodeType": "StructuredDocumentation",
              "src": "23396:213:98",
              "text": "             collateral token = USDC (10**6)\n              principal token = WETH (10**18)\n                    principal = 1 wei\n max principal per collateral = 1 wei per usdc $"
            },
            "functionSelector": "bca67dc3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRequiredCollateral_1_wei_loan__1_Wei_per_USDC_unit",
            "nameLocation": "23623:58:98",
            "parameters": {
              "id": 59875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23681:2:98"
            },
            "returnParameters": {
              "id": 59876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23703:0:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59933,
            "nodeType": "FunctionDefinition",
            "src": "24359:182:98",
            "nodes": [],
            "body": {
              "id": 59932,
              "nodeType": "Block",
              "src": "24481:60:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59926,
                      "name": "submitBidWasCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58469,
                      "src": "24491:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 59927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24512:4:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "24491:25:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59929,
                  "nodeType": "ExpressionStatement",
                  "src": "24491:25:98"
                },
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 59930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "24533:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 59925,
                  "id": 59931,
                  "nodeType": "Return",
                  "src": "24526:8:98"
                }
              ]
            },
            "baseFunctions": [
              8459
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_submitBid",
            "nameLocation": "24368:10:98",
            "overrides": {
              "id": 59922,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24436:8:98"
            },
            "parameters": {
              "id": 59921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59933,
                  "src": "24379:21:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CreateLoanArgs_$8341_memory_ptr",
                    "typeString": "struct TellerV2MarketForwarder.CreateLoanArgs"
                  },
                  "typeName": {
                    "id": 59917,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59916,
                      "name": "CreateLoanArgs",
                      "nameLocations": [
                        "24379:14:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8341,
                      "src": "24379:14:98"
                    },
                    "referencedDeclaration": 8341,
                    "src": "24379:14:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateLoanArgs_$8341_storage_ptr",
                      "typeString": "struct TellerV2MarketForwarder.CreateLoanArgs"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59920,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59933,
                  "src": "24402:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24402:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24378:32:98"
            },
            "returnParameters": {
              "id": 59925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59924,
                  "mutability": "mutable",
                  "name": "bidId",
                  "nameLocation": "24470:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 59933,
                  "src": "24462:13:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24462:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24461:15:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59955,
            "nodeType": "FunctionDefinition",
            "src": "24547:233:98",
            "nodes": [],
            "body": {
              "id": 59954,
              "nodeType": "Block",
              "src": "24706:74:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59948,
                      "name": "submitBidWithCollateralWasCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58471,
                      "src": "24716:32:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 59949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24751:4:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "24716:39:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59951,
                  "nodeType": "ExpressionStatement",
                  "src": "24716:39:98"
                },
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 59952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "24772:1:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 59947,
                  "id": 59953,
                  "nodeType": "Return",
                  "src": "24765:8:98"
                }
              ]
            },
            "baseFunctions": [
              8511
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_submitBidWithCollateral",
            "nameLocation": "24556:24:98",
            "overrides": {
              "id": 59944,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24673:8:98"
            },
            "parameters": {
              "id": 59943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59936,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59955,
                  "src": "24590:21:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CreateLoanArgs_$8341_memory_ptr",
                    "typeString": "struct TellerV2MarketForwarder.CreateLoanArgs"
                  },
                  "typeName": {
                    "id": 59935,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59934,
                      "name": "CreateLoanArgs",
                      "nameLocations": [
                        "24590:14:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8341,
                      "src": "24590:14:98"
                    },
                    "referencedDeclaration": 8341,
                    "src": "24590:14:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateLoanArgs_$8341_storage_ptr",
                      "typeString": "struct TellerV2MarketForwarder.CreateLoanArgs"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59940,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59955,
                  "src": "24621:19:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Collateral_$10118_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Collateral[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59938,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 59937,
                        "name": "Collateral",
                        "nameLocations": [
                          "24621:10:98"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10118,
                        "src": "24621:10:98"
                      },
                      "referencedDeclaration": 10118,
                      "src": "24621:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$10118_storage_ptr",
                        "typeString": "struct Collateral"
                      }
                    },
                    "id": 59939,
                    "nodeType": "ArrayTypeName",
                    "src": "24621:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Collateral_$10118_storage_$dyn_storage_ptr",
                      "typeString": "struct Collateral[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59955,
                  "src": "24650:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24650:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24580:83:98"
            },
            "returnParameters": {
              "id": 59947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59946,
                  "mutability": "mutable",
                  "name": "bidId",
                  "nameLocation": "24699:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 59955,
                  "src": "24691:13:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24691:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24690:15:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59978,
            "nodeType": "FunctionDefinition",
            "src": "24786:287:98",
            "nodes": [],
            "body": {
              "id": 59977,
              "nodeType": "Block",
              "src": "24857:216:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59965,
                      "name": "acceptBidWasCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58467,
                      "src": "24867:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 59966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24888:4:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "24867:25:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59968,
                  "nodeType": "ExpressionStatement",
                  "src": "24867:25:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59970,
                        "name": "submitBidWithCollateralWasCalled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58471,
                        "src": "24925:32:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 59971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24971:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "5375626d697420626964206d7573742062652063616c6c6564206265666f72652061636365707420626964",
                        "id": 59972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24989:45:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19f1d417cbffa176d91069465b68902aef99a32f3e62e2edf70707c647ce6e92",
                          "typeString": "literal_string \"Submit bid must be called before accept bid\""
                        },
                        "value": "Submit bid must be called before accept bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19f1d417cbffa176d91069465b68902aef99a32f3e62e2edf70707c647ce6e92",
                          "typeString": "literal_string \"Submit bid must be called before accept bid\""
                        }
                      ],
                      "id": 59969,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15508,
                        15533,
                        15546,
                        15562,
                        15604,
                        15646,
                        15688,
                        15725,
                        15762,
                        15799,
                        13851,
                        13876,
                        13906,
                        13931,
                        13990,
                        14015,
                        14045,
                        14070,
                        15170,
                        15205
                      ],
                      "referencedDeclaration": 15533,
                      "src": "24903:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 59973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24903:141:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59974,
                  "nodeType": "ExpressionStatement",
                  "src": "24903:141:98"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 59975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "25062:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 59964,
                  "id": 59976,
                  "nodeType": "Return",
                  "src": "25055:11:98"
                }
              ]
            },
            "baseFunctions": [
              8535
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_acceptBid",
            "nameLocation": "24795:10:98",
            "overrides": {
              "id": 59961,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24833:8:98"
            },
            "parameters": {
              "id": 59960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59978,
                  "src": "24806:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24806:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59959,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59978,
                  "src": "24815:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24815:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24805:18:98"
            },
            "returnParameters": {
              "id": 59964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59963,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59978,
                  "src": "24851:4:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59962,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24851:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24850:6:98"
            },
            "scope": 59979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 58431,
              "name": "Testable",
              "nameLocations": [
                "683:8:98"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63558,
              "src": "683:8:98"
            },
            "id": 58432,
            "nodeType": "InheritanceSpecifier",
            "src": "683:8:98"
          },
          {
            "baseName": {
              "id": 58433,
              "name": "LenderCommitmentForwarder",
              "nameLocations": [
                "693:25:98"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2990,
              "src": "693:25:98"
            },
            "id": 58434,
            "nodeType": "InheritanceSpecifier",
            "src": "693:25:98"
          }
        ],
        "canonicalName": "LenderCommitmentForwarder_Test",
        "contractDependencies": [
          12808,
          60094,
          60154,
          64986
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          59979,
          2990,
          8541,
          41868,
          39742,
          63558,
          65029,
          15377,
          15374,
          21640,
          18584,
          18195,
          65693,
          16623,
          15317
        ],
        "name": "LenderCommitmentForwarder_Test",
        "nameLocation": "649:30:98",
        "scope": 60155,
        "usedErrors": [
          2247,
          2253
        ]
      },
      {
        "id": 60094,
        "nodeType": "ContractDefinition",
        "src": "25077:1840:98",
        "nodes": [
          {
            "id": 59984,
            "nodeType": "VariableDeclaration",
            "src": "25121:62:98",
            "nodes": [],
            "constant": false,
            "functionSelector": "201ee11e",
            "mutability": "immutable",
            "name": "commitmentForwarder",
            "nameLocation": "25164:19:98",
            "scope": 60094,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
              "typeString": "contract LenderCommitmentForwarder"
            },
            "typeName": {
              "id": 59983,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59982,
                "name": "LenderCommitmentForwarder",
                "nameLocations": [
                  "25121:25:98"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2990,
                "src": "25121:25:98"
              },
              "referencedDeclaration": 2990,
              "src": "25121:25:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                "typeString": "contract LenderCommitmentForwarder"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60000,
            "nodeType": "FunctionDefinition",
            "src": "25190:176:98",
            "nodes": [],
            "body": {
              "id": 59999,
              "nodeType": "Block",
              "src": "25307:59:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59995,
                      "name": "commitmentForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59984,
                      "src": "25317:19:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                        "typeString": "contract LenderCommitmentForwarder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59996,
                      "name": "_commitmentForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59989,
                      "src": "25339:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                        "typeString": "contract LenderCommitmentForwarder"
                      }
                    },
                    "src": "25317:42:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                      "typeString": "contract LenderCommitmentForwarder"
                    }
                  },
                  "id": 59998,
                  "nodeType": "ExpressionStatement",
                  "src": "25317:42:98"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 59992,
                    "name": "_tellerV2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59986,
                    "src": "25296:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 59993,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 59991,
                  "name": "User",
                  "nameLocations": [
                    "25291:4:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63548,
                  "src": "25291:4:98"
                },
                "nodeType": "ModifierInvocation",
                "src": "25291:15:98"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 59990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59986,
                  "mutability": "mutable",
                  "name": "_tellerV2",
                  "nameLocation": "25219:9:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60000,
                  "src": "25211:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25211:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59989,
                  "mutability": "mutable",
                  "name": "_commitmentForwarder",
                  "nameLocation": "25264:20:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60000,
                  "src": "25238:46:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                    "typeString": "contract LenderCommitmentForwarder"
                  },
                  "typeName": {
                    "id": 59988,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59987,
                      "name": "LenderCommitmentForwarder",
                      "nameLocations": [
                        "25238:25:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2990,
                      "src": "25238:25:98"
                    },
                    "referencedDeclaration": 2990,
                    "src": "25238:25:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                      "typeString": "contract LenderCommitmentForwarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25201:89:98"
            },
            "returnParameters": {
              "id": 59994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25307:0:98"
            },
            "scope": 60094,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60018,
            "nodeType": "FunctionDefinition",
            "src": "25372:325:98",
            "nodes": [],
            "body": {
              "id": 60017,
              "nodeType": "Block",
              "src": "25545:152:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60013,
                        "name": "_commitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60003,
                        "src": "25628:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_calldata_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment calldata"
                        }
                      },
                      {
                        "id": 60014,
                        "name": "borrowerAddressList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60006,
                        "src": "25657:19:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Commitment_$2182_calldata_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 60011,
                        "name": "commitmentForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59984,
                        "src": "25574:19:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                          "typeString": "contract LenderCommitmentForwarder"
                        }
                      },
                      "id": 60012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25594:16:98",
                      "memberName": "createCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2397,
                      "src": "25574:36:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Commitment_$2182_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct LenderCommitmentForwarder.Commitment memory,address[] memory) external returns (uint256)"
                      }
                    },
                    "id": 60015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25574:116:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 60010,
                  "id": 60016,
                  "nodeType": "Return",
                  "src": "25555:135:98"
                }
              ]
            },
            "functionSelector": "10d18eff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createCommitment",
            "nameLocation": "25381:17:98",
            "parameters": {
              "id": 60007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60003,
                  "mutability": "mutable",
                  "name": "_commitment",
                  "nameLocation": "25454:11:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60018,
                  "src": "25408:57:98",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Commitment_$2182_calldata_ptr",
                    "typeString": "struct LenderCommitmentForwarder.Commitment"
                  },
                  "typeName": {
                    "id": 60002,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60001,
                      "name": "LenderCommitmentForwarder.Commitment",
                      "nameLocations": [
                        "25408:25:98",
                        "25434:10:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2182,
                      "src": "25408:36:98"
                    },
                    "referencedDeclaration": 2182,
                    "src": "25408:36:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60006,
                  "mutability": "mutable",
                  "name": "borrowerAddressList",
                  "nameLocation": "25494:19:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60018,
                  "src": "25475:38:98",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60004,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "25475:7:98",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 60005,
                    "nodeType": "ArrayTypeName",
                    "src": "25475:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25398:121:98"
            },
            "returnParameters": {
              "id": 60010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60018,
                  "src": "25536:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25536:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25535:9:98"
            },
            "scope": 60094,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60034,
            "nodeType": "FunctionDefinition",
            "src": "25703:217:98",
            "nodes": [],
            "body": {
              "id": 60033,
              "nodeType": "Block",
              "src": "25840:80:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60029,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60020,
                        "src": "25887:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60030,
                        "name": "_commitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60023,
                        "src": "25901:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$2182_calldata_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Commitment_$2182_calldata_ptr",
                          "typeString": "struct LenderCommitmentForwarder.Commitment calldata"
                        }
                      ],
                      "expression": {
                        "id": 60026,
                        "name": "commitmentForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59984,
                        "src": "25850:19:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                          "typeString": "contract LenderCommitmentForwarder"
                        }
                      },
                      "id": 60028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25870:16:98",
                      "memberName": "updateCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2456,
                      "src": "25850:36:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Commitment_$2182_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct LenderCommitmentForwarder.Commitment memory) external"
                      }
                    },
                    "id": 60031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25850:63:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60032,
                  "nodeType": "ExpressionStatement",
                  "src": "25850:63:98"
                }
              ]
            },
            "functionSelector": "40b578d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateCommitment",
            "nameLocation": "25712:17:98",
            "parameters": {
              "id": 60024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60020,
                  "mutability": "mutable",
                  "name": "commitmentId",
                  "nameLocation": "25747:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60034,
                  "src": "25739:20:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25739:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60023,
                  "mutability": "mutable",
                  "name": "_commitment",
                  "nameLocation": "25815:11:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60034,
                  "src": "25769:57:98",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Commitment_$2182_calldata_ptr",
                    "typeString": "struct LenderCommitmentForwarder.Commitment"
                  },
                  "typeName": {
                    "id": 60022,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60021,
                      "name": "LenderCommitmentForwarder.Commitment",
                      "nameLocations": [
                        "25769:25:98",
                        "25795:10:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2182,
                      "src": "25769:36:98"
                    },
                    "referencedDeclaration": 2182,
                    "src": "25769:36:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Commitment_$2182_storage_ptr",
                      "typeString": "struct LenderCommitmentForwarder.Commitment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25729:103:98"
            },
            "returnParameters": {
              "id": 60025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25840:0:98"
            },
            "scope": 60094,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60050,
            "nodeType": "FunctionDefinition",
            "src": "25926:258:98",
            "nodes": [],
            "body": {
              "id": 60049,
              "nodeType": "Block",
              "src": "26053:131:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60045,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60036,
                        "src": "26122:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60046,
                        "name": "borrowerAddressList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60039,
                        "src": "26148:19:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 60042,
                        "name": "commitmentForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59984,
                        "src": "26063:19:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                          "typeString": "contract LenderCommitmentForwarder"
                        }
                      },
                      "id": 60044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26083:25:98",
                      "memberName": "updateCommitmentBorrowers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2483,
                      "src": "26063:45:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address[] memory) external"
                      }
                    },
                    "id": 60047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26063:114:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60048,
                  "nodeType": "ExpressionStatement",
                  "src": "26063:114:98"
                }
              ]
            },
            "functionSelector": "1e69a79c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateCommitmentBorrowers",
            "nameLocation": "25935:26:98",
            "parameters": {
              "id": 60040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60036,
                  "mutability": "mutable",
                  "name": "commitmentId",
                  "nameLocation": "25979:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60050,
                  "src": "25971:20:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25971:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60039,
                  "mutability": "mutable",
                  "name": "borrowerAddressList",
                  "nameLocation": "26020:19:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60050,
                  "src": "26001:38:98",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60037,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "26001:7:98",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 60038,
                    "nodeType": "ArrayTypeName",
                    "src": "26001:9:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25961:84:98"
            },
            "returnParameters": {
              "id": 60041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26053:0:98"
            },
            "scope": 60094,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60081,
            "nodeType": "FunctionDefinition",
            "src": "26190:594:98",
            "nodes": [],
            "body": {
              "id": 60080,
              "nodeType": "Block",
              "src": "26472:312:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60071,
                        "name": "commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60052,
                        "src": "26555:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60072,
                        "name": "principal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60054,
                        "src": "26585:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60073,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60056,
                        "src": "26612:16:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60074,
                        "name": "collateralTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60058,
                        "src": "26646:17:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60075,
                        "name": "collateralTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60060,
                        "src": "26681:22:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60076,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60062,
                        "src": "26721:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 60077,
                        "name": "loanDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60064,
                        "src": "26751:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 60069,
                        "name": "commitmentForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59984,
                        "src": "26501:19:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                          "typeString": "contract LenderCommitmentForwarder"
                        }
                      },
                      "id": 60070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26521:16:98",
                      "memberName": "acceptCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2748,
                      "src": "26501:36:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint16,uint32) external returns (uint256)"
                      }
                    },
                    "id": 60078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26501:276:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 60068,
                  "id": 60079,
                  "nodeType": "Return",
                  "src": "26482:295:98"
                }
              ]
            },
            "functionSelector": "0d51d53c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_acceptCommitment",
            "nameLocation": "26199:17:98",
            "parameters": {
              "id": 60065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60052,
                  "mutability": "mutable",
                  "name": "commitmentId",
                  "nameLocation": "26234:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60081,
                  "src": "26226:20:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26226:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60054,
                  "mutability": "mutable",
                  "name": "principal",
                  "nameLocation": "26264:9:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60081,
                  "src": "26256:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26256:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60056,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "26291:16:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60081,
                  "src": "26283:24:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26283:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60058,
                  "mutability": "mutable",
                  "name": "collateralTokenId",
                  "nameLocation": "26325:17:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60081,
                  "src": "26317:25:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26317:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60060,
                  "mutability": "mutable",
                  "name": "collateralTokenAddress",
                  "nameLocation": "26360:22:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60081,
                  "src": "26352:30:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26352:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60062,
                  "mutability": "mutable",
                  "name": "interestRate",
                  "nameLocation": "26399:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60081,
                  "src": "26392:19:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 60061,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "26392:6:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60064,
                  "mutability": "mutable",
                  "name": "loanDuration",
                  "nameLocation": "26428:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60081,
                  "src": "26421:19:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 60063,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26421:6:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26216:230:98"
            },
            "returnParameters": {
              "id": 60068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60081,
                  "src": "26463:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26463:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26462:9:98"
            },
            "scope": 60094,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60093,
            "nodeType": "FunctionDefinition",
            "src": "26790:125:98",
            "nodes": [],
            "body": {
              "id": 60092,
              "nodeType": "Block",
              "src": "26847:68:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60089,
                        "name": "_commitmentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60083,
                        "src": "26894:13:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60086,
                        "name": "commitmentForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59984,
                        "src": "26857:19:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LenderCommitmentForwarder_$2990",
                          "typeString": "contract LenderCommitmentForwarder"
                        }
                      },
                      "id": 60088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26877:16:98",
                      "memberName": "deleteCommitment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2539,
                      "src": "26857:36:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 60090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26857:51:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60091,
                  "nodeType": "ExpressionStatement",
                  "src": "26857:51:98"
                }
              ]
            },
            "functionSelector": "2b1cf2cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deleteCommitment",
            "nameLocation": "26799:17:98",
            "parameters": {
              "id": 60084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60083,
                  "mutability": "mutable",
                  "name": "_commitmentId",
                  "nameLocation": "26825:13:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60093,
                  "src": "26817:21:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26817:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26816:23:98"
            },
            "returnParameters": {
              "id": 60085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26847:0:98"
            },
            "scope": 60094,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59980,
              "name": "User",
              "nameLocations": [
                "25110:4:98"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63548,
              "src": "25110:4:98"
            },
            "id": 59981,
            "nodeType": "InheritanceSpecifier",
            "src": "25110:4:98"
          }
        ],
        "canonicalName": "LenderCommitmentUser",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          60094,
          63548
        ],
        "name": "LenderCommitmentUser",
        "nameLocation": "25086:20:98",
        "scope": 60155,
        "usedErrors": []
      },
      {
        "id": 60154,
        "nodeType": "ContractDefinition",
        "src": "26945:647:98",
        "nodes": [
          {
            "id": 60106,
            "nodeType": "FunctionDefinition",
            "src": "27022:44:98",
            "nodes": [],
            "body": {
              "id": 60105,
              "nodeType": "Block",
              "src": "27064:2:98",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 60101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27060:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 60100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "27052:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 60099,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "27052:7:98",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 60102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27052:10:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 60103,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 60098,
                  "name": "TellerV2Context",
                  "nameLocations": [
                    "27036:15:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8306,
                  "src": "27036:15:98"
                },
                "nodeType": "ModifierInvocation",
                "src": "27036:27:98"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 60097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27033:2:98"
            },
            "returnParameters": {
              "id": 60104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27064:0:98"
            },
            "scope": 60154,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60129,
            "nodeType": "FunctionDefinition",
            "src": "27072:181:98",
            "nodes": [],
            "body": {
              "id": 60128,
              "nodeType": "Block",
              "src": "27126:127:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60112,
                      "name": "marketRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8638,
                      "src": "27136:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMarketRegistry_$9813",
                        "typeString": "contract IMarketRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 60121,
                                      "name": "_marketOwner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60109,
                                      "src": "27221:12:98",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_User_$63548",
                                        "typeString": "contract User"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_User_$63548",
                                        "typeString": "contract User"
                                      }
                                    ],
                                    "id": 60120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "27213:7:98",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 60119,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "27213:7:98",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 60122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "27213:21:98",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 60118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "27190:22:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MarketRegistryMock_$12808_$",
                                  "typeString": "function (address) returns (contract MarketRegistryMock)"
                                },
                                "typeName": {
                                  "id": 60117,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 60116,
                                    "name": "MarketRegistryMock",
                                    "nameLocations": [
                                      "27194:18:98"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 12808,
                                    "src": "27194:18:98"
                                  },
                                  "referencedDeclaration": 12808,
                                  "src": "27194:18:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                                    "typeString": "contract MarketRegistryMock"
                                  }
                                }
                              },
                              "id": 60123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27190:45:98",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                                "typeString": "contract MarketRegistryMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MarketRegistryMock_$12808",
                                "typeString": "contract MarketRegistryMock"
                              }
                            ],
                            "id": 60115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "27182:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 60114,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "27182:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 60124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27182:54:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60113,
                        "name": "IMarketRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9813,
                        "src": "27153:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMarketRegistry_$9813_$",
                          "typeString": "type(contract IMarketRegistry)"
                        }
                      },
                      "id": 60125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27153:93:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMarketRegistry_$9813",
                        "typeString": "contract IMarketRegistry"
                      }
                    },
                    "src": "27136:110:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMarketRegistry_$9813",
                      "typeString": "contract IMarketRegistry"
                    }
                  },
                  "id": 60127,
                  "nodeType": "ExpressionStatement",
                  "src": "27136:110:98"
                }
              ]
            },
            "functionSelector": "f404df8f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__setMarketOwner",
            "nameLocation": "27081:16:98",
            "parameters": {
              "id": 60110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60109,
                  "mutability": "mutable",
                  "name": "_marketOwner",
                  "nameLocation": "27103:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60129,
                  "src": "27098:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_User_$63548",
                    "typeString": "contract User"
                  },
                  "typeName": {
                    "id": 60108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60107,
                      "name": "User",
                      "nameLocations": [
                        "27098:4:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63548,
                      "src": "27098:4:98"
                    },
                    "referencedDeclaration": 63548,
                    "src": "27098:4:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$63548",
                      "typeString": "contract User"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27097:19:98"
            },
            "returnParameters": {
              "id": 60111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27126:0:98"
            },
            "scope": 60154,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60141,
            "nodeType": "FunctionDefinition",
            "src": "27259:161:98",
            "nodes": [],
            "body": {
              "id": 60140,
              "nodeType": "Block",
              "src": "27366:54:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60137,
                        "name": "_marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60131,
                        "src": "27403:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60136,
                      "name": "_msgSenderForMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8276,
                      "src": "27383:19:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 60138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27383:30:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 60135,
                  "id": 60139,
                  "nodeType": "Return",
                  "src": "27376:37:98"
                }
              ]
            },
            "functionSelector": "c1576c8a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSenderForMarket",
            "nameLocation": "27268:18:98",
            "parameters": {
              "id": 60132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60131,
                  "mutability": "mutable",
                  "name": "_marketId",
                  "nameLocation": "27295:9:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60141,
                  "src": "27287:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27287:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27286:19:98"
            },
            "returnParameters": {
              "id": 60135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60141,
                  "src": "27353:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27353:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27352:9:98"
            },
            "scope": 60154,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60153,
            "nodeType": "FunctionDefinition",
            "src": "27426:164:98",
            "nodes": [],
            "body": {
              "id": 60152,
              "nodeType": "Block",
              "src": "27538:52:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60149,
                        "name": "_marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60143,
                        "src": "27573:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60148,
                      "name": "_msgDataForMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8305,
                      "src": "27555:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function (uint256) view returns (bytes calldata)"
                      }
                    },
                    "id": 60150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27555:28:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 60147,
                  "id": 60151,
                  "nodeType": "Return",
                  "src": "27548:35:98"
                }
              ]
            },
            "functionSelector": "77353aba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDataForMarket",
            "nameLocation": "27435:16:98",
            "parameters": {
              "id": 60144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60143,
                  "mutability": "mutable",
                  "name": "_marketId",
                  "nameLocation": "27460:9:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 60153,
                  "src": "27452:17:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27452:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27451:19:98"
            },
            "returnParameters": {
              "id": 60147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60153,
                  "src": "27518:14:98",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60145,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "27518:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27517:16:98"
            },
            "scope": 60154,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 60095,
              "name": "TellerV2Context",
              "nameLocations": [
                "27000:15:98"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8306,
              "src": "27000:15:98"
            },
            "id": 60096,
            "nodeType": "InheritanceSpecifier",
            "src": "27000:15:98"
          }
        ],
        "canonicalName": "LenderCommitmentForwarderTest_TellerV2Mock",
        "contractDependencies": [
          12808
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          60154,
          8306,
          8708,
          8705,
          8694,
          8688,
          8683,
          8671,
          2134,
          41868,
          39742
        ],
        "name": "LenderCommitmentForwarderTest_TellerV2Mock",
        "nameLocation": "26954:42:98",
        "scope": 60155,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 98
}