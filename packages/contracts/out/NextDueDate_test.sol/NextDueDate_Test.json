{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "action",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "ActionNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minimumOwed",
          "type": "uint256"
        }
      ],
      "name": "PaymentNotMinimum",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lender",
          "type": "address"
        }
      ],
      "name": "AcceptedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        }
      ],
      "name": "CancelledBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "feeType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FeePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "LoanLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        }
      ],
      "name": "LoanRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        }
      ],
      "name": "LoanRepayment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "marketId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "MarketForwarderApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        }
      ],
      "name": "MarketOwnerCancelledBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "newFee",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "oldFee",
          "type": "uint16"
        }
      ],
      "name": "ProtocolFeeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bidId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "metadataURI",
          "type": "bytes32"
        }
      ],
      "name": "SubmittedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "marketId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "TrustedMarketForwarderSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CURRENT_CODE_VERSION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_lenderVolumeFilled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_totalVolumeFilled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lendingToken",
          "type": "address"
        }
      ],
      "name": "addLendingToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_forwarder",
          "type": "address"
        }
      ],
      "name": "approveMarketForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bidDefaultDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bidExpirationTime",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bidId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bidPaymentCycleType",
      "outputs": [
        {
          "internalType": "enum PaymentCycleType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bids",
      "outputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "marketplaceId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_metadataURI",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "contract ERC20",
              "name": "lendingToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "principal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "interest",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Payment",
              "name": "totalRepaid",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "timestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "acceptedTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "lastRepaidTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "loanDuration",
              "type": "uint32"
            }
          ],
          "internalType": "struct LoanDetails",
          "name": "loanDetails",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "paymentCycleAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "paymentCycle",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "APR",
              "type": "uint16"
            }
          ],
          "internalType": "struct Terms",
          "name": "terms",
          "type": "tuple"
        },
        {
          "internalType": "enum BidState",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "enum PaymentType",
          "name": "paymentType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowerBids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "calculateAmountDue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interest",
              "type": "uint256"
            }
          ],
          "internalType": "struct Payment",
          "name": "due",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "calculateAmountDue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interest",
              "type": "uint256"
            }
          ],
          "internalType": "struct Payment",
          "name": "due",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "calculateAmountOwed",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interest",
              "type": "uint256"
            }
          ],
          "internalType": "struct Payment",
          "name": "owed",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "calculateAmountOwed",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interest",
              "type": "uint256"
            }
          ],
          "internalType": "struct Payment",
          "name": "owed",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "calculateNextDueDate",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "dueDate_",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "cancelBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "claimLoanNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralManager",
      "outputs": [
        {
          "internalType": "contract ICollateralManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "getBidState",
      "outputs": [
        {
          "internalType": "enum BidState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "getBorrowerActiveLoanIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "getBorrowerLoanIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLendingTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "getLoanBorrower",
      "outputs": [
        {
          "internalType": "address",
          "name": "borrower_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "getLoanLender",
      "outputs": [
        {
          "internalType": "address",
          "name": "lender_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "getLoanLendingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "getLoanMarketId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "getMetadataURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "metadataURI_",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_forwarder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "hasApprovedMarketForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolFee",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_marketRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reputationManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lenderCommitmentForwarder",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_lendingTokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_collateralManagerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lenderManager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "isLoanDefaulted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "isLoanExpired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "isPaymentLate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_trustedMarketForwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedMarketForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "lastRepaidTimestamp",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "lenderAcceptBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToProtocol",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountToMarketplace",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountToBorrower",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lenderCommitmentForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lenderManager",
      "outputs": [
        {
          "internalType": "contract ILenderManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lenderVolumeFilled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "liquidateLoanFull",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "marketOwnerCancelBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketRegistry",
      "outputs": [
        {
          "internalType": "contract IMarketRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lenderManager",
          "type": "address"
        }
      ],
      "name": "onUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lendingToken",
          "type": "address"
        }
      ],
      "name": "removeLendingToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repayLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "repayLoanFull",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidId",
          "type": "uint256"
        }
      ],
      "name": "repayLoanMinimum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reputationManager",
      "outputs": [
        {
          "internalType": "contract IReputationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "newFee",
          "type": "uint16"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reputationManager",
          "type": "address"
        }
      ],
      "name": "setReputationManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_forwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedMarketForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lendingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_marketplaceId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_principal",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_duration",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "_APR",
          "type": "uint16"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "submitBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bidId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lendingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_marketplaceId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_principal",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_duration",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "_APR",
          "type": "uint16"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum CollateralType",
              "name": "_collateralType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_collateralAddress",
              "type": "address"
            }
          ],
          "internalType": "struct Collateral[]",
          "name": "_collateralInfo",
          "type": "tuple[]"
        }
      ],
      "name": "submitBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bidId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_01_nextDueDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_02_nextDueDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_03_nextDueDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_04_nextDueDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalVolumeFilled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uris",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "121:2322:102:-:0;;;1572:26:37;;;-1:-1:-1;;1572:26:37;1594:4;1572:26;;;3028:24:14;;191:302:102;;;;;;;;;-1:-1:-1;222:1:102;748:36:3;;;;266:7:102::1;236:27:::0;:37;295:30;:45;;-1:-1:-1;;;;295:45:102::1;::::0;::::1;::::0;;361:24;:34;;-1:-1:-1;;416:21:102;;;;;455:11;:31;;469:17:::1;-1:-1:-1::0;;455:31:102;;::::1;;::::0;;121:2322;;222:1;121:2322;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10031:498;;;;;;;;;;-1:-1:-1;10031:498:10;;;;;:::i;:::-;;:::i;:::-;;;3035:25:121;;;3023:2;3008:18;10031:498:10;2889:177:121;3994:73:14;;;;;;;;;;-1:-1:-1;3994:73:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;31076:220:10;;;;;;;;;;-1:-1:-1;31076:220:10;;;;;:::i;:::-;;:::i;:::-;;;3814:14:121;;3807:22;3789:41;;3777:2;3762:18;31076:220:10;3649:187:121;918:402:102;;;;;;;;;;;;;:::i;:::-;;26692:548:10;;;;;;;;;;-1:-1:-1;26692:548:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;32613:340::-;;;;;;;;;;-1:-1:-1;32613:340:10;;;;;:::i;:::-;;:::i;4315:38:14:-;;;;;;;;;;-1:-1:-1;4315:38:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3836:51::-;;;;;;;;;;-1:-1:-1;3836:51:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5527:10:121;5515:23;;;5497:42;;5485:2;5470:18;3836:51:14;5353:192:121;3408:33:14;;;;;;;;;;;;;;;;2254:381:12;;;;;;;;;;-1:-1:-1;2254:381:12;;;;;:::i;:::-;;:::i;35115:184:10:-;;;;;;;;;;-1:-1:-1;35115:184:10;;;;;:::i;:::-;35207:14;35254:12;;;:4;:12;;;;;:24;;:37;-1:-1:-1;;;;;35254:37:10;;35115:184;;;;-1:-1:-1;;;;;6034:32:121;;;6016:51;;6004:2;5989:18;35115:184:10;5870:203:121;19091:588:10;;;;;;;;;;-1:-1:-1;19091:588:10;;;;;:::i;:::-;;:::i;1682:305:12:-;;;;;;;;;;-1:-1:-1;1682:305:12;;;;;:::i;:::-;;:::i;32271:163:10:-;;;;;;;;;;-1:-1:-1;32271:163:10;;;;;:::i;:::-;;:::i;15224:463::-;;;;;;;;;;-1:-1:-1;15224:463:10;;;;;:::i;:::-;;:::i;33344:116::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4851:43:14:-;;;;;;;;;;-1:-1:-1;4851:43:14;;;;-1:-1:-1;;;;;4851:43:14;;;4149:52;;;;;;;;;;-1:-1:-1;4149:52:14;;;;;:::i;:::-;;;;;;;;;;;;;;2937:382:12;;;;;;;;;;-1:-1:-1;2937:382:12;;;;;:::i;:::-;;:::i;1326:399:102:-;;;;;;;;;;;;;:::i;5106:63:14:-;;;;;;;;;;-1:-1:-1;5106:63:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;3195:49::-;;;;;;;;;;-1:-1:-1;3195:49:14;;;;;:::i;:::-;;:::i;34365:159:10:-;;;;;;;;;;-1:-1:-1;34365:159:10;;;;;:::i;:::-;34451:17;34496:12;;;:4;:12;;;;;:21;-1:-1:-1;;;;;34496:21:10;;34365:159;35305:166;;;;;;;;;;-1:-1:-1;35305:166:10;;;;;:::i;:::-;35393:17;35438:12;;;:4;:12;;;;;:26;;;;35305:166;5292:46;;;;;;;;;;;;5337:1;5292:46;;;;;8444:4:121;8432:17;;;8414:36;;8402:2;8387:18;5292:46:10;8272:184:121;499:413:102;;;;;;;;;;;;;:::i;3103:35:14:-;;;;;;;;;;-1:-1:-1;3103:35:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3103:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3103:35:14;;;;;;;;;-1:-1:-1;;;3103:35:14;;;;;;;;-1:-1:-1;;;3103:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5010:::-;;;;;;;;;;-1:-1:-1;5010:35:14;;;;-1:-1:-1;;;;;5010:35:14;;;4208:22;;;;;;;;;;;;;;;;9237:150:10;;;;;;;;;;-1:-1:-1;9237:150:10;;;;;:::i;:::-;;:::i;797:172:3:-;;;;;;;;;;-1:-1:-1;797:172:3;;;;;:::i;:::-;945:17;-1:-1:-1;;;;;932:30:3;;;;;;;797:172;1858:84:53;;;;;;;;;;-1:-1:-1;1928:7:53;;;;;;;1858:84;;28152:550:10;;;;;;;;;;-1:-1:-1;28152:550:10;;;;;:::i;:::-;;:::i;3778:52:14:-;;;;;;;;;;-1:-1:-1;3778:52:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;3601:43;;;;;;;;;;-1:-1:-1;3601:43:14;;;;-1:-1:-1;;;;;3601:43:14;;;25930:488:10;;;;;;;;;;-1:-1:-1;25930:488:10;;;;;:::i;:::-;;:::i;28830:2108::-;;;;;;;;;;-1:-1:-1;28830:2108:10;;;;;:::i;:::-;;:::i;2071:101:50:-;;;;;;;;;;;;;:::i;11251:784:10:-;;;;;;;;;;-1:-1:-1;11251:784:10;;;;;:::i;:::-;;:::i;22793:931::-;;;;;;;;;;-1:-1:-1;22793:931:10;;;;;:::i;:::-;;:::i;21374:811::-;;;;;;;;;;-1:-1:-1;21374:811:10;;;;;:::i;:::-;;:::i;3028:24:14:-;;;;;;;;;;;;;;;;1441:85:50;;;;;;;;;;-1:-1:-1;1513:6:50;;-1:-1:-1;;;;;1513:6:50;1441:85;;14687:391:10;;;;;;;;;;-1:-1:-1;14687:391:10;;;;;:::i;:::-;;:::i;20579:511::-;;;;;;;;;;-1:-1:-1;20579:511:10;;;;;:::i;:::-;;:::i;34848:261::-;;;;;;;;;;-1:-1:-1;34848:261:10;;;;;:::i;:::-;;:::i;33106:146::-;;;;;;;;;;-1:-1:-1;33106:146:10;;;;;:::i;:::-;;:::i;34012:123::-;;;;;;;;;;-1:-1:-1;34012:123:10;;;;;:::i;:::-;;:::i;16227:2858::-;;;;;;;;;;-1:-1:-1;16227:2858:10;;;;;:::i;:::-;;:::i;:::-;;;;12894:25:121;;;12950:2;12935:18;;12928:34;;;;12978:18;;;12971:34;12882:2;12867:18;16227:2858:10;12692:319:121;1023:96:8;;;;;;;;;;-1:-1:-1;1100:12:8;;1023:96;;1100:12;;;;13160:38:121;;13148:2;13133:18;1023:96:8;13016:188:121;3295:54:14;;;;;;;;;;-1:-1:-1;3295:54:14;;;;;:::i;:::-;;;;;;;;;;;;;;6168:1002:10;;;;;;;;;;-1:-1:-1;6168:1002:10;;;;;:::i;:::-;;:::i;1819:584:37:-;;;;;;;;;;;;;:::i;4741:40:14:-;;;;;;;;;;-1:-1:-1;4741:40:14;;;;-1:-1:-1;;;;;4741:40:14;;;8400:664:10;;;;;;;;;;-1:-1:-1;8400:664:10;;;;;:::i;:::-;;:::i;31900:157::-;;;;;;;;;;-1:-1:-1;31900:157:10;;;;;:::i;:::-;32001:8;32032:12;;;:4;:12;;;;;:18;;;;;;31900:157;;;;;;;;:::i;19855:566::-;;;;;;;;;;-1:-1:-1;19855:566:10;;;;;:::i;:::-;;:::i;33636:197::-;;;;;;;;;;-1:-1:-1;33636:197:10;;;;;:::i;:::-;;:::i;1055:301:12:-;;;;;;;;;;-1:-1:-1;1055:301:12;;;;;:::i;:::-;;:::i;27406:481:10:-;;;;;;;;;;-1:-1:-1;27406:481:10;;;;;:::i;:::-;;:::i;22296:89::-;;;;;;;;;;;;;:::i;1271:269:8:-;;;;;;;;;;-1:-1:-1;1271:269:8;;;;;:::i;:::-;;:::i;31434:460:10:-;;;;;;;;;;-1:-1:-1;31434:460:10;;;;;:::i;:::-;;:::i;3558:37:14:-;;;;;;;;;;-1:-1:-1;3558:37:14;;;;-1:-1:-1;;;;;3558:37:14;;;1731:518:102;;;;;;;;;;;;;:::i;2321:198:50:-;;;;;;;;;;-1:-1:-1;2321:198:50;;;;;:::i;:::-;;:::i;22503:90:10:-;;;;;;;;;;;;;:::i;7176:176::-;;;;;;;;;;-1:-1:-1;7176:176:10;;;;;:::i;:::-;;:::i;1572:26:37:-;;;;;;;;;;-1:-1:-1;1572:26:37;;;;;;;;32063:202:10;-1:-1:-1;;;;;32219:30:10;;;;;;:19;:30;;;;;32180:16;;32219:39;;:37;:39::i;:::-;32212:46;32063:202;-1:-1:-1;;32063:202:10:o;10031:498::-;10298:14;1482:19:53;:17;:19::i;:::-;10333:189:10::1;10357:13;10384:14;10412:10;10436:9;10459:4;10477:12;;10503:9;10333:10;:189::i;:::-;10324:198:::0;10031:498;-1:-1:-1;;;;;;;;;10031:498:10:o;31076:220::-;31145:4;31187:17;31165:12;;;;:4;:12;;;;;:18;;;;;:39;;;;;;;;:::i;:::-;;31161:57;;-1:-1:-1;31213:5:10;;31076:220;-1:-1:-1;31076:220:10:o;31161:57::-;31261:28;31282:6;31261:20;:28::i;:::-;31235:54;;31242:15;31235:54;;;31228:61;;31076:220;;;:::o;918:402:102:-;1024:37;1049:4;1055:1;1058:2;1024:24;:37::i;:::-;966:35;:105;;-1:-1:-1;;966:105:102;;-1:-1:-1;;;966:105:102;;;;;;;;;;;;;-1:-1:-1;;1081:7:102;;;:4;:7;;966:5;1081:15;;-1:-1:-1;;;;;;;;;;;1081:15:102;;-1:-1:-1;;;;;1081:15:102;;;-1:-1:-1;;;;;;1081:15:102;;;;;;;;-1:-1:-1;;;;;;;;;;;1081:15:102;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1081:15:102;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1081:15:102;;;-1:-1:-1;;;;;;;;;;;1081:15:102;966:17;1081:15;-1:-1:-1;;;;;;;;;;;1081:15:102;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1081:15:102;;;-1:-1:-1;;;;;;;;;;;1081:15:102;;;-1:-1:-1;;;;;;;;;;;1081:15:102;-1:-1:-1;;;;;;;;;;;1081:15:102;;;;;;;;;;;;-1:-1:-1;;1081:15:102;;;;;;;;;;;;;;;-1:-1:-1;;;;1081:15:102;-1:-1:-1;;;1081:15:102;;;;;;-1:-1:-1;;;;1081:15:102;;-1:-1:-1;;;1081:15:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1081:15:102;;;-1:-1:-1;;;;;;;;;;;1081:15:102;;;;;-1:-1:-1;;1081:15:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1081:15:102;;966:5;;1081:7;;:15;;;;;;;-1:-1:-1;;1081:15:102;;;966:17;1081:15;;;;;;;:::i;:::-;;;;;-1:-1:-1;1081:15:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;1081:15:102;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;1131:24:102;1106:22;;;;:19;:22;;-1:-1:-1;;;;;;;;;;;1106:49:102;;-1:-1:-1;;1106:49:102;;;;;;;:22;-1:-1:-1;1233:37:102;1258:4;1264:1;1267:2;1233:24;:37::i;:::-;1204:67;;1281:32;1300:12;1281:32;;:18;:32::i;:::-;956:364;918:402::o;26692:548:10:-;-1:-1:-1;;;;;;;;;;;;;;;;;26837:15:10;26855:12;;;:4;:12;;;;;26907:17;26894:9;;;;;;:30;;;;;;;;:::i;:::-;;;:93;;;-1:-1:-1;26940:33:10;;;;-1:-1:-1;;;26940:33:10;;;;-1:-1:-1;;26940:47:10;26894:93;26877:132;;;26998:11;;;26877:132;27021:21;27131:27;;;:19;:27;;;;;;27021:21;;27066:93;;27114:3;;27119:10;;27131:27;;27066:47;:93::i;:::-;27169:30;;;-1:-1:-1;27209:13:10;;;:24;-1:-1:-1;;;26692:548:10;;;;:::o;32613:340::-;32673:4;32707:12;;;:4;:12;;;;;32747:16;32734:9;;;;;;:29;;;;;;;;:::i;:::-;;32730:47;;-1:-1:-1;32772:5:10;;32613:340;-1:-1:-1;;32613:340:10:o;32730:47::-;32791:25;;;;:17;:25;;;;;;;;:30;;32787:48;;-1:-1:-1;32830:5:10;;32613:340;-1:-1:-1;;32613:340:10:o;32787:48::-;32920:25;;;;:17;:25;;;;;;32892;;;;:53;;32920:25;;;;;32892;:53;:::i;:::-;32854:91;;32861:15;32854:91;;;32846:100;;;32613:340;;;:::o;4315:38:14:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2254:381:12:-;2424:12;:10;:12::i;:::-;2380:14;;:40;;-1:-1:-1;;;2380:40:12;;;;;3035:25:121;;;-1:-1:-1;;;;;2380:56:12;;;;:14;;;;:29;;3008:18:121;;2380:40:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2380:56:12;;2359:134;;;;-1:-1:-1;;;2359:134:12;;16382:2:121;2359:134:12;;;16364:21:121;16421:2;16401:18;;;16394:30;16460:33;16440:18;;;16433:61;16511:18;;2359:134:12;;;;;;;;;2503:35;;;;:24;:35;;;;;:48;;-1:-1:-1;;;;;;2503:48:12;-1:-1:-1;;;;;2503:48:12;;;;;:35;2566:62;2503:48;2615:12;:10;:12::i;:::-;2566:62;;;-1:-1:-1;;;;;16770:15:121;;;16752:34;;16822:15;;;;16817:2;16802:18;;16795:43;16687:18;2566:62:12;;;;;;;2254:381;;:::o;19091:588:10:-;5030:224;;;;;;;;;;;;-1:-1:-1;;;5030:224:10;;;;19167:6;;5127:17;5105:12;;;;:4;:12;;;;;:18;;;;;:39;;;;;;;;:::i;:::-;;5101:135;;5184:6;5192:7;5167:58;;-1:-1:-1;;;5167:58:10;;;;;;;;;:::i;5101:135::-;1482:19:53::1;:17;:19::i;:::-;19251:15:10::2;19269:12:::0;;;:4:::2;:12;::::0;;;;19329:17:::2;::::0;::::2;::::0;19269:12;;19251:15;19309:38:::2;::::0;:19:::2;:38::i;:::-;19375:10;::::0;::::2;::::0;19292:55;;-1:-1:-1;;;;;;19365:20:10;;::::2;19375:10:::0;::::2;19365:20;19357:58;;;::::0;-1:-1:-1;;;19357:58:10;;17629:2:121;19357:58:10::2;::::0;::::2;17611:21:121::0;17668:2;17648:18;;;17641:30;17707:27;17687:18;;;17680:55;17752:18;;19357:58:10::2;17427:349:121::0;19357:58:10::2;19472:13;::::0;:42:::2;::::0;-1:-1:-1;;;19472:42:10;;::::2;::::0;::::2;17955:25:121::0;;;-1:-1:-1;;;;;18016:32:121;;;17996:18;;;17989:60;19472:13:10;;::::2;::::0;:26:::2;::::0;17928:18:121;;19472:42:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;19658:13:10::2;::::0;19637:10:::2;::::0;;::::2;:35:::0;;-1:-1:-1;;;;;;19637:35:10::2;-1:-1:-1::0;;;;;19658:13:10;;::::2;19637:35:::0;;;::::2;::::0;;;-1:-1:-1;;;;;;19091:588:10:o;1682:305:12:-;1826:4;1861:47;1886:9;1897:10;1861:24;:47::i;:::-;:119;;;;-1:-1:-1;;;;;;1924:37:12;;;;;;:25;:37;;;;;:56;;1971:8;1924:46;:56::i;:::-;1842:138;;1682:305;;;;;;:::o;32271:163:10:-;-1:-1:-1;;;;;32404:23:10;;;;;;:12;:23;;;;;;;;;32397:30;;;;;;;;;;;;;;;;;32365:16;;32397:30;;;32404:23;32397:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32271:163;;;:::o;15224:463::-;15334:14;;;15364:12;;;:4;:12;;;;;;;:26;;;15334:57;;-1:-1:-1;;;15334:57:10;;-1:-1:-1;;;;;15334:14:10;;;;:29;;:57;;;;3035:25:121;;;3023:2;3008:18;;2889:177;15334:57:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15306:85:10;:12;:10;:12::i;:::-;-1:-1:-1;;;;;15306:85:10;;15289:318;;15423:173;;-1:-1:-1;;;15423:173:10;;;;;18373:25:121;;;18434:2;18414:18;;;18407:30;18473:2;18453:18;;;18446:30;-1:-1:-1;;;18492:19:121;;;18485:51;18572:3;18552:18;;;18545:31;18613:2;18592:19;;;18585:31;18653:34;18632:19;;;18625:63;-1:-1:-1;;;18704:19:121;;;18697:32;18746:19;;15423:173:10;18060:711:121;15289:318:10;15616:18;15627:6;15616:10;:18::i;:::-;15649:31;;15673:6;;15649:31;;;;;15224:463;:::o;33344:116::-;33393:16;33428:25;:16;:23;:25::i;:::-;33421:32;;33344:116;:::o;2937:382:12:-;3060:47;3085:9;3096:10;3060:24;:47::i;:::-;3039:133;;;;-1:-1:-1;;;3039:133:12;;18978:2:121;3039:133:12;;;18960:21:121;19017:2;18997:18;;;18990:30;19056:34;19036:18;;;19029:62;-1:-1:-1;;;19107:18:121;;;19100:37;19154:19;;3039:133:12;18776:403:121;3039:133:12;3182:55;3224:12;:10;:12::i;:::-;-1:-1:-1;;;;;3182:37:12;;;;;;:25;:37;;;;;;:41;:55::i;:::-;;3287:10;-1:-1:-1;;;;;3252:60:12;3276:9;3252:60;3299:12;:10;:12::i;:::-;3252:60;;-1:-1:-1;;;;;6034:32:121;;;6016:51;;6004:2;5989:18;3252:60:12;;;;;;;2937:382;;:::o;1326:399:102:-;1432:36;1457:4;1463:1;1466;1432:24;:36::i;:::-;1374:35;:104;;-1:-1:-1;;1374:104:102;;-1:-1:-1;;;1374:104:102;;;;;;;;;;;;;-1:-1:-1;;1488:7:102;;;:4;:7;;1374:5;1488:15;;-1:-1:-1;;;;;;;;;;;1488:15:102;;-1:-1:-1;;;;;1488:15:102;;;-1:-1:-1;;;;;;1488:15:102;;;;;;;;-1:-1:-1;;;;;;;;;;;1488:15:102;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1488:15:102;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1488:15:102;;;-1:-1:-1;;;;;;;;;;;1488:15:102;1374:17;1488:15;-1:-1:-1;;;;;;;;;;;1488:15:102;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1488:15:102;;;-1:-1:-1;;;;;;;;;;;1488:15:102;;;-1:-1:-1;;;;;;;;;;;1488:15:102;-1:-1:-1;;;;;;;;;;;1488:15:102;;;;;;;;;;;;-1:-1:-1;;1488:15:102;;;;;;;;;;;;;;;-1:-1:-1;;;;1488:15:102;-1:-1:-1;;;1488:15:102;;;;;;-1:-1:-1;;;;1488:15:102;;-1:-1:-1;;;1488:15:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1488:15:102;;;-1:-1:-1;;;;;;;;;;;1488:15:102;;;;;-1:-1:-1;;1488:15:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1488:15:102;;1374:5;;1488:7;;:15;;;;;;;-1:-1:-1;;1488:15:102;;;1374:17;1488:15;;;;;;;:::i;:::-;;;;;-1:-1:-1;1488:15:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;1488:15:102;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;1538:24:102;1513:22;;;;:19;:22;;-1:-1:-1;;;;;;;;;;;1513:49:102;;-1:-1:-1;;1513:49:102;;;;;:22;-1:-1:-1;1639:36:102;;1664:4;;1670:1;;1639:24;:36::i;3195:49:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;499:413:102:-;605:37;630:4;636:1;639:2;605:24;:37::i;:::-;547:35;:118;;-1:-1:-1;;547:118:102;;-1:-1:-1;;;547:118:102;;;;;;;;;;;;;-1:-1:-1;;675:7:102;;;:4;:7;;547:5;675:15;;-1:-1:-1;;;;;;;;;;;675:15:102;;-1:-1:-1;;;;;675:15:102;;;-1:-1:-1;;;;;;675:15:102;;;;;;;;-1:-1:-1;;;;;;;;;;;675:15:102;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;675:15:102;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;675:15:102;;;-1:-1:-1;;;;;;;;;;;675:15:102;547:17;675:15;-1:-1:-1;;;;;;;;;;;675:15:102;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;675:15:102;;;-1:-1:-1;;;;;;;;;;;675:15:102;;;-1:-1:-1;;;;;;;;;;;675:15:102;-1:-1:-1;;;;;;;;;;;675:15:102;;;;;;;;;;;;-1:-1:-1;;675:15:102;;;;;;;;;;;;;;;-1:-1:-1;;;;675:15:102;-1:-1:-1;;;675:15:102;;;;;;-1:-1:-1;;;;675:15:102;;-1:-1:-1;;;675:15:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;675:15:102;;;-1:-1:-1;;;;;;;;;;;675:15:102;;;;;-1:-1:-1;;675:15:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;675:15:102;;547:5;;675:7;;:15;;;;;;;-1:-1:-1;;675:15:102;;;547:17;675:15;;;;;;;:::i;:::-;;;;;-1:-1:-1;675:15:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;675:15:102;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;725:24:102;700:22;;;;:19;:22;;-1:-1:-1;;;;;;;;;;;700:49:102;;-1:-1:-1;;700:49:102;;;;;;;:22;-1:-1:-1;825:37:102;850:4;856:1;859:2;825:24;:37::i;9237:150:10:-;1334:13:50;:11;:13::i;:::-;9322:17:10::1;:58:::0;;-1:-1:-1;;;;;;9322:58:10::1;-1:-1:-1::0;;;;;9322:58:10;;;::::1;::::0;;;::::1;::::0;;9237:150::o;28152:550::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;28313:12:10;;;:4;:12;;;;;;28352:18;;;;28374:17;;28352:18;;:39;;;;;;;;:::i;:::-;;;:102;;;-1:-1:-1;28407:33:10;;;;-1:-1:-1;;;28407:33:10;;;;-1:-1:-1;;28407:47:10;28352:102;28335:140;;;28465:10;;;28335:140;28489:20;28596:27;;;:19;:27;;;;;;28489:20;;28531:93;;28579:3;;28584:10;;28596:27;;28531:47;:93::i;:::-;28634:28;;;28672:12;;;:23;-1:-1:-1;;;;28152:550:10;;;;:::o;25930:488::-;-1:-1:-1;;;;;;;;;;;;;;;;;26081:17:10;26059:12;;;;:4;:12;;;;;:18;;;;;:39;;;;;;;;:::i;:::-;;26055:56;;25930:488;;;:::o;26055:56::-;26123:21;26233:12;;;:4;:12;;;;;;;;26296:19;:27;;;;;;26123:21;;26168:169;;26263:15;;26296:27;;26168:47;:169::i;:::-;26347:30;;;-1:-1:-1;26387:13:10;;;:24;-1:-1:-1;26347:4:10;;25930:488;-1:-1:-1;;25930:488:10:o;28830:2108::-;28921:15;28970:12;;;:4;:12;;;;;28996:18;;;;29018:17;;28996:18;;:39;;;;;;;;:::i;:::-;;28992:60;;29037:15;28830:2108;;;:::o;28992:60::-;29063:26;29092:27;29112:6;29092:19;:27::i;:::-;29063:56;-1:-1:-1;29230:24:10;29199:27;;;;:19;:27;;;;;;;;;:55;;;;;;;:::i;:::-;;29195:1458;;29402:33;;;;29340:24;;29367:119;;29402:33;-1:-1:-1;;;29402:33:10;;;;;;29367:119;;:17;:119::i;:::-;29588:33;;;;29340:146;;-1:-1:-1;29574:48:10;;-1:-1:-1;;;29588:33:10;;;;29574:13;:48::i;:::-;29521:34;29535:19;29521:34;;:13;:34::i;:::-;:101;29500:251;;;29655:21;29675:1;29655:21;;:::i;:::-;;;29500:251;;;29715:21;29735:1;29715:21;;:::i;:::-;;;29500:251;29838:33;;;;29800:127;;-1:-1:-1;;;29838:33:10;;;;29893:16;29800;:127::i;:::-;29765:176;;29256:696;29195:1458;;;29993:24;29962:27;;;:19;:27;;;;;;;;;:55;;;;;;;:::i;:::-;;29958:695;;30205:22;;;;30153:33;;;;:74;;30205:22;;;;;-1:-1:-1;;;30153:33:10;;;:74;:::i;:::-;30364:33;;;;30126:101;;-1:-1:-1;30311:12:10;;30326:71;;-1:-1:-1;;;30364:33:10;;;;30326:19;:71;:::i;:::-;30311:86;-1:-1:-1;30415:9:10;;;;30411:232;;30516:22;;;;30444:21;;30496:43;;;;;;;30516:22;30496:12;:43::i;:::-;30605:22;;;;30444:113;;-1:-1:-1;30588:39:10;;30605:22;;30444:113;30588:39;:::i;:::-;30575:53;;;;:::i;:::-;;;30426:217;30411:232;30019:634;29958:695;30730:28;;;;30663:16;;30682:76;;30730:28;-1:-1:-1;;;30730:28:10;;;;;-1:-1:-1;;;30682:33:10;;;:76;:::i;:::-;30663:95;;30876:9;30865:20;;:8;:20;;;30861:71;;;30912:9;30901:20;;30861:71;28942:1996;;;28830:2108;;;:::o;2071:101:50:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;11251:784:10:-;11565:14;1482:19:53;:17;:19::i;:::-;11600:189:10::1;11624:13;11651:14;11679:10;11703:9;11726:4;11744:12;;11770:9;11600:10;:189::i;:::-;11818:17;::::0;:93:::1;::::0;-1:-1:-1;;;11818:93:10;;11591:198;;-1:-1:-1;11800:15:10::1;::::0;-1:-1:-1;;;;;11818:17:10;;::::1;::::0;:34:::1;::::0;:93:::1;::::0;11591:198;;11886:15;;;;11818:93:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11800:111:::0;-1:-1:-1;11957:4:10::1;11943:18:::0;::::1;;;11922:106;;;::::0;-1:-1:-1;;;11922:106:10;;21698:2:121;11922:106:10::1;::::0;::::1;21680:21:121::0;21737:2;21717:18;;;21710:30;21776:34;21756:18;;;21749:62;-1:-1:-1;;;21827:18:121;;;21820:39;21876:19;;11922:106:10::1;21496:405:121::0;11922:106:10::1;11581:454;11251:784:::0;;;;;;;;;;;;:::o;22793:931::-;5030:224;;;;;;;;;;;;-1:-1:-1;;;5030:224:10;;;;22874:6;;5127:17;5105:12;;;;:4;:12;;;;;:18;;;;;:39;;;;;;;;:::i;:::-;;5101:135;;5184:6;5192:7;5167:58;;-1:-1:-1;;;5167:58:10;;;;;;;;;:::i;5101:135::-;22921:23:::1;22937:6;22921:15;:23::i;:::-;22913:59;;;::::0;-1:-1:-1;;;22913:59:10;;22108:2:121;22913:59:10::1;::::0;::::1;22090:21:121::0;22147:2;22127:18;;;22120:30;22186:25;22166:18;;;22159:53;22229:18;;22913:59:10::1;21906:347:121::0;22913:59:10::1;22983:15;23001:12:::0;;;:4:::1;:12;::::0;;;;;;;23189:19:::1;:27:::0;;;;;;23001:12;;22983:15;;;23070:160:::1;::::0;23001:12;;23156:15:::1;::::0;23189:27:::1;;23070:47;:160::i;:::-;23024:206;;;;;23240:168;23264:6;23284:57;;;;;;;;23305:13;23284:57;;;;23330:8;23284:57;;::::0;23371:8:::1;23355:13;:24;;;;:::i;:::-;23393:5;23240:10;:168::i;:::-;23419:9;::::0;::::1;:31:::0;;-1:-1:-1;;23419:31:10::1;23431:19;23419:31;::::0;;23582:17:::1;::::0;::::1;::::0;-1:-1:-1;;23562:38:10::1;::::0;:19:::1;:38::i;:::-;23610:17;::::0;:57:::1;::::0;-1:-1:-1;;;23610:57:10;;::::1;::::0;::::1;17955:25:121::0;;;-1:-1:-1;;;;;18016:32:121;;;17996:18;;;17989:60;23541:59:10;;-1:-1:-1;23610:17:10;::::1;::::0;:37:::1;::::0;17928:18:121;;23610:57:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;23683:34:10::1;::::0;-1:-1:-1;;;;;23683:34:10;::::1;::::0;-1:-1:-1;23698:6:10;;-1:-1:-1;23683:34:10::1;::::0;;;::::1;22903:821;;;;22793:931:::0;;;:::o;21374:811::-;5030:224;;;;;;;;;;;;-1:-1:-1;;;5030:224:10;;;;21464:6;;5127:17;5105:12;;;;:4;:12;;;;;:18;;;;;:39;;;;;;;;:::i;:::-;;5101:135;;5184:6;5192:7;5167:58;;-1:-1:-1;;;5167:58:10;;;;;;;;;:::i;5101:135::-;21513:21:::1;21663:12:::0;;;:4:::1;:12;::::0;;;;;;;21726:19:::1;:27:::0;;;;;;21513:21;;;;21611:156:::1;::::0;21663:12;21693:15:::1;::::0;21726:27:::1;;21611:34;:156::i;:::-;21499:268:::0;;-1:-1:-1;21499:268:10;-1:-1:-1;21499:268:10;-1:-1:-1;21777:19:10::1;21799:23;21499:268:::0;;21799:23:::1;:::i;:::-;21777:45;;21904:11;21894:7;:21;21890:106;;;21938:47;::::0;-1:-1:-1;;;21938:47:10;;::::1;::::0;::::1;12894:25:121::0;;;12935:18;;;12928:34;;;12978:18;;;12971:34;;;12867:18;;21938:47:10::1;12692:319:121::0;21890:106:10::1;22006:172;22030:6;22050:62;;;;;;;;22081:8;22071:7;:18;;;;:::i;:::-;22050:62:::0;;::::1;;::::0;;;22126:24:::1;22101:8:::0;22126:13;:24:::1;:::i;:::-;22164:4;22006:10;:172::i;:::-;21489:696;;;;21374:811:::0;;;;:::o;14687:391::-;14821:12;;;;:4;:12;;;;;:21;;14778:26;;;;;-1:-1:-1;;;;;14821:21:10;;;;14758:47;;:19;:47::i;:::-;-1:-1:-1;;;;;14758:84:10;;14741:303;;14874:159;;-1:-1:-1;;;14874:159:10;;;;;22704:25:121;;;22765:2;22745:18;;;22738:30;22804:1;22784:18;;;22777:29;-1:-1:-1;;;22822:19:121;;;22815:40;22891:3;22871:18;;;22864:31;22932:2;22911:19;;;22904:31;22972:32;22951:19;;;22944:61;23022:19;;14874:159:10;22391:656:121;14741:303:10;15053:18;15064:6;15053:10;:18::i;20579:511::-;5030:224;;;;;;;;;;;;-1:-1:-1;;;5030:224:10;;;;20656:6;;5127:17;5105:12;;;;:4;:12;;;;;:18;;;;;:39;;;;;;;;:::i;:::-;;5101:135;;5184:6;5192:7;5167:58;;-1:-1:-1;;;5167:58:10;;;;;;;;;:::i;5101:135::-;20692:21:::1;20802:12:::0;;;:4:::1;:12;::::0;;;;;;;20865:19:::1;:27:::0;;;;;;20692:21;;20737:169:::1;::::0;20832:15:::1;::::0;20865:27:::1;;20737:47;:169::i;:::-;20691:215;;;;;20916:167;20940:6;20960:57;;;;;;;;20981:13;20960:57;;;;21006:8;20960:57;;::::0;21047:8:::1;21031:13;:24;;;;:::i;20916:167::-;20681:409;;20579:511:::0;;;:::o;34848:261::-;34932:15;34973:12;;;:4;:12;;;;;:19;;;35026:13;;-1:-1:-1;;;;;34973:19:10;;;;35026:13;35007:33;;35003:100;;35063:13;;:29;;-1:-1:-1;;;35063:29:10;;;;;3035:25:121;;;-1:-1:-1;;;;;35063:13:10;;;;:21;;3008:18:121;;35063:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;35003:100::-;34848:261;;;:::o;33106:146::-;33172:6;33232:12;;;:4;:12;;;;;33197:48;;:34;:48::i;34012:123::-;1334:13:50;:11;:13::i;:::-;34090:38:10::1;:16;34114:13:::0;34090:23:::1;:38::i;:::-;;34012:123:::0;:::o;16227:2858::-;16400:24;16438:27;16479:24;16321:6;4552:219;;;;;;;;;;;;;-1:-1:-1;;;4552:219:10;;;4647:16;4625:38;;;;;;;;:::i;:::-;:12;;;;:4;:12;;;;;:18;;;;;:38;;;;;;;;:::i;:::-;;4621:132;;4703:6;4711:7;4686:56;;-1:-1:-1;;;4686:56:10;;;;;;;;;:::i;4621:132::-;1482:19:53::1;:17;:19::i;:::-;16552:15:10::2;16570:12:::0;;;:4:::2;:12;::::0;;;;16630:17:::2;::::0;::::2;::::0;16570:12;;16552:15;16610:38:::2;::::0;:19:::2;:38::i;:::-;16681:14;::::0;16726:17:::2;::::0;::::2;::::0;16681:92:::2;::::0;-1:-1:-1;;;16681:92:10;;::::2;::::0;::::2;17955:25:121::0;;;;-1:-1:-1;;;;;18016:32:121;;;17996:18;;;17989:60;16593:55:10;;-1:-1:-1;16660:15:10::2;::::0;16681:14;;::::2;::::0;:31:::2;::::0;17928:18:121;;16681:92:10::2;::::0;::::2;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16659:114;;;16791:10;16783:42;;;::::0;-1:-1:-1;;;16783:42:10;;24098:2:121;16783:42:10::2;::::0;::::2;24080:21:121::0;24137:2;24117:18;;;24110:30;-1:-1:-1;;;24156:18:121;;;24149:49;24215:18;;16783:42:10::2;23896:343:121::0;16783:42:10::2;16858:14;::::0;16888:17:::2;::::0;::::2;::::0;16858:48:::2;::::0;-1:-1:-1;;;16858:48:10;;-1:-1:-1;;;;;16858:14:10;;::::2;::::0;:29:::2;::::0;:48:::2;::::0;::::2;;3035:25:121::0;;;3023:2;3008:18;;2889:177;16858:48:10::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16857:49;16836:112;;;::::0;-1:-1:-1;;;16836:112:10;;24446:2:121;16836:112:10::2;::::0;::::2;24428:21:121::0;24485:2;24465:18;;;24458:30;-1:-1:-1;;;24504:18:121;;;24497:46;24560:18;;16836:112:10::2;24244:340:121::0;16836:112:10::2;16968:21;16982:6;16968:13;:21::i;:::-;16967:22;16959:50;;;::::0;-1:-1:-1;;;16959:50:10;;24791:2:121;16959:50:10::2;::::0;::::2;24773:21:121::0;24830:2;24810:18;;;24803:30;-1:-1:-1;;;24849:18:121;;;24842:45;24904:18;;16959:50:10::2;24589:339:121::0;16959:50:10::2;17045:33:::0;;;:59;;-1:-1:-1;;17114:61:10;-1:-1:-1;;;17088:15:10::2;17045:59;;::::0;;::::2;-1:-1:-1::0;;;;17114:61:10;;;;;-1:-1:-1;;;17114:61:10;;;::::2;;::::0;;17233:9:::2;::::0;::::2;:29:::0;;17245:17:::2;::::0;17233:9;-1:-1:-1;;17233:29:10::2;-1:-1:-1::0;17245:17:10;17233:29:::2;;::::0;;-1:-1:-1;17334:10:10::2;::::0;::::2;:19:::0;;-1:-1:-1;;;;;;17334:19:10::2;-1:-1:-1::0;;;;;17334:19:10;;::::2;::::0;;;::::2;::::0;;;17471:17:::2;::::0;:42:::2;::::0;-1:-1:-1;;;17471:42:10;;::::2;::::0;::::2;3035:25:121::0;;;17471:17:10;::::2;::::0;:34:::2;::::0;3008:18:121;;17471:42:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;17597:48;17631:13;1100:12:8::0;;;;;1023:96;17631:13:10::2;17597:25:::0;;;;;:33:::2;:48::i;:::-;17724:14;::::0;17757:17:::2;::::0;::::2;::::0;17724:51:::2;::::0;-1:-1:-1;;;17724:51:10;;17578:67;;-1:-1:-1;17677:108:10::2;::::0;-1:-1:-1;;;;;17724:14:10;;::::2;::::0;:32:::2;::::0;:51:::2;::::0;::::2;;3035:25:121::0;;;3023:2;3008:18;;2889:177;17724:51:10::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;17677:108::-;17655:130;;17897:19;17866:16;17826:3;:15;;:25;;;:56;;;;:::i;:::-;:90;;;;:::i;:::-;17795:121;;17961:126;18020:6;18040:7;1513:6:50::0;;-1:-1:-1;;;;;1513:6:50;;1441:85;18040:7:10::2;17961:15;::::0;::::2;:28:::0;-1:-1:-1;;;;;17961:28:10::2;::::0;:126;18061:16;17961:45:::2;:126::i;:::-;18215:14;::::0;18252:17:::2;::::0;::::2;::::0;18215:55:::2;::::0;-1:-1:-1;;;18215:55:10;;18136:177:::2;::::0;18195:6;;-1:-1:-1;;;;;18215:14:10;;::::2;::::0;:36:::2;::::0;:55:::2;::::0;::::2;;3035:25:121::0;;;3023:2;3008:18;;2889:177;18215:55:10::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18136:15;::::0;::::2;:28:::0;-1:-1:-1;;;;;18136:28:10::2;::::0;:177;18284:19;18136:45:::2;:177::i;:::-;18440:12;::::0;::::2;::::0;18361:15:::2;::::0;::::2;:28:::0;:131:::2;::::0;-1:-1:-1;;;;;18361:28:10;;::::2;::::0;18420:6;;18440:12:::2;18466:16:::0;18361:45:::2;:131::i;:::-;18615:51:::0;;;;:28:::2;::::0;::::2;18573::::0;-1:-1:-1;;;;;18573:28:10;;::::2;18546:57;::::0;;;:18:::2;:57;::::0;;;;;;;:65;;::::2;::::0;;;;;;;;:120;;:65;;:57;:120:::2;::::0;18615:51;;18546:120:::2;:::i;:::-;::::0;;;-1:-1:-1;;18736:51:10;;;;:28:::2;::::0;::::2;18702::::0;-1:-1:-1;;;;;18702:28:10::2;18676:56;::::0;;;:17:::2;:56;::::0;;;;:111;;:56;;;:111:::2;::::0;18736:51;;18676:111:::2;:::i;:::-;::::0;;;-1:-1:-1;;18855:12:10;;-1:-1:-1;;;;;18855:12:10::2;18835:33;::::0;;;:19:::2;:33;::::0;;;;:45:::2;::::0;18873:6;18835:37:::2;:45::i;:::-;-1:-1:-1::0;18924:27:10::2;::::0;-1:-1:-1;;;;;18924:27:10;::::2;::::0;18936:6;;18924:27:::2;::::0;;;::::2;18967:45;::::0;-1:-1:-1;;;25389:23:121;;18995:16:10;;25437:1:121;25428:11;18967:45:10::2;::::0;;;;::::2;::::0;;;18975:6;;18967:45:::2;::::0;;;::::2;19027:51;::::0;-1:-1:-1;;;25652:26:121;;19058:19:10;;25703:2:121;25694:12;19027:51:10::2;::::0;;;;::::2;::::0;;;19035:6;;19027:51:::2;::::0;;;::::2;16518:2567;;;16227:2858:::0;;;;;;;:::o;6168:1002::-;3291:13:52;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:52;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:52;1476:19:63;:23;;;3376:66:52;;-1:-1:-1;3425:12:52;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:52;;;;;;;:::i;:::-;3525:12;:16;;-1:-1:-1;;3525:16:52;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:52;;;;;3551:65;6485:32:10::1;6504:12;6485:18;:32::i;:::-;6528:17;:15;:17::i;:::-;6556:25;:54:::0;;-1:-1:-1;;;;;6556:54:10;;::::1;-1:-1:-1::0;;;;;;6556:54:10;;::::1;;::::0;;;6620:14:::1;:49:::0;;;;::::1;::::0;;::::1;;::::0;;6679:17:::1;:58:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;6747:48:::1;6769:25:::0;6747:21:::1;:48::i;:::-;6805:33;6823:14;6805:17;:33::i;:::-;6857:25:::0;6849:65:::1;;;::::0;-1:-1:-1;;;6849:65:10;;26334:2:121;6849:65:10::1;::::0;::::1;26316:21:121::0;26373:2;26353:18;;;26346:30;26412:29;26392:18;;;26385:57;26459:18;;6849:65:10::1;26132:351:121::0;6849:65:10::1;6929:9;6924:240;6944:25:::0;;::::1;6924:240;;;7015:30;:14;;7030:1;7015:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7015:28:10::1;1476:19:63::0;:23;;;1186:320;7015:30:10::1;6990:115;;;::::0;-1:-1:-1;;;6990:115:10;;26822:2:121;6990:115:10::1;::::0;::::1;26804:21:121::0;26861:2;26841:18;;;26834:30;26900:28;26880:18;;;26873:56;26946:18;;6990:115:10::1;26620:350:121::0;6990:115:10::1;7119:34;7135:14;;7150:1;7135:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;7119:34::-;6971:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6924:240;;;;3640:14:52::0;3636:99;;;3670:13;:21;;-1:-1:-1;;3670:21:52;;;3710:14;;-1:-1:-1;8414:36:121;;3710:14:52;;8402:2:121;8387:18;3710:14:52;;;;;;;3636:99;3258:483;6168:1002:10;;;;;;;;:::o;1819:584:37:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:37;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;27488:51:121;;;-1:-1:-1;;;27555:18:121;;;27548:34;2196:43:37;;;;;;;;;27461:18:121;;;2196:43:37;;;-1:-1:-1;;1671:64:37;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:37;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;8400:664:10:-;8577:12;;;;:4;:12;;;;;8562:27;;8485:26;;8577:12;8562:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8695:12;8678:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;8668:41;;;;;;8725:66;8668:123;;;8651:407;;8913:20;8944:12;;;:4;:12;;;;;;;;:25;;;;8999:48;;8944:25;;8999:30;:48::i;19855:566::-;5030:224;;;;;;;;;;;;-1:-1:-1;;;5030:224:10;;;;19935:6;;5127:17;5105:12;;;;:4;:12;;;;;:18;;;;;:39;;;;;;;;:::i;:::-;;5101:135;;5184:6;5192:7;5167:58;;-1:-1:-1;;;5167:58:10;;;;;;;;;:::i;5101:135::-;19984:21:::1;20134:12:::0;;;:4:::1;:12;::::0;;;;;;;20197:19:::1;:27:::0;;;;;;19984:21;;;;20082:156:::1;::::0;20134:12;20164:15:::1;::::0;20197:27:::1;;20082:34;:156::i;:::-;19970:268;;;;;;20248:166;20272:6;20292:56;;;;;;;;20313:12;20292:56;;;;20337:8;20292:56;;::::0;20378:8:::1;20362:13;:24;;;;:::i;20248:166::-;19960:461;;;19855:566:::0;;;:::o;33636:197::-;1334:13:50;:11;:13::i;:::-;-1:-1:-1;;;;;33719:24:10;::::1;1476:19:63::0;33711:70:10::1;;;::::0;-1:-1:-1;;;33711:70:10;;28770:2:121;33711:70:10::1;::::0;::::1;28752:21:121::0;28809:2;28789:18;;;28782:30;28848:33;28828:18;;;28821:61;28899:18;;33711:70:10::1;28568:355:121::0;33711:70:10::1;33791:35;:16;33812:13:::0;33791:20:::1;:35::i;1055:301:12:-:0;1184:4;1219:35;;;:24;:35;;;;;;-1:-1:-1;;;;;1219:62:12;;;:35;;:62;;:130;;-1:-1:-1;;1297:25:12;;-1:-1:-1;;;;;1297:25:12;;;:52;;;;1200:149;-1:-1:-1;1055:301:12:o;27406:481:10:-;-1:-1:-1;;;;;;;;;;;;;;;;;27555:17:10;27533:12;;;;:4;:12;;;;;:18;;;;;:39;;;;;;;;:::i;:::-;;27529:55;;27406:481;;;:::o;27529:55::-;27598:20;27705:12;;;:4;:12;;;;;;;;27768:19;:27;;;;;;27598:20;;27640:169;;27735:15;;27768:27;;27640:47;:169::i;:::-;27819:28;;;27857:12;;;:23;-1:-1:-1;27819:3:10;;27406:481;-1:-1:-1;;;27406:481:10:o;22296:89::-;1334:13:50;:11;:13::i;:::-;1482:19:53::1;:17;:19::i;:::-;22370:8:10::2;:6;:8::i;1271:269:8:-:0;1334:13:50;:11;:13::i;:::-;1398:12:8::1;::::0;::::1;1388:22:::0;;::::1;1398:12:::0;::::1;1384:35:::0;1412:7:::1;1384:35;1445:12;::::0;;::::1;1467:21:::0;;::::1;-1:-1:-1::0;;1467:21:8;::::1;::::0;::::1;::::0;;;1503:30:::1;::::0;;29123:34:121;;;1445:12:8;::::1;29188:2:121::0;29173:18;;29166:43;;;1445:12:8;1503:30:::1;::::0;29071:18:121;1503:30:8::1;;;;;;;;1335:205;1271:269:::0;:::o;31434:460:10:-;31537:4;31575:12;;;:4;:12;;;;;31682:17;31669:9;;;;;;:30;;;;;;;;:::i;:::-;;31665:48;;-1:-1:-1;31708:5:10;;31434:460;-1:-1:-1;;31434:460:10:o;31665:48::-;31728:26;;;;:18;:26;;;;;;;;:31;;31724:49;;-1:-1:-1;31768:5:10;;31434:460;-1:-1:-1;;31434:460:10:o;31724:49::-;31860:26;;;;:18;:26;;;;;;;;31818:27;31879:6;31818:19;:27::i;:::-;31792:53;;31799:15;31792:53;:::i;:::-;:94;;;;31434:460;-1:-1:-1;;;31434:460:10:o;1731:518:102:-;1837:37;1862:4;1868:1;1871:2;1837:24;:37::i;:::-;1779:35;:105;;;;;;;-1:-1:-1;;;1779:105:102;-1:-1:-1;;1779:105:102;;;;;;;;;1954:36;1979:4;1985:1;-1:-1:-1;1954:24:102;:36::i;:::-;1894:37;:106;;;;;;-1:-1:-1;;;1894:106:102;;;-1:-1:-1;;;;1894:106:102;;;;;;;;-1:-1:-1;;2010:7:102;;;:4;:7;;1894:5;2010:15;;-1:-1:-1;;;;;;;;;;;2010:15:102;;-1:-1:-1;;;;;;2010:15:102;;;-1:-1:-1;;;;;2010:15:102;;;;;;;;-1:-1:-1;;;;;;;;;;;2010:15:102;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2010:15:102;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2010:15:102;;;-1:-1:-1;;;;;;;;;;;2010:15:102;1894:17;2010:15;-1:-1:-1;;;;;;;;;;;2010:15:102;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2010:15:102;;;-1:-1:-1;;;;;;;;;;;2010:15:102;;;-1:-1:-1;;;;;;;;;;;2010:15:102;-1:-1:-1;;;;;;;;;;;2010:15:102;;-1:-1:-1;;;2010:15:102;;;;;;-1:-1:-1;;;;2010:15:102;;;;;;;;;;;;-1:-1:-1;;;;;;;2010:15:102;;;;;;;;-1:-1:-1;;2010:15:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2010:15:102;;;-1:-1:-1;;;;;;;;;;;2010:15:102;;;;;;;;;;-1:-1:-1;;2010:15:102;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2010:15:102;;;;;;;;;-1:-1:-1;;2010:15:102;;;1894:17;2010:15;;;;;;;:::i;:::-;;;;;-1:-1:-1;2010:15:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;2010:15:102;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;2060:24:102;2035:22;;;;:19;:22;;-1:-1:-1;;;;;;;;;;;2035:49:102;;-1:-1:-1;;2035:49:102;;;;;;;:22;-1:-1:-1;2162:37:102;2187:4;2193:1;2196:2;2162:24;:37::i;2321:198:50:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:50;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:50;;29422:2:121;2401:73:50::1;::::0;::::1;29404:21:121::0;29461:2;29441:18;;;29434:30;29500:34;29480:18;;;29473:62;-1:-1:-1;;;29551:18:121;;;29544:36;29597:19;;2401:73:50::1;29220:402:121::0;2401:73:50::1;2484:28;2503:8;2484:18;:28::i;22503:90:10:-:0;1334:13:50;:11;:13::i;:::-;1729:16:53::1;:14;:16::i;:::-;22576:10:10::2;:8;:10::i;7176:176::-:0;4871:13:52;;5337:1:10;;4871:13:52;;;;;4870:14;:40;;;;-1:-1:-1;4888:12:52;;:22;;;;:12;;:22;4870:40;4862:99;;;;-1:-1:-1;;;4862:99:52;;;;;;;:::i;:::-;4971:12;:22;;-1:-1:-1;;5003:20:52;4971:22;;;5003:20;4971:22;5003:20;;;1334:13:50::1;:11;:13::i;:::-;7312:33:10::2;7330:14;7312:17;:33::i;:::-;5044:13:52::0;:21;;-1:-1:-1;;5044:21:52;;;5080:20;;8444:4:121;8432:17;;8414:36;;5080:20:52;;8402:2:121;8387:18;5080:20:52;8272:184:121;12652:297:94;12712:16;12740:22;12765:19;12773:3;12765:7;:19::i;2010:106:53:-;1928:7;;;;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:53;;29829:2:121;2071:38:53;;;29811:21:121;29868:2;29848:18;;;29841:30;-1:-1:-1;;;29887:18:121;;;29880:46;29943:18;;2071:38:53;29627:340:121;12041:2506:10;12288:14;12314;12331:35;12351:14;12331:19;:35::i;:::-;12398:14;;:91;;-1:-1:-1;;;12398:91:10;;;;;17955:25:121;;;-1:-1:-1;;;;;18016:32:121;;;17996:18;;;17989:60;12314:52:10;;-1:-1:-1;12377:15:10;;12398:14;;;;:33;;17928:18:121;;12398:91:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12376:113;;;12507:10;12499:44;;;;-1:-1:-1;;;12499:44:10;;30174:2:121;12499:44:10;;;30156:21:121;30213:2;30193:18;;;30186:30;-1:-1:-1;;;30232:18:121;;;30225:51;30293:18;;12499:44:10;29972:345:121;12499:44:10;12575:14;;:45;;-1:-1:-1;;;12575:45:10;;;;;3035:25:121;;;-1:-1:-1;;;;;12575:14:10;;;;:29;;3008:18:121;;12575:45:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12574:46;12553:109;;;;-1:-1:-1;;;12553:109:10;;24446:2:121;12553:109:10;;;24428:21:121;24485:2;24465:18;;;24458:30;-1:-1:-1;;;24504:18:121;;;24497:46;24560:18;;12553:109:10;24244:340:121;12553:109:10;12693:40;:16;12719:13;12693:25;:40::i;:::-;12672:115;;;;-1:-1:-1;;;12672:115:10;;30524:2:121;12672:115:10;;;30506:21:121;30563:2;30543:18;;;30536:30;30602;30582:18;;;30575:58;30650:18;;12672:115:10;30322:352:121;12672:115:10;12839:5;;12908:15;12926:11;;;:4;:11;;;;;12947:21;;-1:-1:-1;;;;;;12947:21:10;-1:-1:-1;;;;;12947:21:10;;;;;;;;;12839:5;;-1:-1:-1;12926:11:10;12993:23;;:50;;13031:12;;-1:-1:-1;;;;;13031:12:10;12993:50;;;13019:9;12993:50;12978:12;;;:65;;-1:-1:-1;;;;;;12978:65:10;;;-1:-1:-1;;;;;12978:65:10;;;;;;;13053:17;;;:34;;;13097:15;;;:51;;;;;;;;;;;13158:25;;;:38;;;13206:28;;;:40;;-1:-1:-1;;13256:51:10;-1:-1:-1;;;13206:40:10;;;;;;;;-1:-1:-1;;13256:51:10;;;;;13291:15;13256:51;;;;;;;13451:14;;:59;;-1:-1:-1;;;13451:59:10;;13206:28;13451:59;;3035:25:121;;;13451:14:10;;;:43;;3008:18:121;;13451:59:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13441:5;;13397:22;13421:26;;;:19;:26;;;;;13396:114;;13397:22;;;;;13396:114;;-1:-1:-1;;13396:114:10;13397:22;13396:114;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;13396:114:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13521:13:10;;;:20;;-1:-1:-1;;13521:20:10;-1:-1:-1;;;13521:20:10;;;;;;;13580:14;;:78;;-1:-1:-1;;;13580:78:10;;13521:13;13580:78;;3035:25:121;;;-1:-1:-1;;;;;13580:14:10;;;;:40;;3008:18:121;;13580:78:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13571:5;;13552:25;;;;:18;:25;;;;;;;:106;;-1:-1:-1;;13552:106:10;;;;;;;;;;;;;13696:14;;:73;;-1:-1:-1;;;13696:73:10;;;;;3035:25:121;;;-1:-1:-1;;;;;13696:14:10;;;;:35;;3008:18:121;;13696:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13687:5;;13669:24;;;;:17;:24;;;;;;;:100;;-1:-1:-1;;13669:100:10;;;;;;;;;;;;;13798:14;;:45;;-1:-1:-1;;;13798:45:10;;;;;3035:25:121;;;-1:-1:-1;;;;;13798:14:10;;;;:29;;3008:18:121;;13798:45:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13780:15;;;:63;;-1:-1:-1;;13780:63:10;;;:15;:63;;;;;;;:::i;:::-;;;;;-1:-1:-1;13958:15:10;;;;14011:5;;13991:26;;;;:19;:26;;;;;;14090:22;;;;13885:263;;13958:15;;;;;;;;13991:26;;14035:10;;14063:9;;14090:22;;14130:4;13885:55;:263::i;:::-;13854:9;;;:294;14164:5;;13854:28;14159:11;;;:4;:11;;;;;:26;14173:12;;14159:11;:26;:::i;:::-;-1:-1:-1;14195:9:10;;;:28;;-1:-1:-1;;14195:28:10;14207:16;14195:28;;;14346:30;;;;14363:12;;;;14346:30;;;:::i;:::-;;;;;;;-1:-1:-1;;14346:30:10;;;;;;;14336:41;;14346:30;14336:41;;;;14284:12;;14265:5;;14284:12;14310;;;-1:-1:-1;;;;;14310:12:10;;;6016:51:121;;14336:41:10;;14284:12;;;;;14265:5;;14239:148;;5989:18:121;14239:148:10;;;;;;;14461:12;;-1:-1:-1;;;;;14461:12:10;14448:26;;;;:12;:26;;;;;;;14480:5;;;14448:38;;14461:12;14448:38;;;;;;;;;;;;;;;;;14533:7;;;;;;:::i;:::-;;;;;;12304:2243;;;12041:2506;;;;;;;;;;:::o;4042:205:30:-;4149:14;1025:12;4191:31;4205:4;4211:5;4218:3;4191:13;:31::i;:::-;:49;;;;:::i;2255:186:102:-;2320:19;2342:23;2363:1;2342:20;:23::i;:::-;2320:45;;;;2375:59;2384:11;2397:9;2375:59;;;;;;;;;;;;;;;;;:8;:59::i;1118:532:32:-;1311:22;1347:21;1382:17;1482:161;1519:4;1541:25;1561:4;1541:19;:25::i;:::-;1482:161;;1584:10;1612:17;1482:19;:161::i;:::-;1463:180;;;;;;1118:532;;;;;;;:::o;35522:233:10:-;35671:14;35710:38;:36;:38::i;3592:639:12:-;3703:7;3730:49;3755:9;3766:12;:10;:12::i;3730:49::-;3726:469;;;-1:-1:-1;;3885:14:12;3881:23;3868:37;3864:2;3860:46;4031:56;3860:46;4031:25;3795:14;4057:12;:10;:12::i;:::-;-1:-1:-1;;;;;4031:39:12;;;;;;;;;;;;-1:-1:-1;4031:39:12;;:48;:56::i;:::-;4006:151;;;;-1:-1:-1;;;4006:151:12;;34607:2:121;4006:151:12;;;34589:21:121;34646:2;34626:18;;;34619:30;34685:34;34665:18;;;34658:62;-1:-1:-1;;;34736:18:121;;;34729:34;34780:19;;4006:151:12;34405:400:121;3726:469:12;4212:12;:10;:12::i;8852:165:94:-;-1:-1:-1;;;;;8985:23:94;;8932:4;4343:19;;;:12;;;:19;;;;;;:24;;8955:55;4247:127;15816:266:10;4552:219;;;;;;;;;;;;-1:-1:-1;;;4552:219:10;;;;15888:6;;4647:16;4625:12;;;;:4;:12;;;;;:18;;;;;:38;;;;;;;;:::i;:::-;;4621:132;;4703:6;4711:7;4686:56;;-1:-1:-1;;;4686:56:10;;;;;;;;;:::i;4621:132::-;15965:12:::1;::::0;;;:4:::1;:12;::::0;;;;;:18:::1;;:39:::0;;-1:-1:-1;;15965:39:10::1;15986:18;15965:39;::::0;;16055:20;15965:12;;16055:20:::1;::::0;::::1;15816:266:::0;;;:::o;8297:150:94:-;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:94;;8390:4;:50::i;1599:130:50:-;1673:12;:10;:12::i;:::-;-1:-1:-1;;;;;1662:23:50;:7;1513:6;;-1:-1:-1;;;;;1513:6:50;;1441:85;1662:7;-1:-1:-1;;;;;1662:23:50;;1654:68;;;;-1:-1:-1;;;1654:68:50;;35012:2:121;1654:68:50;;;34994:21:121;;;35031:18;;;35024:30;35090:34;35070:18;;;35063:62;35142:18;;1654:68:50;34810:356:121;13426:464:30;13531:12;13584:11;13567:13;:28;;13559:37;;;;;;13607:13;;13642:66;13667:31;1025:12;13667:13;:31;:::i;:::-;13642:11;:66::i;:::-;-1:-1:-1;13606:102:30;;-1:-1:-1;13606:102:30;-1:-1:-1;13719:11:30;;13750:64;13775:29;1025:12;13775:11;:29;:::i;13750:64::-;-1:-1:-1;13718:96:30;;-1:-1:-1;13718:96:30;-1:-1:-1;13874:9:30;13858:13;:8;13869:2;13858:13;:::i;:::-;13848:7;13834:11;:6;13843:2;13834:11;:::i;:::-;:21;;;;:::i;:::-;:37;;;;:::i;:::-;:49;;;;:::i;:::-;13824:59;13426:464;-1:-1:-1;;;;;;;13426:464:30:o;8070:134::-;8125:8;8157:40;8169:27;1025:12;8169:9;:27;:::i;8157:40::-;8145:52;8070:134;-1:-1:-1;;;;8070:134:30:o;9269:651::-;9365:17;;;;9434:62;9459:27;1025:12;9459:9;:27;:::i;9434:62::-;9398:98;;-1:-1:-1;9398:98:30;-1:-1:-1;9398:98:30;-1:-1:-1;9506:16:30;9515:7;9398:98;9506:16;:::i;:::-;;-1:-1:-1;9554:2:30;9541:9;9549:1;9506:16;9541:9;:::i;:::-;9540:16;;;;:::i;:::-;9532:24;;;;:::i;:::-;;-1:-1:-1;9589:2:30;9576:9;9584:1;9576:5;:9;:::i;:::-;9575:16;;;;:::i;:::-;9574:22;;9595:1;9574:22;:::i;:::-;9566:30;;9606:16;9625:28;9641:4;9647:5;9625:15;:28::i;:::-;9606:47;;9673:11;9667:3;:17;9663:65;;;9706:11;9700:17;;9663:65;9841:27;1025:12;9841:9;:27;:::i;:::-;1025:12;9764:31;9778:4;9784:5;9791:3;9764:13;:31::i;:::-;:61;;;;:::i;:::-;:105;;;;:::i;:::-;9737:132;;9903:9;9887:12;:25;;9879:34;;;;;;9388:532;;;;9269:651;;;;:::o;1157:194:91:-;1219:7;1316:6;;:28;;1339:1;1330:5;1334:1;1330;:5;:::i;:::-;1329:11;;;;:::i;:::-;:15;;1343:1;1329:15;:::i;:::-;1316:28;;;-1:-1:-1;1325:1:91;;1157:194;-1:-1:-1;;1157:194:91:o;2673:187:50:-;2765:6;;;-1:-1:-1;;;;;2781:17:50;;;-1:-1:-1;;;;;;2781:17:50;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;24042:1729:10:-;24213:15;24231:12;;;:4;:12;;;;;;;24298:17;;;;24277:18;;24231:12;;24213:15;24277:38;;24298:17;24277:38;:::i;:::-;24341:17;;24396:12;;24341:97;;-1:-1:-1;;;24341:97:10;;-1:-1:-1;;;;;24396:12:10;;;24341:97;;;27488:51:121;27555:18;;;27548:34;;;24253:62:10;;-1:-1:-1;24326:12:10;;24341:17;;;:41;;27461:18:121;;24341:97:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24326:112;;24535:11;24518:13;:28;24514:541;;24603:9;;;:25;;-1:-1:-1;;24603:25:10;24615:13;24603:25;;;24707:12;;-1:-1:-1;;;;;24707:12:10;-1:-1:-1;24687:33:10;;;:19;:33;;;;;24578:11;;-1:-1:-1;24687:48:10;;24728:6;24687:40;:48::i;:::-;;24856:25;24852:98;;;24901:17;;:34;;-1:-1:-1;;;24901:34:10;;;;;3035:25:121;;;-1:-1:-1;;;;;24901:17:10;;;;:26;;3008:18:121;;24901:34:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24852:98;24969:18;;24980:6;;24969:18;;;;;24514:541;;;25023:21;;25037:6;;25023:21;;;;;24514:541;25065:14;25082:21;25096:6;25082:13;:21::i;:::-;25065:38;;25152:154;25211:38;25231:3;:17;;;25211:19;:38::i;:::-;25152:15;;;:28;-1:-1:-1;;;;;25152:28:10;;25263:6;25283:13;25152:45;:154::i;:::-;25389:18;;25348:27;;;:59;;25389:18;;25348:59;;25389:18;;25348:59;:::i;:::-;;;;-1:-1:-1;;25457:17:10;;;;25417:36;;;:57;;:36;;:57;;25457:17;;25417:57;:::i;:::-;;;;-1:-1:-1;;25484:35:10;;;:61;;-1:-1:-1;;;;25484:61:10;-1:-1:-1;;;25529:15:10;25484:61;;;;;;-1:-1:-1;25655:4:10;:20;;;;;;;;:::i;:::-;;25651:114;;25691:17;;25733:12;;25691:63;;-1:-1:-1;;;25691:63:10;;-1:-1:-1;;;;;25733:12:10;;;25691:63;;;27488:51:121;27555:18;;;27548:34;;;25691:17:10;;;:41;;27461:18:121;;25691:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;520:291:32:-;655:36;;;;614:6;;-1:-1:-1;;;655:36:32;;;;:41;:149;;768:36;;;;-1:-1:-1;;;768:36:32;;;;655:149;;;-1:-1:-1;715:34:32;;;-1:-1:-1;;;715:34:32;;;;;520:291::o;8615:156:94:-;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:94;;8711:7;:53::i;853:162:31:-;950:7;980:28;988:4;994:10;980:28;;1006:1;980:7;:28::i;974:241:84:-;1139:68;;;-1:-1:-1;;;;;36362:15:121;;;1139:68:84;;;36344:34:121;36414:15;;36394:18;;;36387:43;36446:18;;;;36439:34;;;1139:68:84;;;;;;;;;;36279:18:121;;;;1139:68:84;;;;;;;;-1:-1:-1;;;;;1139:68:84;-1:-1:-1;;;1139:68:84;;;1112:96;;1132:5;;1112:19;:96::i;:::-;974:241;;;;:::o;10785:129:94:-;10852:4;10875:32;10880:3;10900:5;10875:4;:32::i;656:150:8:-;5363:13:52;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:52;;;;;;;:::i;:::-;736:16:8::1;:14;:16::i;:::-;762:37;791:7;762:28;:37::i;1063:97:53:-:0;5363:13:52;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:52;;;;;;;:::i;:::-;1126:27:53::1;:25;:27::i;7358:432:10:-:0;5363:13:52;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:52;;;;;;;:::i;:::-;7502:17:10::1;::::0;-1:-1:-1;;;;;7502:17:10::1;7494:40:::0;7473:117:::1;;;::::0;-1:-1:-1;;;7473:117:10;;37098:2:121;7473:117:10::1;::::0;::::1;37080:21:121::0;37137:2;37117:18;;;37110:30;37176:32;37156:18;;;37149:60;37226:18;;7473:117:10::1;36896:354:121::0;7473:117:10::1;-1:-1:-1::0;;;;;7621:29:10;::::1;1476:19:63::0;7600:115:10::1;;;::::0;-1:-1:-1;;;7600:115:10;;37457:2:121;7600:115:10::1;::::0;::::1;37439:21:121::0;37496:2;37476:18;;;37469:30;37535:34;37515:18;;;37508:62;-1:-1:-1;;;37586:18:121;;;37579:35;37631:19;;7600:115:10::1;37255:401:121::0;7600:115:10::1;7725:17;:58:::0;;-1:-1:-1;;;;;;7725:58:10::1;-1:-1:-1::0;;;;;7725:58:10;;;::::1;::::0;;;::::1;::::0;;7358:432::o;7796:394::-;5363:13:52;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:52;;;;;;;:::i;:::-;7932:13:10::1;::::0;-1:-1:-1;;;;;7932:13:10::1;7924:36:::0;7903:108:::1;;;::::0;-1:-1:-1;;;7903:108:10;;37863:2:121;7903:108:10::1;::::0;::::1;37845:21:121::0;37902:2;37882:18;;;37875:30;37941:27;37921:18;;;37914:55;37986:18;;7903:108:10::1;37661:349:121::0;7903:108:10::1;-1:-1:-1::0;;;;;8042:25:10;::::1;1476:19:63::0;8021:106:10::1;;;::::0;-1:-1:-1;;;8021:106:10;;38217:2:121;8021:106:10::1;::::0;::::1;38199:21:121::0;;;38236:18;;;38229:30;38295:34;38275:18;;;38268:62;38347:18;;8021:106:10::1;38015:356:121::0;8021:106:10::1;8137:13;:46:::0;;-1:-1:-1;;;;;;8137:46:10::1;-1:-1:-1::0;;;;;8137:46:10;;;::::1;::::0;;;::::1;::::0;;7796:394::o;1557:437:65:-;1632:13;1657:19;1689:10;1693:6;1689:1;:10;:::i;:::-;:14;;1702:1;1689:14;:::i;:::-;1679:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1679:25:65;;1657:47;;-1:-1:-1;;;1714:6:65;1721:1;1714:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1714:15:65;;;;;;;;;-1:-1:-1;;;1739:6:65;1746:1;1739:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1739:15:65;;;;;;;;-1:-1:-1;1769:9:65;1781:10;1785:6;1781:1;:10;:::i;:::-;:14;;1794:1;1781:14;:::i;:::-;1769:26;;1764:128;1801:1;1797;:5;1764:128;;;-1:-1:-1;;;1844:5:65;1852:3;1844:11;1835:21;;;;;;;:::i;:::-;;;;1823:6;1830:1;1823:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1823:33:65;;;;;;;;-1:-1:-1;1880:1:65;1870:11;;;;;1804:3;;;:::i;:::-;;;1764:128;;;-1:-1:-1;1909:10:65;;1901:55;;;;-1:-1:-1;;;1901:55:65;;38719:2:121;1901:55:65;;;38701:21:121;;;38738:18;;;38731:30;38797:34;38777:18;;;38770:62;38849:18;;1901:55:65;38517:356:121;2429:115:53;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:53::1;::::0;::::1;::::0;;2517:20:::1;2524:12;:10;:12::i;:::-;2517:20;::::0;-1:-1:-1;;;;;6034:32:121;;;6016:51;;6004:2;5989:18;2517:20:53::1;;;;;;;2429:115::o:0;2188:106::-;1928:7;;;;;;;2246:41;;;;-1:-1:-1;;;2246:41:53;;39080:2:121;2246:41:53;;;39062:21:121;39119:2;39099:18;;;39092:30;-1:-1:-1;;;39138:18:121;;;39131:50;39198:18;;2246:41:53;38878:344:121;2676:117:53;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:53::1;::::0;;2764:22:::1;2773:12;:10;:12::i;5562:109:94:-:0;5618:16;5653:3;:11;;5646:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:109;;;:::o;4310:824:32:-;4540:7;;4594:24;4580:10;:38;;;;;;;;:::i;:::-;;:84;;4656:8;4580:84;;;4633:8;4580:84;4559:105;;;-1:-1:-1;4687:18:32;4678:5;:27;;;;;;;;:::i;:::-;;4674:223;;4744:142;4798:46;:22;;;;;4829:10;;4841:2;;4798:30;:46;:::i;:::-;4866:2;4744:24;:10;4763:4;4744:18;:24::i;:::-;:32;:142;:32;:142::i;:::-;4721:165;;;;;4674:223;4963:164;4995:10;5023:9;5050:13;5081:4;5103:10;4963:14;:164::i;:::-;4944:183;;;4310:824;;;;;;;;;:::o;2047:593:30:-;2150:10;2192:4;2184;:12;;2176:21;;;;;;2223:4;2255:5;2286:3;2207:9;1162:7;2572:1;2552:3;2546:2;2531:11;2540:2;2255:5;2531:11;:::i;:::-;2530:18;;;;:::i;:::-;2515:12;:5;2523:4;2515:12;:::i;:::-;:33;;;;:::i;:::-;2514:41;;;;:::i;:::-;2509:47;;:1;:47;:::i;:::-;2508:65;;;;:::i;:::-;2491:2;;2451:11;2460:2;2451:6;:11;:::i;:::-;2450:18;;;;:::i;:::-;2449:25;;2472:2;2449:25;:::i;:::-;2436:10;2445:1;2436:6;:10;:::i;:::-;:38;;;;:::i;:::-;2429:46;;:3;:46;:::i;:::-;2428:65;;;;:::i;:::-;2412:1;2393:2;2378:11;2387:2;2378:6;:11;:::i;:::-;2377:18;;;;:::i;:::-;2362:12;:5;2370:4;2362:12;:::i;:::-;:33;;;;:::i;:::-;2354:42;;:4;:42;:::i;:::-;2353:60;;;;:::i;:::-;2314:24;2333:5;2314:4;:24;:::i;:::-;:99;;;;:::i;:::-;:179;;;;:::i;:::-;:259;;;;:::i;:::-;:288;;;;:::i;:::-;2301:301;2047:593;-1:-1:-1;;;;;;;;2047:593:30:o;5469:178:37:-;5550:1;5545;:6;5541:100;;5572:30;5598:3;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;:::-;5469:178;;;:::o;1656:2176:32:-;2070:28;;;:38;2029:26;;;;1887:22;;;;;;2029:79;;;:::i;:::-;2000:108;-1:-1:-1;2119:18:32;2161:24;2140:17;:45;;;;;;;;:::i;:::-;;:91;;2223:8;2140:91;;;2200:8;2140:91;2119:112;;;;2242:27;2272:38;2295:4;:10;;:14;;;;;;;;;;;;2272;:22;;:38;;;;:::i;:::-;2242:68;-1:-1:-1;2320:16:32;2339:42;2360:20;2339:10;:42;:::i;:::-;2320:61;-1:-1:-1;2438:10:32;2404:30;2320:61;2404:19;:30;:::i;:::-;2403:45;;;;:::i;:::-;2717:34;;;;2391:57;;-1:-1:-1;2553:25:32;;2665:88;;-1:-1:-1;;;2717:34:32;;;;2672:10;2665:88;:::i;:::-;2609:29;;;;2581:173;;;-1:-1:-1;;;2609:29:32;;;;2581:173;:::i;:::-;2838:23;;;;2553:201;;-1:-1:-1;2764:23:32;;2838;;2790:73;;;:215;;-1:-1:-1;2976:10:32;;;:29;2946:26;2963:9;2946:14;:26;:::i;:::-;:59;;2790:215;2764:241;-1:-1:-1;3110:18:32;3090:16;;;;;;;;;;:38;;;;;;;:::i;:::-;;3086:740;;3148:18;3144:87;;;3202:14;3186:30;;3144:87;3086:740;;;3435:20;3458:18;:111;;3540:10;;;:29;3458:111;;;3495:26;3512:9;3495:14;:26;:::i;:::-;3714:23;;;;3435:134;;-1:-1:-1;3649:18:32;;3714:23;;3671;3686:8;3435:134;3671:23;:::i;:::-;3670:67;;;;:::i;:::-;3649:88;-1:-1:-1;3767:48:32;3776:22;3789:9;3649:88;3776:22;:::i;:::-;3800:14;3767:8;:48::i;:::-;3751:64;;3247:579;;3086:740;1990:1842;;;;;1656:2176;;;;;;;;:::o;975:445:3:-;1077:14;945:17;-1:-1:-1;;;;;932:30:3;1130:10;932:30;1107:307;;-1:-1:-1;;;1313:14:3;1309:23;1296:37;1292:2;1288:46;1819:584:37;:::o;1107:307:3:-;-1:-1:-1;929:10:64;;33344:116:10:o;2206:404:94:-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:94;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:94;2581:12;;3393:643:30;3473:9;;;3537:5;3473:9;1162:7;3562:14;3537:5;3571;3562:14;:::i;:::-;:31;;;;:::i;:::-;3554:39;-1:-1:-1;3603:5:30;3621:6;3612:5;3554:39;3612:1;:5;:::i;:::-;3611:16;;;;:::i;:::-;3603:24;-1:-1:-1;3664:1:30;3646:10;3603:24;3646:6;:10;:::i;:::-;:14;;3659:1;3646:14;:::i;:::-;3645:20;;;;:::i;:::-;3641:24;;:1;:24;:::i;:::-;3637:28;-1:-1:-1;3675:9:30;3706:7;3696:5;3637:28;3700:1;3696:5;:::i;:::-;3688:14;;:4;:14;:::i;:::-;3687:26;;;;:::i;:::-;3675:38;-1:-1:-1;3748:1:30;3732:12;3675:38;3732:4;:12;:::i;:::-;3731:18;;;;:::i;:::-;3727:22;;:1;:22;:::i;:::-;:27;;3752:2;3727:27;:::i;:::-;3723:31;-1:-1:-1;3764:10:30;3788:4;3778:6;3723:31;3778:2;:6;:::i;:::-;3777:15;;;;:::i;:::-;3764:28;-1:-1:-1;3802:8:30;3835:2;3818:13;3764:28;3818:4;:13;:::i;:::-;3817:20;;;;:::i;:::-;3813:24;;:1;:24;:::i;:::-;3802:35;-1:-1:-1;3851:11:30;3860:2;3851:6;:11;:::i;:::-;3847:15;-1:-1:-1;3894:6:30;3847:15;3894:2;:6;:::i;:::-;3881:10;:6;3890:1;3881:10;:::i;:::-;:19;;;;:::i;:::-;3872:28;-1:-1:-1;3943:1:30;3935:5;3925:6;3929:2;3925:1;:6;:::i;:::-;3918:14;;:3;:14;:::i;:::-;:22;;;;:::i;:::-;:26;;;;:::i;:::-;3910:34;3996:6;;-1:-1:-1;4024:4:30;-1:-1:-1;3393:643:30;-1:-1:-1;;;;;;3393:643:30:o;7029:505::-;7124:16;7173:5;7182:1;7173:10;:36;;;;7199:5;7208:1;7199:10;7173:36;:62;;;;7225:5;7234:1;7225:10;7173:62;:88;;;;7251:5;7260:1;7251:10;7173:88;:114;;;;7277:5;7286:1;7277:10;7173:114;:141;;;;7303:5;7312:2;7303:11;7173:141;:168;;;;7330:5;7339:2;7330:11;7173:168;7156:372;;;-1:-1:-1;7380:2:30;7156:372;;;7403:5;7412:1;7403:10;7399:129;;-1:-1:-1;7443:2:30;7399:129;;;7490:17;7502:4;7490:11;:17::i;:::-;:27;;7515:2;7490:27;;;7510:2;7490:27;7476:41;;;7029:505;-1:-1:-1;;;7029:505:30:o;11082:135:94:-;11152:4;11175:35;11183:3;11203:5;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:94;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;3011:1149;2850:1316;2778:1388;;;;:::o;1285:198:31:-;1401:7;1453:23;1467:8;1453:13;:23::i;:::-;1432:17;1439:10;1432:4;:17;:::i;:::-;1431:45;;;;:::i;3747:706:84:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:84;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:84;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:84;;40878:2:121;4351:85:84;;;40860:21:121;40917:2;40897:18;;;40890:30;40956:34;40936:18;;;40929:62;-1:-1:-1;;;41007:18:121;;;41000:40;41057:19;;4351:85:84;40676:406:121;1003:95:50;5363:13:52;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:52;;;;;;;:::i;:::-;1065:26:50::1;:24;:26::i;812:140:8:-:0;5363:13:52;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:52;;;;;;;:::i;:::-;922:23:8::1;937:7;922:14;:23::i;1166:95:53:-:0;5363:13:52;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:52;;;;;;;:::i;:::-;1239:7:53::1;:15:::0;;-1:-1:-1;;1239:15:53::1;::::0;;1166:95::o;2605:219:31:-;2715:7;2742:4;2750:1;2742:9;2738:23;;-1:-1:-1;2760:1:31;2753:8;;2738:23;2813:4;2786:23;2800:8;2786:13;:23::i;:::-;2779:30;;:4;:30;:::i;3350:1010::-;3526:7;3582:13;3566:29;;:12;:29;;;;3545:111;;;;-1:-1:-1;;;3545:111:31;;41289:2:121;3545:111:31;;;41271:21:121;41328:2;41308:18;;;41301:30;41367:34;41347:18;;;41340:62;-1:-1:-1;;;41418:18:121;;;41411:33;41461:19;;3545:111:31;41087:399:121;3545:111:31;3670:3;:8;;3677:1;3670:8;3666:216;;3715:167;3748:9;3779:13;3715:167;;3814:12;3715:167;;3848:16;3715:11;:167::i;:::-;3692:190;;;;3666:216;3958:9;3970:41;3983:12;3970:41;;3997:13;3970:41;;:12;:41::i;:::-;3958:53;-1:-1:-1;456:4:33;4022:11:31;4074:87;4141:10;4074:46;;;;:24;4094:3;4074:19;:24::i;:::-;:31;;:46::i;:::-;:53;;:87::i;:::-;4062:99;-1:-1:-1;4171:11:31;4185:19;4202:1;4186:7;4062:99;4186:3;:7;:::i;:::-;4185:16;;:19::i;:::-;4171:33;-1:-1:-1;4214:17:31;4234:31;4171:33;4234:19;:9;4251:1;4234:16;:19::i;:31::-;4214:51;-1:-1:-1;4275:19:31;4297:9;4303:3;4297;:9;:::i;:::-;4275:31;-1:-1:-1;4324:29:31;:9;4275:31;4324:16;:29::i;:::-;4317:36;;;;;;;;3350:1010;;;;;;;;:::o;5202:262:37:-;5264:1;5259;:6;5255:203;;5286:41;;;;;41693:2:121;41675:21;;;41732:2;41712:18;;;41705:30;41771:34;41766:2;41751:18;;41744:62;-1:-1:-1;;;41837:2:121;41822:18;;41815:32;41879:3;41864:19;;41491:398;5286:41:37;;;;;;;;5346:31;;;42106:21:121;;;42163:2;42143:18;;;42136:30;-1:-1:-1;;;42197:2:121;42182:18;;42175:40;42282:4;42267:20;;42260:36;;;5346:31:37;;;;;;;42247:3:121;5346:31:37;;;5396;;;42519:21:121;;;42576:2;42556:18;;;42549:30;-1:-1:-1;;;42610:2:121;42595:18;;42588:40;42695:4;42680:20;;42673:36;;;5396:31:37;;;;;;;42660:3:121;5396:31:37;;;5441:6;:4;:6::i;588:104:91:-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:91;;588:104;-1:-1:-1;588:104:91:o;6336:157:30:-;6391:13;6429:8;6436:1;6429:4;:8;:::i;:::-;:13;6428:36;;;;-1:-1:-1;6448:10:30;6455:3;6448:4;:10;:::i;:::-;:15;;6428:36;6427:59;;;-1:-1:-1;6470:10:30;6477:3;6470:4;:10;:::i;:::-;:15;6416:70;6336:157;-1:-1:-1;;6336:157:30:o;508:117:31:-;572:7;605:12;609:8;605:2;:12;:::i;:::-;598:20;;:3;:20;:::i;3873:223:86:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;1104:111:50:-;5363:13:52;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:52;;;;;;;:::i;:::-;1176:32:50::1;1195:12;:10;:12::i;:::-;1176:18;:32::i;5724:337:91:-:0;5863:7;5882:14;5899:25;5906:1;5909;5912:11;5899:6;:25::i;:::-;5882:42;-1:-1:-1;5950:11:91;5938:8;:23;;;;;;;;:::i;:::-;;:56;;;;;5993:1;5978:11;5965:25;;;;;:::i;:::-;5975:1;5972;5965:25;:29;5938:56;5934:98;;;6010:11;6020:1;6010:11;;:::i;2521:112:33:-;2572:7;2598:28;2622:3;2598:19;:10;;;456:4;2598:14;:19::i;:::-;:23;;:28::i;1100:124::-;1161:7;1187:30;456:4;1187:21;1199:8;:1;1205;1199:5;:8::i;:::-;502:7;508:1;456:4;502:7;:::i;:::-;1187:11;;:21::i;1230:154::-;1291:7;;1326:5;1330:1;1326;:5;:::i;:::-;1310:21;-1:-1:-1;1349:28:33;1375:1;1349:21;1359:10;:1;456:4;1359:5;:10::i;:::-;1349:5;;:9;:21::i;2891:117::-;2952:7;2978:23;2983:1;2986;456:4;2994:6;2978:4;:23::i;2410:424:37:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;44296:51:121;;;-1:-1:-1;;;44363:18:121;;;44356:34;;;;2705:4:37;44406:18:121;;;44399:34;2482:11:37;;1671:64;2579:43;;44269:18:121;;2645:67:37;;;-1:-1:-1;;2645:67:37;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:37;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:37;2813:7;:14;;-1:-1:-1;;2813:14:37;;;;;2410:424::o;4960:446:86:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:86;;44646:2:121;5149:81:86;;;44628:21:121;44685:2;44665:18;;;44658:30;44724:34;44704:18;;;44697:62;-1:-1:-1;;;44775:18:121;;;44768:36;44821:19;;5149:81:86;44444:402:121;5149:81:86;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:86;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;1667:3925:91:-;1779:14;;;-1:-1:-1;;2316:1:91;2313;2306:20;2359:1;2356;2352:9;2343:18;;2414:5;2410:2;2407:13;2399:5;2395:2;2391:14;2387:34;2378:43;;;2516:5;2525:1;2516:10;2512:75;;2561:11;2553:5;:19;;;;;:::i;:::-;;2546:26;;;;;;2512:75;2711:5;2697:11;:19;2689:28;;;;;;2973:17;3108:11;3105:1;3102;3095:25;4486:1;3656;3641:12;;:16;;3626:32;;3761:22;;;;4467:1;:15;;4466:21;;4719;;;4715:25;;4704:36;4788:21;;;4784:25;;4773:36;4858:21;;;4854:25;;4843:36;4928:21;;;4924:25;;4913:36;4998:21;;;4994:25;;4983:36;5069:21;;;5065:25;;;5054:36;;;3611:12;4006;;;4002:23;;;3998:31;;;3222:20;;;3211:32;;;4118:12;;;;3269:21;;3859:16;;;;4109:21;;;;5533:15;;;-1:-1:-1;;;;1667:3925:91:o;3465:96:93:-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;3014:375:33:-;3186:9;3211:5;3215:1;3211;:5;:::i;:::-;3220:1;3211:10;:18;;3228:1;3211:18;;;3224:1;3211:18;3207:22;-1:-1:-1;3245:6:33;3250:1;3245:6;;:::i;:::-;;;3240:143;3253:6;;3240:143;;3287:9;3291:1;3294;3287:3;:9;;:::i;:::-;3283:13;-1:-1:-1;3315:5:33;3319:1;3315;:5;:::i;:::-;:10;3311:62;;3349:9;3353:1;3356;3349:3;:9;;:::i;:::-;3345:13;;3311:62;3261:6;3266:1;3261:6;;:::i;:::-;;;3240:143;;7466:628:86;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1476:19:63;;;7908:60:86;;;;-1:-1:-1;;;7908:60:86;;45053:2:121;7908:60:86;;;45035:21:121;45092:2;45072:18;;;45065:30;45131:31;45111:18;;;45104:59;45180:18;;7908:60:86;44851:353:121;7908:60:86;-1:-1:-1;8003:10:86;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:86;;;;;;;;:::i;14:131:121:-;-1:-1:-1;;;;;89:31:121;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;289:247::-;348:6;401:2;389:9;380:7;376:23;372:32;369:52;;;417:1;414;407:12;369:52;456:9;443:23;475:31;500:5;475:31;:::i;541:632::-;712:2;764:21;;;834:13;;737:18;;;856:22;;;683:4;;712:2;935:15;;;;909:2;894:18;;;683:4;978:169;992:6;989:1;986:13;978:169;;;1053:13;;1041:26;;1122:15;;;;1087:12;;;;1014:1;1007:9;978:169;;;-1:-1:-1;1164:3:121;;541:632;-1:-1:-1;;;;;;541:632:121:o;1178:121::-;1263:10;1256:5;1252:22;1245:5;1242:33;1232:61;;1289:1;1286;1279:12;1304:117;1389:6;1382:5;1378:18;1371:5;1368:29;1358:57;;1411:1;1408;1401:12;1426:348;1478:8;1488:6;1542:3;1535:4;1527:6;1523:17;1519:27;1509:55;;1560:1;1557;1550:12;1509:55;-1:-1:-1;1583:20:121;;1626:18;1615:30;;1612:50;;;1658:1;1655;1648:12;1612:50;1695:4;1687:6;1683:17;1671:29;;1747:3;1740:4;1731:6;1723;1719:19;1715:30;1712:39;1709:59;;;1764:1;1761;1754:12;1709:59;1426:348;;;;;:::o;1779:1105::-;1902:6;1910;1918;1926;1934;1942;1950;1958;2011:3;1999:9;1990:7;1986:23;1982:33;1979:53;;;2028:1;2025;2018:12;1979:53;2067:9;2054:23;2086:31;2111:5;2086:31;:::i;:::-;2136:5;-1:-1:-1;2188:2:121;2173:18;;2160:32;;-1:-1:-1;2239:2:121;2224:18;;2211:32;;-1:-1:-1;2295:2:121;2280:18;;2267:32;2308;2267;2308;:::i;:::-;2359:7;-1:-1:-1;2418:3:121;2403:19;;2390:33;2432:32;2390:33;2432:32;:::i;:::-;2483:7;-1:-1:-1;2541:3:121;2526:19;;2513:33;2569:18;2558:30;;2555:50;;;2601:1;2598;2591:12;2555:50;2640:59;2691:7;2682:6;2671:9;2667:22;2640:59;:::i;:::-;2718:8;;-1:-1:-1;2614:85:121;-1:-1:-1;;2805:3:121;2790:19;;2777:33;2819;2777;2819;:::i;:::-;2871:7;2861:17;;;1779:1105;;;;;;;;;;;:::o;3071:388::-;3139:6;3147;3200:2;3188:9;3179:7;3175:23;3171:32;3168:52;;;3216:1;3213;3206:12;3168:52;3255:9;3242:23;3274:31;3299:5;3274:31;:::i;:::-;3324:5;-1:-1:-1;3381:2:121;3366:18;;3353:32;3394:33;3353:32;3394:33;:::i;:::-;3446:7;3436:17;;;3071:388;;;;;:::o;3464:180::-;3523:6;3576:2;3564:9;3555:7;3551:23;3547:32;3544:52;;;3592:1;3589;3582:12;3544:52;-1:-1:-1;3615:23:121;;3464:180;-1:-1:-1;3464:180:121:o;3841:248::-;3909:6;3917;3970:2;3958:9;3949:7;3945:23;3941:32;3938:52;;;3986:1;3983;3976:12;3938:52;-1:-1:-1;;4009:23:121;;;4079:2;4064:18;;;4051:32;;-1:-1:-1;3841:248:121:o;4247:246::-;4167:12;;4155:25;;4229:4;4218:16;;;4212:23;4196:14;;;4189:47;4431:2;4416:18;;4443:44;4094:148;4498:250;4583:1;4593:113;4607:6;4604:1;4601:13;4593:113;;;4683:11;;;4677:18;4664:11;;;4657:39;4629:2;4622:10;4593:113;;;-1:-1:-1;;4740:1:121;4722:16;;4715:27;4498:250::o;4753:271::-;4795:3;4833:5;4827:12;4860:6;4855:3;4848:19;4876:76;4945:6;4938:4;4933:3;4929:14;4922:4;4915:5;4911:16;4876:76;:::i;:::-;5006:2;4985:15;-1:-1:-1;;4981:29:121;4972:39;;;;5013:4;4968:50;;4753:271;-1:-1:-1;;4753:271:121:o;5029:220::-;5178:2;5167:9;5160:21;5141:4;5198:45;5239:2;5228:9;5224:18;5216:6;5198:45;:::i;5550:315::-;5618:6;5626;5679:2;5667:9;5658:7;5654:23;5650:32;5647:52;;;5695:1;5692;5685:12;5647:52;5731:9;5718:23;5708:33;;5791:2;5780:9;5776:18;5763:32;5804:31;5829:5;5804:31;:::i;6078:456::-;6155:6;6163;6171;6224:2;6212:9;6203:7;6199:23;6195:32;6192:52;;;6240:1;6237;6230:12;6192:52;6276:9;6263:23;6253:33;;6336:2;6325:9;6321:18;6308:32;6349:31;6374:5;6349:31;:::i;:::-;6399:5;-1:-1:-1;6456:2:121;6441:18;;6428:32;6469:33;6428:32;6469:33;:::i;:::-;6521:7;6511:17;;;6078:456;;;;;:::o;6539:658::-;6710:2;6762:21;;;6832:13;;6735:18;;;6854:22;;;6681:4;;6710:2;6933:15;;;;6907:2;6892:18;;;6681:4;6976:195;6990:6;6987:1;6984:13;6976:195;;;7055:13;;-1:-1:-1;;;;;7051:39:121;7039:52;;7146:15;;;;7111:12;;;;7087:1;7005:9;6976:195;;7437:127;7498:10;7493:3;7489:20;7486:1;7479:31;7529:4;7526:1;7519:15;7553:4;7550:1;7543:15;7569:121;7658:1;7651:5;7648:12;7638:46;;7664:18;;:::i;7695:252::-;7849:2;7834:18;;7861:46;7900:6;7861:46;:::i;:::-;7916:25;;;7695:252;:::o;7952:315::-;8020:6;8028;8081:2;8069:9;8060:7;8056:23;8052:32;8049:52;;;8097:1;8094;8087:12;8049:52;8136:9;8123:23;8155:31;8180:5;8155:31;:::i;:::-;8205:5;8257:2;8242:18;;;;8229:32;;-1:-1:-1;;;7952:315:121:o;8698:139::-;8778:1;8771:5;8768:12;8758:46;;8784:18;;:::i;:::-;8813;;8698:139::o;8842:141::-;8905:45;8944:5;8905:45;:::i;8988:1598::-;9434:4;9476:3;9465:9;9461:19;9453:27;;9516:1;9512;9507:3;9503:11;9499:19;9557:2;9549:6;9545:15;9534:9;9527:34;9609:2;9601:6;9597:15;9592:2;9581:9;9577:18;9570:43;9661:2;9653:6;9649:15;9644:2;9633:9;9629:18;9622:43;9701:6;9696:2;9685:9;9681:18;9674:34;9745:6;9739:3;9728:9;9724:19;9717:35;9808:2;9799:6;9793:13;9789:22;9783:3;9772:9;9768:19;9761:51;;9867:2;9859:6;9855:15;9849:22;9843:3;9832:9;9828:19;9821:51;9919:2;9911:6;9907:15;9901:22;9932:60;9987:3;9976:9;9972:19;9958:12;4167;;4155:25;;4229:4;4218:16;;;4212:23;4196:14;;4189:47;4094:148;9932:60;-1:-1:-1;10041:2:121;10029:15;;10023:22;10064:10;10111:23;;;10105:3;10090:19;;10083:52;10194:3;10182:16;;10176:23;10172:32;;10166:3;10151:19;;10144:61;10264:3;10252:16;;10246:23;10242:32;10236:3;10221:19;;10214:61;10324:3;10312:16;;10306:23;10338:54;10387:3;10372:19;;10306:23;5330:10;5319:22;5307:35;;5254:94;10338:54;-1:-1:-1;8532:12:121;;10448:3;10433:19;;8520:25;8598:4;8587:16;;8581:23;8606:10;8577:40;8561:14;;;8554:64;8671:4;8660:16;;8654:23;8679:6;8650:36;8634:14;;;8627:60;10462:53;10510:3;10499:9;10495:19;10487:6;10462:53;:::i;:::-;10524:56;10575:3;10564:9;10560:19;10552:6;10524:56;:::i;:::-;8988:1598;;;;;;;;;;;;:::o;11057:1630::-;11247:6;11255;11263;11271;11279;11287;11295;11303;11311;11319;11372:3;11360:9;11351:7;11347:23;11343:33;11340:53;;;11389:1;11386;11379:12;11340:53;11428:9;11415:23;11447:31;11472:5;11447:31;:::i;:::-;11497:5;-1:-1:-1;11549:2:121;11534:18;;11521:32;;-1:-1:-1;11600:2:121;11585:18;;11572:32;;-1:-1:-1;11656:2:121;11641:18;;11628:32;11669;11628;11669;:::i;:::-;11720:7;-1:-1:-1;11779:3:121;11764:19;;11751:33;11793:32;11751:33;11793:32;:::i;:::-;11844:7;-1:-1:-1;11902:3:121;11887:19;;11874:33;11926:18;11956:14;;;11953:34;;;11983:1;11980;11973:12;11953:34;12022:59;12073:7;12064:6;12053:9;12049:22;12022:59;:::i;:::-;12100:8;;-1:-1:-1;11996:85:121;-1:-1:-1;12187:3:121;12172:19;;12159:33;;-1:-1:-1;12201:33:121;12159;12201;:::i;:::-;12253:7;;-1:-1:-1;12313:3:121;12298:19;;12285:33;;12330:16;;;12327:36;;;12359:1;12356;12349:12;12327:36;12397:8;12386:9;12382:24;12372:34;;12444:7;12437:4;12433:2;12429:13;12425:27;12415:55;;12466:1;12463;12456:12;12415:55;12506:2;12493:16;12532:2;12524:6;12521:14;12518:34;;;12548:1;12545;12538:12;12518:34;12601:7;12596:2;12586:6;12583:1;12579:14;12575:2;12571:23;12567:32;12564:45;12561:65;;;12622:1;12619;12612:12;12561:65;12653:2;12649;12645:11;12635:21;;12675:6;12665:16;;;;;11057:1630;;;;;;;;;;;;;:::o;13209:1323::-;13348:6;13356;13364;13372;13380;13388;13396;13404;13457:3;13445:9;13436:7;13432:23;13428:33;13425:53;;;13474:1;13471;13464:12;13425:53;13513:9;13500:23;13532:30;13556:5;13532:30;:::i;:::-;13581:5;-1:-1:-1;13638:2:121;13623:18;;13610:32;13651:33;13610:32;13651:33;:::i;:::-;13703:7;-1:-1:-1;13762:2:121;13747:18;;13734:32;13775:33;13734:32;13775:33;:::i;:::-;13827:7;-1:-1:-1;13886:2:121;13871:18;;13858:32;13899:33;13858:32;13899:33;:::i;:::-;13951:7;-1:-1:-1;14009:3:121;13994:19;;13981:33;14033:18;14063:14;;;14060:34;;;14090:1;14087;14080:12;14060:34;14128:6;14117:9;14113:22;14103:32;;14173:7;14166:4;14162:2;14158:13;14154:27;14144:55;;14195:1;14192;14185:12;14144:55;14235:2;14222:16;14261:2;14253:6;14250:14;14247:34;;;14277:1;14274;14267:12;14247:34;14330:7;14325:2;14315:6;14312:1;14308:14;14304:2;14300:23;14296:32;14293:45;14290:65;;;14351:1;14348;14341:12;14290:65;14382:2;14378;14374:11;14364:21;;14404:6;14394:16;;;;;14429:39;14463:3;14452:9;14448:19;14429:39;:::i;:::-;14419:49;;14487:39;14521:3;14510:9;14506:19;14487:39;:::i;:::-;14477:49;;13209:1323;;;;;;;;;;;:::o;14537:206::-;14682:2;14667:18;;14694:43;14671:9;14719:6;14694:43;:::i;14748:245::-;14806:6;14859:2;14847:9;14838:7;14834:23;14830:32;14827:52;;;14875:1;14872;14865:12;14827:52;14914:9;14901:23;14933:30;14957:5;14933:30;:::i;15230:127::-;15291:10;15286:3;15282:20;15279:1;15272:31;15322:4;15319:1;15312:15;15346:4;15343:1;15336:15;15362:172;15429:10;15459;;;15471;;;15455:27;;15494:11;;;15491:37;;;15508:18;;:::i;15539:380::-;15618:1;15614:12;;;;15661;;;15682:61;;15736:4;15728:6;15724:17;15714:27;;15682:61;15789:2;15781:6;15778:14;15758:18;15755:38;15752:161;;15835:10;15830:3;15826:20;15823:1;15816:31;15870:4;15867:1;15860:15;15898:4;15895:1;15888:15;15752:161;;15539:380;;;:::o;15924:251::-;15994:6;16047:2;16035:9;16026:7;16022:23;16018:32;16015:52;;;16063:1;16060;16053:12;16015:52;16095:9;16089:16;16114:31;16139:5;16114:31;:::i;16849:573::-;17127:6;17116:9;17109:25;17170:2;17165;17154:9;17150:18;17143:30;17090:4;17196:45;17237:2;17226:9;17222:18;17214:6;17196:45;:::i;:::-;17277:22;;;17272:2;17257:18;;;17250:50;17324:2;17309:18;;-1:-1:-1;;;17355:2:121;17343:15;;17336:48;17401:15;;;;;16849:573;-1:-1:-1;;;16849:573:121:o;19184:125::-;19249:9;;;19270:10;;;19267:36;;;19283:18;;:::i;19314:175::-;19382:10;19425;;;19413;;;19409:27;;19448:12;;;19445:38;;;19463:18;;:::i;19494:249::-;19565:10;19607;;;19619;;;19603:27;19650:20;;;;19565:10;19689:24;;;19679:58;;19717:18;;:::i;:::-;19679:58;;19494:249;;;;:::o;19748:113::-;19835:1;19828:5;19825:12;19815:40;;19851:1;19848;19841:12;19866:1249;20187:25;;;20135:2;20231;20249:18;;;20242:30;;;20160:18;;;20307:22;;;20106:4;;20135:2;20348;;20366:18;;;20407:6;20106:4;20441:648;20455:6;20452:1;20449:13;20441:648;;;20530:6;20517:20;20550:43;20587:5;20550:43;:::i;:::-;20626:1;20619:5;20616:12;20606:46;;20632:18;;:::i;:::-;20665;;20730:15;;;20717:29;20703:12;;;20696:51;20794:15;;;20781:29;20767:12;;;20760:51;20852:15;;;20839:29;20881:33;20839:29;20881:33;:::i;:::-;-1:-1:-1;;;;;20948:33:121;20934:12;;;20927:55;21005:4;21029:12;;;;21064:15;;;;;20978:1;20470:9;20441:648;;;-1:-1:-1;21106:3:121;;19866:1249;-1:-1:-1;;;;;;;;;19866:1249:121:o;21120:164::-;21196:13;;21245;;21238:21;21228:32;;21218:60;;21274:1;21271;21264:12;21289:202;21356:6;21409:2;21397:9;21388:7;21384:23;21380:32;21377:52;;;21425:1;21422;21415:12;21377:52;21448:37;21475:9;21448:37;:::i;22258:128::-;22325:9;;;22346:11;;;22343:37;;;22360:18;;:::i;23052:571::-;23330:6;23319:9;23312:25;23373:2;23368;23357:9;23353:18;23346:30;23293:4;23399:45;23440:2;23429:9;23425:18;23417:6;23399:45;:::i;:::-;23480:22;;;23475:2;23460:18;;;23453:50;23527:2;23512:18;;-1:-1:-1;;;23558:2:121;23546:15;;23539:46;23602:15;;;;;23052:571;-1:-1:-1;;;23052:571:121:o;23628:263::-;23704:6;23712;23765:2;23753:9;23744:7;23740:23;23736:32;23733:52;;;23781:1;23778;23771:12;23733:52;23804:37;23831:9;23804:37;:::i;:::-;23794:47;;23881:2;23870:9;23866:18;23860:25;23850:35;;23628:263;;;;;:::o;24933:249::-;25002:6;25055:2;25043:9;25034:7;25030:23;25026:32;25023:52;;;25071:1;25068;25061:12;25023:52;25103:9;25097:16;25122:30;25146:5;25122:30;:::i;25717:410::-;25919:2;25901:21;;;25958:2;25938:18;;;25931:30;25997:34;25992:2;25977:18;;25970:62;-1:-1:-1;;;26063:2:121;26048:18;;26041:44;26117:3;26102:19;;25717:410::o;26488:127::-;26549:10;26544:3;26540:20;26537:1;26530:31;26580:4;26577:1;26570:15;26604:4;26601:1;26594:15;26975:135;27014:3;27035:17;;;27032:43;;27055:18;;:::i;:::-;-1:-1:-1;27102:1:121;27091:13;;26975:135::o;27593:384::-;-1:-1:-1;;;;;;27778:33:121;;27766:46;;27835:13;;27748:3;;27857:74;27835:13;27920:1;27911:11;;27904:4;27892:17;;27857:74;:::i;:::-;27951:16;;;;27969:1;27947:24;;27593:384;-1:-1:-1;;;27593:384:121:o;27982:287::-;28111:3;28149:6;28143:13;28165:66;28224:6;28219:3;28212:4;28204:6;28200:17;28165:66;:::i;:::-;28247:16;;;;;27982:287;-1:-1:-1;;27982:287:121:o;30679:115::-;30768:1;30761:5;30758:12;30748:40;;30784:1;30781;30774:12;30799:419;30899:6;30907;30960:2;30948:9;30939:7;30935:23;30931:32;30928:52;;;30976:1;30973;30966:12;30928:52;31008:9;31002:16;31027:30;31051:5;31027:30;:::i;:::-;31126:2;31111:18;;31105:25;31076:5;;-1:-1:-1;31139:47:121;31105:25;31139:47;:::i;31223:249::-;31292:6;31345:2;31333:9;31324:7;31320:23;31316:32;31313:52;;;31361:1;31358;31351:12;31313:52;31393:9;31387:16;31412:30;31436:5;31412:30;:::i;31477:282::-;31564:6;31617:2;31605:9;31596:7;31592:23;31588:32;31585:52;;;31633:1;31630;31623:12;31585:52;31665:9;31659:16;31684:45;31723:5;31684:45;:::i;31764:127::-;31825:10;31820:3;31816:20;31813:1;31806:31;31856:4;31853:1;31846:15;31880:4;31877:1;31870:15;32022:545;32124:2;32119:3;32116:11;32113:448;;;32160:1;32185:5;32181:2;32174:17;32230:4;32226:2;32216:19;32300:2;32288:10;32284:19;32281:1;32277:27;32271:4;32267:38;32336:4;32324:10;32321:20;32318:47;;;-1:-1:-1;32359:4:121;32318:47;32414:2;32409:3;32405:12;32402:1;32398:20;32392:4;32388:31;32378:41;;32469:82;32487:2;32480:5;32477:13;32469:82;;;32532:17;;;32513:1;32502:13;32469:82;;32743:1206;32867:18;32862:3;32859:27;32856:53;;;32889:18;;:::i;:::-;32918:94;33008:3;32968:38;33000:4;32994:11;32968:38;:::i;:::-;32962:4;32918:94;:::i;:::-;33038:1;33063:2;33058:3;33055:11;33080:1;33075:616;;;;33735:1;33752:3;33749:93;;;-1:-1:-1;33808:19:121;;;33795:33;33749:93;-1:-1:-1;;32700:1:121;32696:11;;;32692:24;32688:29;32678:40;32724:1;32720:11;;;32675:57;33855:78;;33048:895;;33075:616;31969:1;31962:14;;;32006:4;31993:18;;-1:-1:-1;;33111:17:121;;;33212:9;33234:229;33248:7;33245:1;33242:14;33234:229;;;33337:19;;;33324:33;33309:49;;33444:4;33429:20;;;;33397:1;33385:14;;;;33264:12;33234:229;;;33238:3;33491;33482:7;33479:16;33476:159;;;33615:1;33611:6;33605:3;33599;33596:1;33592:11;33588:21;33584:34;33580:39;33567:9;33562:3;33558:19;33545:33;33541:79;33533:6;33526:95;33476:159;;;33678:1;33672:3;33669:1;33665:11;33661:19;33655:4;33648:33;33048:895;;32743:1206;;;:::o;33954:273::-;34139:6;34131;34126:3;34113:33;34095:3;34165:16;;34190:13;;;34165:16;33954:273;-1:-1:-1;33954:273:121:o;34232:168::-;34305:9;;;34336;;34353:15;;;34347:22;;34333:37;34323:71;;34374:18;;:::i;35171:127::-;35232:10;35227:3;35223:20;35220:1;35213:31;35263:4;35260:1;35253:15;35287:4;35284:1;35277:15;35303:120;35343:1;35369;35359:35;;35374:18;;:::i;:::-;-1:-1:-1;35408:9:121;;35303:120::o;35428:112::-;35460:1;35486;35476:35;;35491:18;;:::i;:::-;-1:-1:-1;35525:9:121;;35428:112::o;35824:275::-;35906:6;35959:2;35947:9;35938:7;35934:23;35930:32;35927:52;;;35975:1;35972;35965:12;35927:52;36007:9;36001:16;36026:43;36063:5;36026:43;:::i;36484:407::-;36686:2;36668:21;;;36725:2;36705:18;;;36698:30;36764:34;36759:2;36744:18;;36737:62;-1:-1:-1;;;36830:2:121;36815:18;;36808:41;36881:3;36866:19;;36484:407::o;38376:136::-;38415:3;38443:5;38433:39;;38452:18;;:::i;:::-;-1:-1:-1;;;38488:18:121;;38376:136::o;39227:200::-;39293:9;;;39266:4;39321:9;;39349:10;;39361:12;;;39345:29;39384:12;;;39376:21;;39342:56;39339:82;;;39401:18;;:::i;39432:193::-;39471:1;39497;39487:35;;39502:18;;:::i;:::-;-1:-1:-1;;;39538:18:121;;-1:-1:-1;;39558:13:121;;39534:38;39531:64;;;39575:18;;:::i;:::-;-1:-1:-1;39609:10:121;;39432:193::o;39630:216::-;39694:9;;;39722:11;;;39669:3;39752:9;;39780:10;;39776:19;;39805:10;;39797:19;;39773:44;39770:70;;;39820:18;;:::i;39851:237::-;39923:9;;;39890:7;39948:9;;-1:-1:-1;;;39959:18:121;;39944:34;39941:60;;;39981:18;;:::i;:::-;40054:1;40045:7;40040:16;40037:1;40034:23;40030:1;40023:9;40020:38;40010:72;;40062:18;;:::i;40093:446::-;40343:2;40332:9;40325:21;40382:1;40377:2;40366:9;40362:18;40355:29;-1:-1:-1;;;40415:2:121;40404:9;40400:18;40393:35;40466:3;40459:4;40448:9;40444:20;40437:33;40306:4;40487:46;40528:3;40517:9;40513:19;40505:6;40487:46;:::i;40544:127::-;40605:10;40600:3;40596:20;40593:1;40586:31;40636:4;40633:1;40626:15;40660:4;40657:1;40650:15;42720:422;42809:1;42852:5;42809:1;42866:270;42887:7;42877:8;42874:21;42866:270;;;42946:4;42942:1;42938:6;42934:17;42928:4;42925:27;42922:53;;;42955:18;;:::i;:::-;43005:7;42995:8;42991:22;42988:55;;;43025:16;;;;42988:55;43104:22;;;;43064:15;;;;42866:270;;;42870:3;42720:422;;;;;:::o;43147:806::-;43196:5;43226:8;43216:80;;-1:-1:-1;43267:1:121;43281:5;;43216:80;43315:4;43305:76;;-1:-1:-1;43352:1:121;43366:5;;43305:76;43397:4;43415:1;43410:59;;;;43483:1;43478:130;;;;43390:218;;43410:59;43440:1;43431:10;;43454:5;;;43478:130;43515:3;43505:8;43502:17;43499:43;;;43522:18;;:::i;:::-;-1:-1:-1;;43578:1:121;43564:16;;43593:5;;43390:218;;43692:2;43682:8;43679:16;43673:3;43667:4;43664:13;43660:36;43654:2;43644:8;43641:16;43636:2;43630:4;43627:12;43623:35;43620:77;43617:159;;;-1:-1:-1;43729:19:121;;;43761:5;;43617:159;43808:34;43833:8;43827:4;43808:34;:::i;:::-;43878:6;43874:1;43870:6;43866:19;43857:7;43854:32;43851:58;;;43889:18;;:::i;:::-;43927:20;;43147:806;-1:-1:-1;;;43147:806:121:o;43958:131::-;44018:5;44047:36;44074:8;44068:4;44047:36;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "2064": [
        {
          "start": 2560,
          "length": 32
        },
        {
          "start": 21206,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CURRENT_CODE_VERSION()": "4148f94c",
    "IS_TEST()": "fa7626d4",
    "_lenderVolumeFilled(address)": "b5d34fcd",
    "_totalVolumeFilled()": "1289b396",
    "addLendingToken(address)": "d76ac91f",
    "approveMarketForwarder(uint256,address)": "2e9332d4",
    "bidDefaultDuration(uint256)": "6b76c085",
    "bidExpirationTime(uint256)": "127caa88",
    "bidId()": "8ac47319",
    "bidPaymentCycleType(uint256)": "36735891",
    "bids(uint256)": "4423c5f1",
    "borrowerBids(address,uint256)": "3819bcdc",
    "calculateAmountDue(uint256)": "d974cc57",
    "calculateAmountDue(uint256,uint256)": "6aedfe68",
    "calculateAmountOwed(uint256)": "6c6ca79c",
    "calculateAmountOwed(uint256,uint256)": "1042b85f",
    "calculateNextDueDate(uint256)": "706a43c3",
    "cancelBid(uint256)": "9703ef35",
    "claimLoanNFT(uint256)": "18520f05",
    "collateralManager()": "23be345c",
    "failed()": "ba414fa6",
    "getBidState(uint256)": "bf77ffae",
    "getBorrowerActiveLoanIds(address)": "054de0ff",
    "getBorrowerLoanIds(address)": "1d123633",
    "getLendingTokens()": "235d5a7b",
    "getLoanBorrower(uint256)": "3ef0a2f7",
    "getLoanLender(uint256)": "a10905ea",
    "getLoanLendingToken(uint256)": "14573033",
    "getLoanMarketId(uint256)": "40910c70",
    "getMetadataURI(uint256)": "bde644fb",
    "hasApprovedMarketForwarder(uint256,address,address)": "19b353de",
    "initialize(uint16,address,address,address,address[],address,address)": "b97e8141",
    "isLoanDefaulted(uint256)": "e8cbab09",
    "isLoanExpired(uint256)": "10618223",
    "isPaymentLate(uint256)": "093f5617",
    "isTrustedForwarder(address)": "572b6c05",
    "isTrustedMarketForwarder(uint256,address)": "d87569cc",
    "lastRepaidTimestamp(uint256)": "a51e2bad",
    "lenderAcceptBid(uint256)": "a8cb5d68",
    "lenderCommitmentForwarder()": "ba6d5b15",
    "lenderManager()": "4a06f6ea",
    "lenderVolumeFilled(address,address)": "089487b5",
    "liquidateLoanFull(uint256)": "8288da8a",
    "marketOwnerCancelBid(uint256)": "206c54c7",
    "marketRegistry()": "ecb96fe6",
    "onUpgrade(address)": "fa34c84e",
    "owner()": "8da5cb5b",
    "pauseProtocol()": "dbf62489",
    "paused()": "5c975abb",
    "protocolFee()": "b0e21e8a",
    "removeLendingToken(address)": "a75021ba",
    "renounceOwnership()": "715018a6",
    "repayLoan(uint256,uint256)": "8a700b53",
    "repayLoanFull(uint256)": "9a11e339",
    "repayLoanMinimum(uint256)": "d4eda4cf",
    "reputationManager()": "6b868afb",
    "setProtocolFee(uint16)": "e4467f35",
    "setReputationManager(address)": "56a837f4",
    "setTrustedMarketForwarder(uint256,address)": "1420a266",
    "submitBid(address,uint256,uint256,uint32,uint16,string,address)": "06f33a92",
    "submitBid(address,uint256,uint256,uint32,uint16,string,address,(uint8,uint256,uint256,address)[])": "7bbd53d7",
    "test_01_nextDueDate()": "428406c3",
    "test_02_nextDueDate()": "0db7b8b5",
    "test_03_nextDueDate()": "331f3209",
    "test_04_nextDueDate()": "ee100165",
    "totalVolumeFilled(address)": "2519dc79",
    "transferOwnership(address)": "f2fde38b",
    "unpauseProtocol()": "f93b6be5",
    "uris(uint256)": "1253c546",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"ActionNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumOwed\",\"type\":\"uint256\"}],\"name\":\"PaymentNotMinimum\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"AcceptedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"}],\"name\":\"CancelledBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"feeType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"}],\"name\":\"LoanRepayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"MarketForwarderApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"}],\"name\":\"MarketOwnerCancelledBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newFee\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldFee\",\"type\":\"uint16\"}],\"name\":\"ProtocolFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"metadataURI\",\"type\":\"bytes32\"}],\"name\":\"SubmittedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"TrustedMarketForwarderSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CURRENT_CODE_VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_lenderVolumeFilled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalVolumeFilled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lendingToken\",\"type\":\"address\"}],\"name\":\"addLendingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_forwarder\",\"type\":\"address\"}],\"name\":\"approveMarketForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bidDefaultDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bidExpirationTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bidId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bidPaymentCycleType\",\"outputs\":[{\"internalType\":\"enum PaymentCycleType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketplaceId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_metadataURI\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"lendingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"}],\"internalType\":\"struct Payment\",\"name\":\"totalRepaid\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"acceptedTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"lastRepaidTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"loanDuration\",\"type\":\"uint32\"}],\"internalType\":\"struct LoanDetails\",\"name\":\"loanDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paymentCycleAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"paymentCycle\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"APR\",\"type\":\"uint16\"}],\"internalType\":\"struct Terms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"internalType\":\"enum BidState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"enum PaymentType\",\"name\":\"paymentType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowerBids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"calculateAmountDue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"}],\"internalType\":\"struct Payment\",\"name\":\"due\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"calculateAmountDue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"}],\"internalType\":\"struct Payment\",\"name\":\"due\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"calculateAmountOwed\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"}],\"internalType\":\"struct Payment\",\"name\":\"owed\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"calculateAmountOwed\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"}],\"internalType\":\"struct Payment\",\"name\":\"owed\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"calculateNextDueDate\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"dueDate_\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"cancelBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"claimLoanNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralManager\",\"outputs\":[{\"internalType\":\"contract ICollateralManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"getBidState\",\"outputs\":[{\"internalType\":\"enum BidState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerActiveLoanIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerLoanIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"getLoanBorrower\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrower_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"getLoanLender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lender_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"getLoanLendingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"getLoanMarketId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"getMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI_\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_forwarder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"hasApprovedMarketForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolFee\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_marketRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reputationManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lenderCommitmentForwarder\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_lendingTokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_collateralManagerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lenderManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"isLoanDefaulted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"isLoanExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"isPaymentLate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_trustedMarketForwarder\",\"type\":\"address\"}],\"name\":\"isTrustedMarketForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"lastRepaidTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"lenderAcceptBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToProtocol\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToMarketplace\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToBorrower\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lenderCommitmentForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lenderManager\",\"outputs\":[{\"internalType\":\"contract ILenderManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lenderVolumeFilled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"liquidateLoanFull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"marketOwnerCancelBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketRegistry\",\"outputs\":[{\"internalType\":\"contract IMarketRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lenderManager\",\"type\":\"address\"}],\"name\":\"onUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lendingToken\",\"type\":\"address\"}],\"name\":\"removeLendingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"repayLoanFull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidId\",\"type\":\"uint256\"}],\"name\":\"repayLoanMinimum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationManager\",\"outputs\":[{\"internalType\":\"contract IReputationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newFee\",\"type\":\"uint16\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reputationManager\",\"type\":\"address\"}],\"name\":\"setReputationManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedMarketForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lendingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_marketplaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_principal\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_duration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_APR\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"submitBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lendingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_marketplaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_principal\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_duration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_APR\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum CollateralType\",\"name\":\"_collateralType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_collateralAddress\",\"type\":\"address\"}],\"internalType\":\"struct Collateral[]\",\"name\":\"_collateralInfo\",\"type\":\"tuple[]\"}],\"name\":\"submitBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_01_nextDueDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_02_nextDueDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_03_nextDueDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_04_nextDueDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalVolumeFilled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ActionNotAllowed(uint256,string,string)\":[{\"params\":{\"action\":\"The action string (i.e: 'repayLoan', 'cancelBid', 'etc)\",\"bidId\":\"The id of the bid.\",\"message\":\"The message string to return to the user explaining why the tx was reverted\"}}],\"PaymentNotMinimum(uint256,uint256,uint256)\":[{\"params\":{\"bidId\":\"The id of the bid the borrower is attempting to repay.\",\"minimumOwed\":\"The minimum owed value\",\"payment\":\"The payment made by the borrower\"}}]},\"kind\":\"dev\",\"methods\":{\"addLendingToken(address)\":{\"params\":{\"_lendingToken\":\"The contract address of the lending token.\"}},\"approveMarketForwarder(uint256,address)\":{\"params\":{\"_forwarder\":\"A forwarder contract address.\",\"_marketId\":\"An ID for a lending market.\"}},\"calculateAmountDue(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid to get the payment amount for.\"}},\"calculateAmountDue(uint256,uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid to get the payment amount for.\",\"_timestamp\":\"The timestamp at which to get the due payment at.\"}},\"calculateAmountOwed(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid to calculate the owed amount for.\"}},\"calculateAmountOwed(uint256,uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid to calculate the owed amount for.\",\"_timestamp\":\"The timestamp at which to calculate the loan owed amount at.\"}},\"calculateNextDueDate(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid.\"}},\"cancelBid(uint256)\":{\"params\":{\"_bidId\":\"The id of the bid to cancel.\"}},\"getLoanBorrower(uint256)\":{\"params\":{\"_bidId\":\"The id of the bid/loan to get the borrower for.\"},\"returns\":{\"borrower_\":\"The address of the borrower associated with the bid.\"}},\"getLoanLender(uint256)\":{\"params\":{\"_bidId\":\"The id of the bid/loan to get the lender for.\"},\"returns\":{\"lender_\":\"The address of the lender associated with the bid.\"}},\"getMetadataURI(uint256)\":{\"params\":{\"_bidId\":\"The id of the bid to return the metadataURI for\"},\"returns\":{\"metadataURI_\":\"The metadataURI for the bid, as a string.\"}},\"hasApprovedMarketForwarder(uint256,address,address)\":{\"params\":{\"_account\":\"The address to verify set an approval.\",\"_forwarder\":\"A forwarder contract address.\",\"_marketId\":\"An ID for a lending market.\"},\"returns\":{\"_0\":\"A boolean indicating if an approval was set.\"}},\"initialize(uint16,address,address,address,address[],address,address)\":{\"params\":{\"_collateralManagerAddress\":\"The address of the collateral manager contracts.\",\"_lenderCommitmentForwarder\":\"The address of the lender commitment forwarder contract.\",\"_lenderManager\":\"The address of the lender manager contract for loans on the protocol.\",\"_lendingTokens\":\"The list of tokens allowed as lending assets on the protocol.\",\"_marketRegistry\":\"The address of the market registry contract for the protocol.\",\"_protocolFee\":\"The fee collected by the protocol for loan processing.\",\"_reputationManager\":\"The address of the reputation manager contract.\"}},\"isLoanDefaulted(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid to check for.\"}},\"isLoanExpired(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid to check for.\"}},\"isPaymentLate(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid to check for.\"}},\"isTrustedMarketForwarder(uint256,address)\":{\"params\":{\"_marketId\":\"An ID for a lending market.\",\"_trustedMarketForwarder\":\"An address to check if is a trusted forwarder in the given market.\"},\"returns\":{\"_0\":\"A boolean indicating the forwarder address is trusted in a market.\"}},\"lastRepaidTimestamp(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid to get the timestamp for.\"}},\"lenderAcceptBid(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan bid to accept.\"}},\"liquidateLoanFull(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan to make the payment towards.\"}},\"marketOwnerCancelBid(uint256)\":{\"params\":{\"_bidId\":\"The id of the bid to cancel.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeLendingToken(address)\":{\"params\":{\"_lendingToken\":\"The contract address of the lending token.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repayLoan(uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the payment.\",\"_bidId\":\"The id of the loan to make the payment towards.\"}},\"repayLoanFull(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan to make the payment towards.\"}},\"repayLoanMinimum(uint256)\":{\"params\":{\"_bidId\":\"The id of the loan to make the payment towards.\"}},\"setProtocolFee(uint16)\":{\"params\":{\"newFee\":\"The new protocol fee to be set.\"}},\"setReputationManager(address)\":{\"params\":{\"_reputationManager\":\"The new contract address.\"}},\"setTrustedMarketForwarder(uint256,address)\":{\"params\":{\"_forwarder\":\"A forwarder contract address.\",\"_marketId\":\"An ID for a lending market.\"}},\"submitBid(address,uint256,uint256,uint32,uint16,string,address)\":{\"params\":{\"_APR\":\"The proposed interest rate for the loan bid.\",\"_duration\":\"The recurrent length of time before which a payment is due.\",\"_lendingToken\":\"The lending token asset requested to be borrowed.\",\"_marketplaceId\":\"The unique id of the marketplace for the bid.\",\"_metadataURI\":\"The URI for additional borrower loan information as part of loan bid.\",\"_principal\":\"The principal amount of the loan bid.\",\"_receiver\":\"The address where the loan amount will be sent to.\"}},\"submitBid(address,uint256,uint256,uint32,uint16,string,address,(uint8,uint256,uint256,address)[])\":{\"params\":{\"_APR\":\"The proposed interest rate for the loan bid.\",\"_collateralInfo\":\"Additional information about the collateral asset.\",\"_duration\":\"The recurrent length of time before which a payment is due.\",\"_lendingToken\":\"The lending token asset requested to be borrowed.\",\"_marketplaceId\":\"The unique id of the marketplace for the bid.\",\"_metadataURI\":\"The URI for additional borrower loan information as part of loan bid.\",\"_principal\":\"The principal amount of the loan bid.\",\"_receiver\":\"The address where the loan amount will be sent to.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ActionNotAllowed(uint256,string,string)\":[{\"notice\":\"This error is reverted when the action isn't allowed\"}],\"PaymentNotMinimum(uint256,uint256,uint256)\":[{\"notice\":\"This error is reverted when repayment amount is less than the required minimum\"}]},\"events\":{\"AcceptedBid(uint256,address)\":{\"notice\":\"This event is emitted when a bid has been accepted by a lender.\"},\"CancelledBid(uint256)\":{\"notice\":\"This event is emitted when a previously submitted bid has been cancelled.\"},\"FeePaid(uint256,string,uint256)\":{\"notice\":\"This event is emitted when a fee has been paid related to a bid.\"},\"LoanLiquidated(uint256,address)\":{\"notice\":\"This event is emitted when a loan has been fully repaid.\"},\"LoanRepaid(uint256)\":{\"notice\":\"This event is emitted when a loan has been fully repaid.\"},\"LoanRepayment(uint256)\":{\"notice\":\"This event is emitted when a payment is made towards an active loan.\"},\"MarketOwnerCancelledBid(uint256)\":{\"notice\":\"This event is emitted when market owner has cancelled a pending bid in their market.\"},\"ProtocolFeeSet(uint16,uint16)\":{\"notice\":\"This event is emitted when the protocol fee has been updated.\"},\"SubmittedBid(uint256,address,address,bytes32)\":{\"notice\":\"This event is emitted when a new bid is submitted.\"}},\"kind\":\"user\",\"methods\":{\"CURRENT_CODE_VERSION()\":{\"notice\":\"Constant Variables *\"},\"addLendingToken(address)\":{\"notice\":\"Lets the DAO/owner of the protocol add an authorized lending token.\"},\"approveMarketForwarder(uint256,address)\":{\"notice\":\"Approves a forwarder contract to use their address as a sender for a specific market.The forwarder given must be trusted by the market given.\"},\"bidId()\":{\"notice\":\"Storage Variables \"},\"calculateAmountDue(uint256)\":{\"notice\":\"Calculates the minimum payment amount due for a loan.\"},\"calculateAmountDue(uint256,uint256)\":{\"notice\":\"Calculates the minimum payment amount due for a loan at a specific timestamp.\"},\"calculateAmountOwed(uint256)\":{\"notice\":\"Calculates the total amount owed for a bid.\"},\"calculateAmountOwed(uint256,uint256)\":{\"notice\":\"Calculates the total amount owed for a loan bid at a specific timestamp.\"},\"calculateNextDueDate(uint256)\":{\"notice\":\"Returns the next due date for a loan payment.\"},\"cancelBid(uint256)\":{\"notice\":\"Function for a borrower to cancel their pending bid.\"},\"getLendingTokens()\":{\"notice\":\"Returns the list of authorized tokens on the protocol.\"},\"getLoanBorrower(uint256)\":{\"notice\":\"Returns the borrower address for a given bid.\"},\"getLoanLender(uint256)\":{\"notice\":\"Returns the lender address for a given bid. If the stored lender address is the `LenderManager` NFT address, return the `ownerOf` for the bid ID.\"},\"getMetadataURI(uint256)\":{\"notice\":\"Gets the metadataURI for a bidId.\"},\"hasApprovedMarketForwarder(uint256,address,address)\":{\"notice\":\"Checks if an account has approved a forwarder for a market.\"},\"initialize(uint16,address,address,address,address[],address,address)\":{\"notice\":\"Initializes the proxy.\"},\"isLoanDefaulted(uint256)\":{\"notice\":\"Checks to see if a borrower is delinquent.\"},\"isLoanExpired(uint256)\":{\"notice\":\"Checks to see if a pending loan has expired so it is no longer able to be accepted.\"},\"isPaymentLate(uint256)\":{\"notice\":\"Checks to see if a borrower is delinquent.\"},\"isTrustedMarketForwarder(uint256,address)\":{\"notice\":\"Checks if an address is a trusted forwarder contract for a given market.\"},\"lastRepaidTimestamp(uint256)\":{\"notice\":\"Returns the last repaid timestamp for a loan.\"},\"lenderAcceptBid(uint256)\":{\"notice\":\"Function for a lender to accept a proposed loan bid.\"},\"liquidateLoanFull(uint256)\":{\"notice\":\"Function for users to liquidate a defaulted loan.\"},\"marketOwnerCancelBid(uint256)\":{\"notice\":\"Function for a market owner to cancel a bid in the market.\"},\"pauseProtocol()\":{\"notice\":\"Lets the DAO/owner of the protocol implement an emergency stop mechanism.\"},\"protocolFee()\":{\"notice\":\"Returns the current protocol fee.\"},\"removeLendingToken(address)\":{\"notice\":\"Lets the DAO/owner of the protocol remove an authorized lending token.\"},\"repayLoan(uint256,uint256)\":{\"notice\":\"Function for users to make a payment towards an active loan.\"},\"repayLoanFull(uint256)\":{\"notice\":\"Function for users to repay an active loan in full.\"},\"repayLoanMinimum(uint256)\":{\"notice\":\"Function for users to make the minimum amount due for an active loan.\"},\"setProtocolFee(uint16)\":{\"notice\":\"Lets the DAO/owner of the protocol to set a new protocol fee.\"},\"setReputationManager(address)\":{\"notice\":\"Lets the DAO/owner of the protocol to set a new reputation manager contract.\"},\"setTrustedMarketForwarder(uint256,address)\":{\"notice\":\"Sets a trusted forwarder for a lending market.The caller must owner the market given. See {MarketRegistry}\"},\"submitBid(address,uint256,uint256,uint32,uint16,string,address)\":{\"notice\":\"Function for a borrower to create a bid for a loan without Collateral.\"},\"submitBid(address,uint256,uint256,uint32,uint16,string,address,(uint8,uint256,uint256,address)[])\":{\"notice\":\"Function for a borrower to create a bid for a loan with Collateral.\"},\"unpauseProtocol()\":{\"notice\":\"Lets the DAO/owner of the protocol undo a previously implemented emergency stop.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/NextDueDate_test.sol\":\"NextDueDate_Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@mangrovedao/=node_modules/@mangrovedao/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/EAS/TellerAS.sol\":{\"keccak256\":\"0x01848d2b9b7815144137d3ad654ac3246dd740f03e9e951ecf70374d71f8e354\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18ac37f315357b8ae3da92f2c5a71dfe3619bf8a2c0c4fc5f66e1f058ee0cdb7\",\"dweb:/ipfs/QmbsDurxc5zdYUtMTb4Hz3M629cLA21HnQGQYD1KRTk8Qs\"]},\"contracts/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xca6e53699cb6e4001eff7527dc3fcea591be3b04514ab899933fc0f107de4933\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66297aa8ca1f16c511b761f5060333780478578bf866a7c8f90af2c44b4dfcdd\",\"dweb:/ipfs/QmcxadMsCeUAb2nkspETvEFGUDCWhvnaFpECogUtJKLvbB\"]},\"contracts/ProtocolFee.sol\":{\"keccak256\":\"0x8a4fbca87131233a11efc1c5006a9b9d5ea45b82078c85726ce9e07ef13e2893\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://158488abd8c3e29e1d4f83173120a3d808a38f330067d94852df767ef00b4acf\",\"dweb:/ipfs/QmRc4iCqThiNT2uptvpHZPV5WCbgD5X86Ty1AfSyim2B2V\"]},\"contracts/TellerV2.sol\":{\"keccak256\":\"0x060be1606b108073edf88ac713495f31b98fe6f793fba9d3e3491da2a06bae36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a8e1b099502556969025c504cad8ee78777d15680592fc375ca8e1c80359b57\",\"dweb:/ipfs/QmepjDUsGJKYmC6m7jy2RWSLAMouTnLPvK1kdHtgbuh465\"]},\"contracts/TellerV2Context.sol\":{\"keccak256\":\"0xac04758cc31571352e976d2b33e660d8161176fdf712c76049fb1eda2289f551\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcfd63c27d26f98b2623eca2c14d817b870f648124d20370eda1e0a032ed9e43\",\"dweb:/ipfs/QmY6aCCsjpGHomnxtrVyLopTBDUzuFisgLiJ6zcy2x68Z9\"]},\"contracts/TellerV2Storage.sol\":{\"keccak256\":\"0x600fd24b7211e1883081b4389fbc715365afe563a56808f904a83235e6efbe2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87f9f5779acc5cacde04a3bea2d560a526df9a183079dca5e7ce53158d7217f9\",\"dweb:/ipfs/QmfVwkUZTaZYryw49bDgehFWjCoXQAJBUYBkD66AVGBbfN\"]},\"contracts/Types.sol\":{\"keccak256\":\"0x2e4bcf4a965f840193af8729251386c1826cd050411ba4a9e85984a2551fd2ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbab8d73d76e1aa1eaead6a911d5a35f7edb18f9c67484c08bfaa96d4e3e1d68\",\"dweb:/ipfs/QmVxRujQoBdZEote43JdaAgXkYzfqFdBbiu7rPYU3rXf2N\"]},\"contracts/interfaces/IASRegistry.sol\":{\"keccak256\":\"0x74752921f592df45c8717d7084627e823b1dbc93bad7187cd3023c9690df7e60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14ed67b4973bd1b2797604cfd652387bbe230682f3f5a41e922879a0f4d5b668\",\"dweb:/ipfs/QmTJ5fvKX7deAQ8YpoPmwyVR379BdfbKSzaHSLoje7h5Tx\"]},\"contracts/interfaces/IASResolver.sol\":{\"keccak256\":\"0xfce671ea099d9f997a69c3447eb4a9c9693d37c5b97e43ada376e614e1c7cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6673f2ba98aafbeb4bdbfbc2392b164a7ae4e82b8b8a5f5b9b484fbdf4653cc1\",\"dweb:/ipfs/QmVSkwZpHzgpTyzcydE8SptJiGRvK89KahhxBuwNZNm8d2\"]},\"contracts/interfaces/ICollateralManager.sol\":{\"keccak256\":\"0x549d37cb1390adad543f2e7b1ad46104c4326c4af7dbccda35116833103a6465\",\"urls\":[\"bzz-raw://ccadec56789cef8cd1c1467a25bf51f53cff652be7c04694643fad9af0cf4772\",\"dweb:/ipfs/QmRnx4QyayDXaYSzAMUh9TUG7WMvBBTjYD9yfJ34qRWknq\"]},\"contracts/interfaces/IEAS.sol\":{\"keccak256\":\"0x5db90829269f806ed14a6c638f38d4aac1fa0f85829b34a2fcddd5200261c148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e82edf58a6332d6966f860d847329cb7d7b51f8c30942ba55e31bf26c39f8b5\",\"dweb:/ipfs/QmZYqmByHpugi3YD6ngTfD2ViW2GFYywfzq3BJjifADpWc\"]},\"contracts/interfaces/IEASEIP712Verifier.sol\":{\"keccak256\":\"0xeca3ac3bacec52af15b2c86c5bf1a1be315aade51fa86f95da2b426b28486b1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e3d65dfbe36cc3718f5472061d283bf53ce920b929ed1a3cbab7c7129b7fe9d\",\"dweb:/ipfs/QmPDqoVWC95KkxoWeq4sreQYA2ELsMPhowi7eunU8c6qjW\"]},\"contracts/interfaces/ILenderManager.sol\":{\"keccak256\":\"0xceb1ea2ef4c6e2ad7986db84de49c959e8d59844563d27daca5b8d78b732a8f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c1997731854ff95ffcfe0a6fee9c12da3ccfc422650e9107830347317d950e\",\"dweb:/ipfs/Qmc9Y9Exop9ZNfX3QDRK6ev4nEVLDrdaCUMtNGm8fMUREd\"]},\"contracts/interfaces/IMarketRegistry.sol\":{\"keccak256\":\"0x7209557aa8e3ddd81d0b863a8c063520a0011d96e1b3690a322f3371468f6dc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba66c3c76306b24f4f5f31854d3fd92741eda12ee05f12ddc60c0031d545d502\",\"dweb:/ipfs/QmToDeLtPzo6hbxaoYg3zjwVnAox6CtDGhoSVecX6c45yC\"]},\"contracts/interfaces/IReputationManager.sol\":{\"keccak256\":\"0x8d6e50fd460912231e53135b4459aa2f6f16007ae8deb32bc2cee1e88311a8d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03916311f51b553acf71bad455de12f056d367b5fe2ba5ad1caa74fabd3315d0\",\"dweb:/ipfs/QmXnPx58qKBv5mCuUWP2AemjKsQWzGY1nMemS5NoJQ35NK\"]},\"contracts/interfaces/ITellerV2.sol\":{\"keccak256\":\"0x62c61e6811becc51d0d644e54c342279565e9d8ff5a386cde5a784440a404da7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d886317b83a41a1e8a298c5befb11ca7a5fd3c59df54ecab0c8696b945b3e84a\",\"dweb:/ipfs/QmNikGpckv9PXpxQU1ewnAapD7URV2CAAozw8r8wtZvjwe\"]},\"contracts/interfaces/escrow/ICollateralEscrowV1.sol\":{\"keccak256\":\"0xefb7928c982f328c8df17f736b2c542df12f6c5b326933076faaae970ae49fa8\",\"urls\":[\"bzz-raw://17fede8e6395ba154eff4e21bd16701d08d036b2287d74983f8d992019241ef5\",\"dweb:/ipfs/QmUBCQhUVsfp1zFoTg6dVyrGjU85uhM7F3FPD1vXbzC7ge\"]},\"contracts/libraries/DateTimeLib.sol\":{\"keccak256\":\"0xf194df8ea9946a5bb3300223629b7e4959c1f20bacba27b3dc5f6dd2a160147a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8860a1dadb201e8997ceda121019f685c4ee6a64e24ef06b008520b442b1f323\",\"dweb:/ipfs/QmYrnjEw3LSwDrdEoHHSVUtH7ww1CiVEnXwowFG8xMyZ7q\"]},\"contracts/libraries/NumbersLib.sol\":{\"keccak256\":\"0x78009ffb3737ab7615a1e38a26635d6c06b65b7b7959af46d6ef840d220e70cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://589ed65f671f403e82c6bc3d8818b972034fdd954e29f24e19520450221cc95e\",\"dweb:/ipfs/QmWiHoGhZqXZr7HEx5LqmEc4w3Xvg452RtVKiGLtmWYV4Q\"]},\"contracts/libraries/V2Calculations.sol\":{\"keccak256\":\"0xcb9f3cb8f8800aa321690418467da8dc40ff115b7697374e5c4364e4c7b2d759\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e86310f871949211747a3c40e02e421ea61d2365246d821b5a34fef7ffd5ece\",\"dweb:/ipfs/QmbGrHbZ1pnPbo1MjYvZaj7X4AuCKvFbWnyjj5nXYUu9y6\"]},\"contracts/libraries/WadRayMath.sol\":{\"keccak256\":\"0x2781319be7a96f56966c601c061849fa94dbf9af5ad80a20c40b879a8d03f14a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://267426cb6b8ef332bc61bd66a2e82ad60710fefbac46c55d7c7e4104dd2297f1\",\"dweb:/ipfs/QmazyCfuGn2amqnPU5Az1eRARbnGZGav3t5veQAjjLH8gK\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c\",\"dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf1076813373cbd519d03411288590a8d9729592934718b0f6b54ca281c855dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cc7c5c97c15c4adb648fbc35d4909f81b09e52410ffb4e8010a0f1e272a7fb5\",\"dweb:/ipfs/QmV3oNjq9tZmQBZMtaEEwaXdfcNSzu8KhupXEzcZ3BHMsc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xe3955cfd5a73fbf56acf7a7709cc9db1dfdd70e6a969bb6b19106de6f1049b4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30db8c85f6a04f5433d876859c89e51ecbea5ef6cdcadd5f2a342f216e6f6a9\",\"dweb:/ipfs/QmUm6cbRKtYcSSH2uib2f2aJ5qd6wBzkQUbPTP7jKW2Ayz\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3\",\"dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"tests/NextDueDate_test.sol\":{\"keccak256\":\"0xc666cbbb6ce66fa3f648d52fc04c0a72860a994d2e82769549fd056ae461a712\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2f0b699ddb266ff27613091a9afa133fdf5b40f89051ecc279034247b090303\",\"dweb:/ipfs/QmTLDymWLbTG1k7Z92TjstXit7n9bJuDXnbPNx8yyy3xqE\"]},\"tests/Testable.sol\":{\"keccak256\":\"0x9de2783fbe8f7ce48d88cf052e4fb9774e6d44cac1de5cdb6f3889d7d2ce4474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c42c7a748363a7a34c08ebda6a70a3d3c59828bc87651c6238cccb9eefcfd68\",\"dweb:/ipfs/Qmc1LnQMXXJL9SCTnEPu63kRXjCTMg8D72UTAxVzMB2xfW\"]},\"tests/util/FoundryTest.sol\":{\"keccak256\":\"0xdb8ac66b6e0650cf9c6f10a8949bb53f24482af3bb18dfb97368fae12fdf45f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://863071d99087fad831eb89fbfdf46b0591a75639a9c98047c521a691036a5493\",\"dweb:/ipfs/Qmc5oRMK1tQvvt5bfzJhGrLyjVXYZ2gp46rEeVnR6BHkGc\"]},\"tests/util/StdChains.sol\":{\"keccak256\":\"0xfd91ae9acfb0104800a67ab316be4274572a25521e0a98a247eb158933ba953b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://961975fca13be85b2b76234f24a954391069c5ecab444977c506f3655c6d4a35\",\"dweb:/ipfs/QmRbkn8RouoP6TUTU85pru27vMVsvwKLqPM8vERNN64yTx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "action",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "ActionNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "payment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumOwed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "PaymentNotMinimum"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AcceptedBid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CancelledBid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "feeType",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeePaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LoanLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LoanRepaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LoanRepayment",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "marketId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketForwarderApproved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MarketOwnerCancelledBid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "newFee",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "oldFee",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bidId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "metadataURI",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SubmittedBid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "marketId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TrustedMarketForwarderSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CURRENT_CODE_VERSION",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "_lenderVolumeFilled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_totalVolumeFilled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lendingToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLendingToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_marketId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveMarketForwarder"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bidDefaultDuration",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bidExpirationTime",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bidId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bidPaymentCycleType",
          "outputs": [
            {
              "internalType": "enum PaymentCycleType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bids",
          "outputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "marketplaceId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "_metadataURI",
              "type": "bytes32"
            },
            {
              "internalType": "struct LoanDetails",
              "name": "loanDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "lendingToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "principal",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Payment",
                  "name": "totalRepaid",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "principal",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "interest",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "timestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "acceptedTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "lastRepaidTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "loanDuration",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct Terms",
              "name": "terms",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paymentCycleAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "paymentCycle",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "APR",
                  "type": "uint16"
                }
              ]
            },
            {
              "internalType": "enum BidState",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "enum PaymentType",
              "name": "paymentType",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "borrowerBids",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateAmountDue",
          "outputs": [
            {
              "internalType": "struct Payment",
              "name": "due",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "principal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "interest",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateAmountDue",
          "outputs": [
            {
              "internalType": "struct Payment",
              "name": "due",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "principal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "interest",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateAmountOwed",
          "outputs": [
            {
              "internalType": "struct Payment",
              "name": "owed",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "principal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "interest",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateAmountOwed",
          "outputs": [
            {
              "internalType": "struct Payment",
              "name": "owed",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "principal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "interest",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateNextDueDate",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "dueDate_",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelBid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimLoanNFT"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralManager",
          "outputs": [
            {
              "internalType": "contract ICollateralManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidState",
          "outputs": [
            {
              "internalType": "enum BidState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowerActiveLoanIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowerLoanIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLendingTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanBorrower",
          "outputs": [
            {
              "internalType": "address",
              "name": "borrower_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanLender",
          "outputs": [
            {
              "internalType": "address",
              "name": "lender_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanLendingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "token_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanMarketId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_marketId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMetadataURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "metadataURI_",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_marketId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_forwarder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasApprovedMarketForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolFee",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "_marketRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_reputationManager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_lenderCommitmentForwarder",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_lendingTokens",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_collateralManagerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_lenderManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLoanDefaulted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLoanExpired",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPaymentLate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_marketId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_trustedMarketForwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedMarketForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastRepaidTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lenderAcceptBid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountToProtocol",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountToMarketplace",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountToBorrower",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lenderCommitmentForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lenderManager",
          "outputs": [
            {
              "internalType": "contract ILenderManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lenderVolumeFilled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidateLoanFull"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketOwnerCancelBid"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "marketRegistry",
          "outputs": [
            {
              "internalType": "contract IMarketRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lenderManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onUpgrade"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseProtocol"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lendingToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLendingToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayLoan"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayLoanFull"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bidId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayLoanMinimum"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reputationManager",
          "outputs": [
            {
              "internalType": "contract IReputationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "newFee",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_reputationManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReputationManager"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_marketId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTrustedMarketForwarder"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lendingToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_marketplaceId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_principal",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_duration",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_APR",
              "type": "uint16"
            },
            {
              "internalType": "string",
              "name": "_metadataURI",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitBid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bidId_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lendingToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_marketplaceId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_principal",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_duration",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_APR",
              "type": "uint16"
            },
            {
              "internalType": "string",
              "name": "_metadataURI",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "struct Collateral[]",
              "name": "_collateralInfo",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum CollateralType",
                  "name": "_collateralType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_collateralAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitBid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bidId_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_01_nextDueDate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_02_nextDueDate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_03_nextDueDate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_04_nextDueDate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVolumeFilled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpauseProtocol"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uris",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLendingToken(address)": {
            "params": {
              "_lendingToken": "The contract address of the lending token."
            }
          },
          "approveMarketForwarder(uint256,address)": {
            "params": {
              "_forwarder": "A forwarder contract address.",
              "_marketId": "An ID for a lending market."
            }
          },
          "calculateAmountDue(uint256)": {
            "params": {
              "_bidId": "The id of the loan bid to get the payment amount for."
            }
          },
          "calculateAmountDue(uint256,uint256)": {
            "params": {
              "_bidId": "The id of the loan bid to get the payment amount for.",
              "_timestamp": "The timestamp at which to get the due payment at."
            }
          },
          "calculateAmountOwed(uint256)": {
            "params": {
              "_bidId": "The id of the loan bid to calculate the owed amount for."
            }
          },
          "calculateAmountOwed(uint256,uint256)": {
            "params": {
              "_bidId": "The id of the loan bid to calculate the owed amount for.",
              "_timestamp": "The timestamp at which to calculate the loan owed amount at."
            }
          },
          "calculateNextDueDate(uint256)": {
            "params": {
              "_bidId": "The id of the loan bid."
            }
          },
          "cancelBid(uint256)": {
            "params": {
              "_bidId": "The id of the bid to cancel."
            }
          },
          "getLoanBorrower(uint256)": {
            "params": {
              "_bidId": "The id of the bid/loan to get the borrower for."
            },
            "returns": {
              "borrower_": "The address of the borrower associated with the bid."
            }
          },
          "getLoanLender(uint256)": {
            "params": {
              "_bidId": "The id of the bid/loan to get the lender for."
            },
            "returns": {
              "lender_": "The address of the lender associated with the bid."
            }
          },
          "getMetadataURI(uint256)": {
            "params": {
              "_bidId": "The id of the bid to return the metadataURI for"
            },
            "returns": {
              "metadataURI_": "The metadataURI for the bid, as a string."
            }
          },
          "hasApprovedMarketForwarder(uint256,address,address)": {
            "params": {
              "_account": "The address to verify set an approval.",
              "_forwarder": "A forwarder contract address.",
              "_marketId": "An ID for a lending market."
            },
            "returns": {
              "_0": "A boolean indicating if an approval was set."
            }
          },
          "initialize(uint16,address,address,address,address[],address,address)": {
            "params": {
              "_collateralManagerAddress": "The address of the collateral manager contracts.",
              "_lenderCommitmentForwarder": "The address of the lender commitment forwarder contract.",
              "_lenderManager": "The address of the lender manager contract for loans on the protocol.",
              "_lendingTokens": "The list of tokens allowed as lending assets on the protocol.",
              "_marketRegistry": "The address of the market registry contract for the protocol.",
              "_protocolFee": "The fee collected by the protocol for loan processing.",
              "_reputationManager": "The address of the reputation manager contract."
            }
          },
          "isLoanDefaulted(uint256)": {
            "params": {
              "_bidId": "The id of the loan bid to check for."
            }
          },
          "isLoanExpired(uint256)": {
            "params": {
              "_bidId": "The id of the loan bid to check for."
            }
          },
          "isPaymentLate(uint256)": {
            "params": {
              "_bidId": "The id of the loan bid to check for."
            }
          },
          "isTrustedMarketForwarder(uint256,address)": {
            "params": {
              "_marketId": "An ID for a lending market.",
              "_trustedMarketForwarder": "An address to check if is a trusted forwarder in the given market."
            },
            "returns": {
              "_0": "A boolean indicating the forwarder address is trusted in a market."
            }
          },
          "lastRepaidTimestamp(uint256)": {
            "params": {
              "_bidId": "The id of the loan bid to get the timestamp for."
            }
          },
          "lenderAcceptBid(uint256)": {
            "params": {
              "_bidId": "The id of the loan bid to accept."
            }
          },
          "liquidateLoanFull(uint256)": {
            "params": {
              "_bidId": "The id of the loan to make the payment towards."
            }
          },
          "marketOwnerCancelBid(uint256)": {
            "params": {
              "_bidId": "The id of the bid to cancel."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "removeLendingToken(address)": {
            "params": {
              "_lendingToken": "The contract address of the lending token."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "repayLoan(uint256,uint256)": {
            "params": {
              "_amount": "The amount of the payment.",
              "_bidId": "The id of the loan to make the payment towards."
            }
          },
          "repayLoanFull(uint256)": {
            "params": {
              "_bidId": "The id of the loan to make the payment towards."
            }
          },
          "repayLoanMinimum(uint256)": {
            "params": {
              "_bidId": "The id of the loan to make the payment towards."
            }
          },
          "setProtocolFee(uint16)": {
            "params": {
              "newFee": "The new protocol fee to be set."
            }
          },
          "setReputationManager(address)": {
            "params": {
              "_reputationManager": "The new contract address."
            }
          },
          "setTrustedMarketForwarder(uint256,address)": {
            "params": {
              "_forwarder": "A forwarder contract address.",
              "_marketId": "An ID for a lending market."
            }
          },
          "submitBid(address,uint256,uint256,uint32,uint16,string,address)": {
            "params": {
              "_APR": "The proposed interest rate for the loan bid.",
              "_duration": "The recurrent length of time before which a payment is due.",
              "_lendingToken": "The lending token asset requested to be borrowed.",
              "_marketplaceId": "The unique id of the marketplace for the bid.",
              "_metadataURI": "The URI for additional borrower loan information as part of loan bid.",
              "_principal": "The principal amount of the loan bid.",
              "_receiver": "The address where the loan amount will be sent to."
            }
          },
          "submitBid(address,uint256,uint256,uint32,uint16,string,address,(uint8,uint256,uint256,address)[])": {
            "params": {
              "_APR": "The proposed interest rate for the loan bid.",
              "_collateralInfo": "Additional information about the collateral asset.",
              "_duration": "The recurrent length of time before which a payment is due.",
              "_lendingToken": "The lending token asset requested to be borrowed.",
              "_marketplaceId": "The unique id of the marketplace for the bid.",
              "_metadataURI": "The URI for additional borrower loan information as part of loan bid.",
              "_principal": "The principal amount of the loan bid.",
              "_receiver": "The address where the loan amount will be sent to."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CURRENT_CODE_VERSION()": {
            "notice": "Constant Variables *"
          },
          "addLendingToken(address)": {
            "notice": "Lets the DAO/owner of the protocol add an authorized lending token."
          },
          "approveMarketForwarder(uint256,address)": {
            "notice": "Approves a forwarder contract to use their address as a sender for a specific market.The forwarder given must be trusted by the market given."
          },
          "bidId()": {
            "notice": "Storage Variables "
          },
          "calculateAmountDue(uint256)": {
            "notice": "Calculates the minimum payment amount due for a loan."
          },
          "calculateAmountDue(uint256,uint256)": {
            "notice": "Calculates the minimum payment amount due for a loan at a specific timestamp."
          },
          "calculateAmountOwed(uint256)": {
            "notice": "Calculates the total amount owed for a bid."
          },
          "calculateAmountOwed(uint256,uint256)": {
            "notice": "Calculates the total amount owed for a loan bid at a specific timestamp."
          },
          "calculateNextDueDate(uint256)": {
            "notice": "Returns the next due date for a loan payment."
          },
          "cancelBid(uint256)": {
            "notice": "Function for a borrower to cancel their pending bid."
          },
          "getLendingTokens()": {
            "notice": "Returns the list of authorized tokens on the protocol."
          },
          "getLoanBorrower(uint256)": {
            "notice": "Returns the borrower address for a given bid."
          },
          "getLoanLender(uint256)": {
            "notice": "Returns the lender address for a given bid. If the stored lender address is the `LenderManager` NFT address, return the `ownerOf` for the bid ID."
          },
          "getMetadataURI(uint256)": {
            "notice": "Gets the metadataURI for a bidId."
          },
          "hasApprovedMarketForwarder(uint256,address,address)": {
            "notice": "Checks if an account has approved a forwarder for a market."
          },
          "initialize(uint16,address,address,address,address[],address,address)": {
            "notice": "Initializes the proxy."
          },
          "isLoanDefaulted(uint256)": {
            "notice": "Checks to see if a borrower is delinquent."
          },
          "isLoanExpired(uint256)": {
            "notice": "Checks to see if a pending loan has expired so it is no longer able to be accepted."
          },
          "isPaymentLate(uint256)": {
            "notice": "Checks to see if a borrower is delinquent."
          },
          "isTrustedMarketForwarder(uint256,address)": {
            "notice": "Checks if an address is a trusted forwarder contract for a given market."
          },
          "lastRepaidTimestamp(uint256)": {
            "notice": "Returns the last repaid timestamp for a loan."
          },
          "lenderAcceptBid(uint256)": {
            "notice": "Function for a lender to accept a proposed loan bid."
          },
          "liquidateLoanFull(uint256)": {
            "notice": "Function for users to liquidate a defaulted loan."
          },
          "marketOwnerCancelBid(uint256)": {
            "notice": "Function for a market owner to cancel a bid in the market."
          },
          "pauseProtocol()": {
            "notice": "Lets the DAO/owner of the protocol implement an emergency stop mechanism."
          },
          "protocolFee()": {
            "notice": "Returns the current protocol fee."
          },
          "removeLendingToken(address)": {
            "notice": "Lets the DAO/owner of the protocol remove an authorized lending token."
          },
          "repayLoan(uint256,uint256)": {
            "notice": "Function for users to make a payment towards an active loan."
          },
          "repayLoanFull(uint256)": {
            "notice": "Function for users to repay an active loan in full."
          },
          "repayLoanMinimum(uint256)": {
            "notice": "Function for users to make the minimum amount due for an active loan."
          },
          "setProtocolFee(uint16)": {
            "notice": "Lets the DAO/owner of the protocol to set a new protocol fee."
          },
          "setReputationManager(address)": {
            "notice": "Lets the DAO/owner of the protocol to set a new reputation manager contract."
          },
          "setTrustedMarketForwarder(uint256,address)": {
            "notice": "Sets a trusted forwarder for a lending market.The caller must owner the market given. See {MarketRegistry}"
          },
          "submitBid(address,uint256,uint256,uint32,uint16,string,address)": {
            "notice": "Function for a borrower to create a bid for a loan without Collateral."
          },
          "submitBid(address,uint256,uint256,uint32,uint16,string,address,(uint8,uint256,uint256,address)[])": {
            "notice": "Function for a borrower to create a bid for a loan with Collateral."
          },
          "unpauseProtocol()": {
            "notice": "Lets the DAO/owner of the protocol undo a previously implemented emergency stop."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@mangrovedao/=node_modules/@mangrovedao/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "tests/NextDueDate_test.sol": "NextDueDate_Test"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/EAS/TellerAS.sol": {
        "keccak256": "0x01848d2b9b7815144137d3ad654ac3246dd740f03e9e951ecf70374d71f8e354",
        "urls": [
          "bzz-raw://18ac37f315357b8ae3da92f2c5a71dfe3619bf8a2c0c4fc5f66e1f058ee0cdb7",
          "dweb:/ipfs/QmbsDurxc5zdYUtMTb4Hz3M629cLA21HnQGQYD1KRTk8Qs"
        ],
        "license": "MIT"
      },
      "contracts/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xca6e53699cb6e4001eff7527dc3fcea591be3b04514ab899933fc0f107de4933",
        "urls": [
          "bzz-raw://66297aa8ca1f16c511b761f5060333780478578bf866a7c8f90af2c44b4dfcdd",
          "dweb:/ipfs/QmcxadMsCeUAb2nkspETvEFGUDCWhvnaFpECogUtJKLvbB"
        ],
        "license": "MIT"
      },
      "contracts/ProtocolFee.sol": {
        "keccak256": "0x8a4fbca87131233a11efc1c5006a9b9d5ea45b82078c85726ce9e07ef13e2893",
        "urls": [
          "bzz-raw://158488abd8c3e29e1d4f83173120a3d808a38f330067d94852df767ef00b4acf",
          "dweb:/ipfs/QmRc4iCqThiNT2uptvpHZPV5WCbgD5X86Ty1AfSyim2B2V"
        ],
        "license": "MIT"
      },
      "contracts/TellerV2.sol": {
        "keccak256": "0x060be1606b108073edf88ac713495f31b98fe6f793fba9d3e3491da2a06bae36",
        "urls": [
          "bzz-raw://8a8e1b099502556969025c504cad8ee78777d15680592fc375ca8e1c80359b57",
          "dweb:/ipfs/QmepjDUsGJKYmC6m7jy2RWSLAMouTnLPvK1kdHtgbuh465"
        ],
        "license": "MIT"
      },
      "contracts/TellerV2Context.sol": {
        "keccak256": "0xac04758cc31571352e976d2b33e660d8161176fdf712c76049fb1eda2289f551",
        "urls": [
          "bzz-raw://bcfd63c27d26f98b2623eca2c14d817b870f648124d20370eda1e0a032ed9e43",
          "dweb:/ipfs/QmY6aCCsjpGHomnxtrVyLopTBDUzuFisgLiJ6zcy2x68Z9"
        ],
        "license": "MIT"
      },
      "contracts/TellerV2Storage.sol": {
        "keccak256": "0x600fd24b7211e1883081b4389fbc715365afe563a56808f904a83235e6efbe2b",
        "urls": [
          "bzz-raw://87f9f5779acc5cacde04a3bea2d560a526df9a183079dca5e7ce53158d7217f9",
          "dweb:/ipfs/QmfVwkUZTaZYryw49bDgehFWjCoXQAJBUYBkD66AVGBbfN"
        ],
        "license": "MIT"
      },
      "contracts/Types.sol": {
        "keccak256": "0x2e4bcf4a965f840193af8729251386c1826cd050411ba4a9e85984a2551fd2ff",
        "urls": [
          "bzz-raw://cbab8d73d76e1aa1eaead6a911d5a35f7edb18f9c67484c08bfaa96d4e3e1d68",
          "dweb:/ipfs/QmVxRujQoBdZEote43JdaAgXkYzfqFdBbiu7rPYU3rXf2N"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IASRegistry.sol": {
        "keccak256": "0x74752921f592df45c8717d7084627e823b1dbc93bad7187cd3023c9690df7e60",
        "urls": [
          "bzz-raw://14ed67b4973bd1b2797604cfd652387bbe230682f3f5a41e922879a0f4d5b668",
          "dweb:/ipfs/QmTJ5fvKX7deAQ8YpoPmwyVR379BdfbKSzaHSLoje7h5Tx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IASResolver.sol": {
        "keccak256": "0xfce671ea099d9f997a69c3447eb4a9c9693d37c5b97e43ada376e614e1c7cb61",
        "urls": [
          "bzz-raw://6673f2ba98aafbeb4bdbfbc2392b164a7ae4e82b8b8a5f5b9b484fbdf4653cc1",
          "dweb:/ipfs/QmVSkwZpHzgpTyzcydE8SptJiGRvK89KahhxBuwNZNm8d2"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICollateralManager.sol": {
        "keccak256": "0x549d37cb1390adad543f2e7b1ad46104c4326c4af7dbccda35116833103a6465",
        "urls": [
          "bzz-raw://ccadec56789cef8cd1c1467a25bf51f53cff652be7c04694643fad9af0cf4772",
          "dweb:/ipfs/QmRnx4QyayDXaYSzAMUh9TUG7WMvBBTjYD9yfJ34qRWknq"
        ],
        "license": null
      },
      "contracts/interfaces/IEAS.sol": {
        "keccak256": "0x5db90829269f806ed14a6c638f38d4aac1fa0f85829b34a2fcddd5200261c148",
        "urls": [
          "bzz-raw://7e82edf58a6332d6966f860d847329cb7d7b51f8c30942ba55e31bf26c39f8b5",
          "dweb:/ipfs/QmZYqmByHpugi3YD6ngTfD2ViW2GFYywfzq3BJjifADpWc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IEASEIP712Verifier.sol": {
        "keccak256": "0xeca3ac3bacec52af15b2c86c5bf1a1be315aade51fa86f95da2b426b28486b1e",
        "urls": [
          "bzz-raw://5e3d65dfbe36cc3718f5472061d283bf53ce920b929ed1a3cbab7c7129b7fe9d",
          "dweb:/ipfs/QmPDqoVWC95KkxoWeq4sreQYA2ELsMPhowi7eunU8c6qjW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILenderManager.sol": {
        "keccak256": "0xceb1ea2ef4c6e2ad7986db84de49c959e8d59844563d27daca5b8d78b732a8f7",
        "urls": [
          "bzz-raw://74c1997731854ff95ffcfe0a6fee9c12da3ccfc422650e9107830347317d950e",
          "dweb:/ipfs/Qmc9Y9Exop9ZNfX3QDRK6ev4nEVLDrdaCUMtNGm8fMUREd"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IMarketRegistry.sol": {
        "keccak256": "0x7209557aa8e3ddd81d0b863a8c063520a0011d96e1b3690a322f3371468f6dc6",
        "urls": [
          "bzz-raw://ba66c3c76306b24f4f5f31854d3fd92741eda12ee05f12ddc60c0031d545d502",
          "dweb:/ipfs/QmToDeLtPzo6hbxaoYg3zjwVnAox6CtDGhoSVecX6c45yC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReputationManager.sol": {
        "keccak256": "0x8d6e50fd460912231e53135b4459aa2f6f16007ae8deb32bc2cee1e88311a8d8",
        "urls": [
          "bzz-raw://03916311f51b553acf71bad455de12f056d367b5fe2ba5ad1caa74fabd3315d0",
          "dweb:/ipfs/QmXnPx58qKBv5mCuUWP2AemjKsQWzGY1nMemS5NoJQ35NK"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ITellerV2.sol": {
        "keccak256": "0x62c61e6811becc51d0d644e54c342279565e9d8ff5a386cde5a784440a404da7",
        "urls": [
          "bzz-raw://d886317b83a41a1e8a298c5befb11ca7a5fd3c59df54ecab0c8696b945b3e84a",
          "dweb:/ipfs/QmNikGpckv9PXpxQU1ewnAapD7URV2CAAozw8r8wtZvjwe"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/escrow/ICollateralEscrowV1.sol": {
        "keccak256": "0xefb7928c982f328c8df17f736b2c542df12f6c5b326933076faaae970ae49fa8",
        "urls": [
          "bzz-raw://17fede8e6395ba154eff4e21bd16701d08d036b2287d74983f8d992019241ef5",
          "dweb:/ipfs/QmUBCQhUVsfp1zFoTg6dVyrGjU85uhM7F3FPD1vXbzC7ge"
        ],
        "license": null
      },
      "contracts/libraries/DateTimeLib.sol": {
        "keccak256": "0xf194df8ea9946a5bb3300223629b7e4959c1f20bacba27b3dc5f6dd2a160147a",
        "urls": [
          "bzz-raw://8860a1dadb201e8997ceda121019f685c4ee6a64e24ef06b008520b442b1f323",
          "dweb:/ipfs/QmYrnjEw3LSwDrdEoHHSVUtH7ww1CiVEnXwowFG8xMyZ7q"
        ],
        "license": "MIT"
      },
      "contracts/libraries/NumbersLib.sol": {
        "keccak256": "0x78009ffb3737ab7615a1e38a26635d6c06b65b7b7959af46d6ef840d220e70cf",
        "urls": [
          "bzz-raw://589ed65f671f403e82c6bc3d8818b972034fdd954e29f24e19520450221cc95e",
          "dweb:/ipfs/QmWiHoGhZqXZr7HEx5LqmEc4w3Xvg452RtVKiGLtmWYV4Q"
        ],
        "license": "MIT"
      },
      "contracts/libraries/V2Calculations.sol": {
        "keccak256": "0xcb9f3cb8f8800aa321690418467da8dc40ff115b7697374e5c4364e4c7b2d759",
        "urls": [
          "bzz-raw://4e86310f871949211747a3c40e02e421ea61d2365246d821b5a34fef7ffd5ece",
          "dweb:/ipfs/QmbGrHbZ1pnPbo1MjYvZaj7X4AuCKvFbWnyjj5nXYUu9y6"
        ],
        "license": "MIT"
      },
      "contracts/libraries/WadRayMath.sol": {
        "keccak256": "0x2781319be7a96f56966c601c061849fa94dbf9af5ad80a20c40b879a8d03f14a",
        "urls": [
          "bzz-raw://267426cb6b8ef332bc61bd66a2e82ad60710fefbac46c55d7c7e4104dd2297f1",
          "dweb:/ipfs/QmazyCfuGn2amqnPU5Az1eRARbnGZGav3t5veQAjjLH8gK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9",
        "urls": [
          "bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c",
          "dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf1076813373cbd519d03411288590a8d9729592934718b0f6b54ca281c855dd7",
        "urls": [
          "bzz-raw://9cc7c5c97c15c4adb648fbc35d4909f81b09e52410ffb4e8010a0f1e272a7fb5",
          "dweb:/ipfs/QmV3oNjq9tZmQBZMtaEEwaXdfcNSzu8KhupXEzcZ3BHMsc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xe3955cfd5a73fbf56acf7a7709cc9db1dfdd70e6a969bb6b19106de6f1049b4c",
        "urls": [
          "bzz-raw://f30db8c85f6a04f5433d876859c89e51ecbea5ef6cdcadd5f2a342f216e6f6a9",
          "dweb:/ipfs/QmUm6cbRKtYcSSH2uib2f2aJ5qd6wBzkQUbPTP7jKW2Ayz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a",
        "urls": [
          "bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3",
          "dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229",
        "urls": [
          "bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195",
          "dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "tests/NextDueDate_test.sol": {
        "keccak256": "0xc666cbbb6ce66fa3f648d52fc04c0a72860a994d2e82769549fd056ae461a712",
        "urls": [
          "bzz-raw://f2f0b699ddb266ff27613091a9afa133fdf5b40f89051ecc279034247b090303",
          "dweb:/ipfs/QmTLDymWLbTG1k7Z92TjstXit7n9bJuDXnbPNx8yyy3xqE"
        ],
        "license": "MIT"
      },
      "tests/Testable.sol": {
        "keccak256": "0x9de2783fbe8f7ce48d88cf052e4fb9774e6d44cac1de5cdb6f3889d7d2ce4474",
        "urls": [
          "bzz-raw://3c42c7a748363a7a34c08ebda6a70a3d3c59828bc87651c6238cccb9eefcfd68",
          "dweb:/ipfs/Qmc1LnQMXXJL9SCTnEPu63kRXjCTMg8D72UTAxVzMB2xfW"
        ],
        "license": "MIT"
      },
      "tests/util/FoundryTest.sol": {
        "keccak256": "0xdb8ac66b6e0650cf9c6f10a8949bb53f24482af3bb18dfb97368fae12fdf45f9",
        "urls": [
          "bzz-raw://863071d99087fad831eb89fbfdf46b0591a75639a9c98047c521a691036a5493",
          "dweb:/ipfs/Qmc5oRMK1tQvvt5bfzJhGrLyjVXYZ2gp46rEeVnR6BHkGc"
        ],
        "license": "MIT"
      },
      "tests/util/StdChains.sol": {
        "keccak256": "0xfd91ae9acfb0104800a67ab316be4274572a25521e0a98a247eb158933ba953b",
        "urls": [
          "bzz-raw://961975fca13be85b2b76234f24a954391069c5ecab444977c506f3655c6d4a35",
          "dweb:/ipfs/QmRbkn8RouoP6TUTU85pru27vMVsvwKLqPM8vERNN64yTx"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "tests/NextDueDate_test.sol",
    "id": 61144,
    "exportedSymbols": {
      "ActionNotAllowed": [
        5566
      ],
      "Address": [
        46354
      ],
      "AddressUpgradeable": [
        41826
      ],
      "BPBDTL": [
        11622
      ],
      "Bid": [
        8550
      ],
      "BidState": [
        8522
      ],
      "Collateral": [
        10080
      ],
      "Context": [
        46532
      ],
      "ContextUpgradeable": [
        41868
      ],
      "DSTest": [
        15279
      ],
      "EMPTY_UUID": [
        8675
      ],
      "ERC20": [
        45488
      ],
      "ERC2771ContextUpgradeable": [
        2134
      ],
      "EnumerableSet": [
        49935
      ],
      "IASRegistry": [
        9197
      ],
      "IASResolver": [
        9223
      ],
      "ICollateralManager": [
        9311
      ],
      "IEAS": [
        9563
      ],
      "IEASEIP712Verifier": [
        9611
      ],
      "IERC165Upgradeable": [
        42610
      ],
      "IERC20": [
        45566
      ],
      "IERC20Metadata": [
        45591
      ],
      "IERC20Permit": [
        45627
      ],
      "IERC721Upgradeable": [
        41515
      ],
      "ILenderManager": [
        9625
      ],
      "IMarketRegistry": [
        9775
      ],
      "IReputationManager": [
        9834
      ],
      "ITellerV2": [
        9988
      ],
      "Initializable": [
        39742
      ],
      "LoanDetails": [
        8567
      ],
      "Math": [
        47469
      ],
      "MathUpgradeable": [
        43475
      ],
      "NextDueDate_Test": [
        61143
      ],
      "NumbersLib": [
        11861
      ],
      "OwnableUpgradeable": [
        39385
      ],
      "PausableUpgradeable": [
        39869
      ],
      "Payment": [
        8527
      ],
      "PaymentCycleType": [
        11873
      ],
      "PaymentNotMinimum": [
        5575
      ],
      "PaymentType": [
        11870
      ],
      "ProtocolFee": [
        5169
      ],
      "RepMark": [
        9781
      ],
      "SafeCast": [
        49010
      ],
      "SafeERC20": [
        45908
      ],
      "SafeMath": [
        49322
      ],
      "StdAssertions": [
        16585
      ],
      "StdChains": [
        65381
      ],
      "StdCheats": [
        18546
      ],
      "StdStorage": [
        19453
      ],
      "StdUtils": [
        21640
      ],
      "StringsUpgradeable": [
        42043
      ],
      "TellerAS": [
        2022
      ],
      "TellerV2": [
        7763
      ],
      "TellerV2Context": [
        8258
      ],
      "TellerV2Storage": [
        8670
      ],
      "TellerV2Storage_G0": [
        8633
      ],
      "TellerV2Storage_G1": [
        8645
      ],
      "TellerV2Storage_G2": [
        8650
      ],
      "TellerV2Storage_G3": [
        8656
      ],
      "TellerV2Storage_G4": [
        8667
      ],
      "Terms": [
        8574
      ],
      "Test": [
        64717
      ],
      "TestBase": [
        15339
      ],
      "Testable": [
        63246
      ],
      "V2Calculations": [
        12155
      ],
      "Vm": [
        22930
      ],
      "WadRayMath": [
        12550
      ],
      "console": [
        30994
      ],
      "console2": [
        39090
      ],
      "stdError": [
        18612
      ],
      "stdJson": [
        19279
      ],
      "stdMath": [
        19421
      ],
      "stdStorage": [
        20886
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:2444:102",
    "nodes": [
      {
        "id": 60852,
        "nodeType": "PragmaDirective",
        "src": "0:23:102",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 60853,
        "nodeType": "ImportDirective",
        "src": "59:24:102",
        "nodes": [],
        "absolutePath": "tests/Testable.sol",
        "file": "./Testable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61144,
        "sourceUnit": 63247,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60854,
        "nodeType": "ImportDirective",
        "src": "84:35:102",
        "nodes": [],
        "absolutePath": "contracts/TellerV2.sol",
        "file": "../contracts/TellerV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61144,
        "sourceUnit": 7764,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61143,
        "nodeType": "ContractDefinition",
        "src": "121:2322:102",
        "nodes": [
          {
            "id": 60861,
            "nodeType": "VariableDeclaration",
            "src": "175:9:102",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "__bid",
            "nameLocation": "179:5:102",
            "scope": 61143,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bid_$8550_storage",
              "typeString": "struct Bid"
            },
            "typeName": {
              "id": 60860,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60859,
                "name": "Bid",
                "nameLocations": [
                  "175:3:102"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8550,
                "src": "175:3:102"
              },
              "referencedDeclaration": 8550,
              "src": "175:3:102",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bid_$8550_storage_ptr",
                "typeString": "struct Bid"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 60912,
            "nodeType": "FunctionDefinition",
            "src": "191:302:102",
            "nodes": [],
            "body": {
              "id": 60911,
              "nodeType": "Block",
              "src": "226:267:102",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 60870,
                          "name": "__bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60861,
                          "src": "236:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$8550_storage",
                            "typeString": "struct Bid storage ref"
                          }
                        },
                        "id": 60873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "242:11:102",
                        "memberName": "loanDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8540,
                        "src": "236:17:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanDetails_$8567_storage",
                          "typeString": "struct LoanDetails storage ref"
                        }
                      },
                      "id": 60874,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "254:9:102",
                      "memberName": "principal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8555,
                      "src": "236:27:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030306536",
                      "id": 60875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "266:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "value": "10000e6"
                    },
                    "src": "236:37:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60877,
                  "nodeType": "ExpressionStatement",
                  "src": "236:37:102"
                },
                {
                  "expression": {
                    "id": 60886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 60878,
                          "name": "__bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60861,
                          "src": "295:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$8550_storage",
                            "typeString": "struct Bid storage ref"
                          }
                        },
                        "id": 60881,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "301:11:102",
                        "memberName": "loanDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8540,
                        "src": "295:17:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanDetails_$8567_storage",
                          "typeString": "struct LoanDetails storage ref"
                        }
                      },
                      "id": 60882,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "313:12:102",
                      "memberName": "loanDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8566,
                      "src": "295:30:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_63072000_by_1",
                        "typeString": "int_const 63072000"
                      },
                      "id": 60885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "333635",
                        "id": 60883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "328:8:102",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31536000_by_1",
                          "typeString": "int_const 31536000"
                        },
                        "value": "365"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 60884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "339:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "328:12:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_63072000_by_1",
                        "typeString": "int_const 63072000"
                      }
                    },
                    "src": "295:45:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 60887,
                  "nodeType": "ExpressionStatement",
                  "src": "295:45:102"
                },
                {
                  "expression": {
                    "id": 60894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 60888,
                          "name": "__bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60861,
                          "src": "361:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$8550_storage",
                            "typeString": "struct Bid storage ref"
                          }
                        },
                        "id": 60891,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "367:5:102",
                        "memberName": "terms",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8543,
                        "src": "361:11:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Terms_$8574_storage",
                          "typeString": "struct Terms storage ref"
                        }
                      },
                      "id": 60892,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "373:12:102",
                      "memberName": "paymentCycle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8571,
                      "src": "361:24:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3330",
                      "id": 60893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "388:7:102",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2592000_by_1",
                        "typeString": "int_const 2592000"
                      },
                      "value": "30"
                    },
                    "src": "361:34:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 60895,
                  "nodeType": "ExpressionStatement",
                  "src": "361:34:102"
                },
                {
                  "expression": {
                    "id": 60902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 60896,
                          "name": "__bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60861,
                          "src": "416:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$8550_storage",
                            "typeString": "struct Bid storage ref"
                          }
                        },
                        "id": 60899,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "422:5:102",
                        "memberName": "terms",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8543,
                        "src": "416:11:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Terms_$8574_storage",
                          "typeString": "struct Terms storage ref"
                        }
                      },
                      "id": 60900,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "428:3:102",
                      "memberName": "APR",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8573,
                      "src": "416:15:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "343530",
                      "id": 60901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "434:3:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_450_by_1",
                        "typeString": "int_const 450"
                      },
                      "value": "450"
                    },
                    "src": "416:21:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 60903,
                  "nodeType": "ExpressionStatement",
                  "src": "416:21:102"
                },
                {
                  "expression": {
                    "id": 60909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 60904,
                        "name": "__bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60861,
                        "src": "455:5:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$8550_storage",
                          "typeString": "struct Bid storage ref"
                        }
                      },
                      "id": 60906,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "461:5:102",
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8546,
                      "src": "455:11:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BidState_$8522",
                        "typeString": "enum BidState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 60907,
                        "name": "BidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8522,
                        "src": "469:8:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BidState_$8522_$",
                          "typeString": "type(enum BidState)"
                        }
                      },
                      "id": 60908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "478:8:102",
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8519,
                      "src": "469:17:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BidState_$8522",
                        "typeString": "enum BidState"
                      }
                    },
                    "src": "455:31:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BidState_$8522",
                      "typeString": "enum BidState"
                    }
                  },
                  "id": 60910,
                  "nodeType": "ExpressionStatement",
                  "src": "455:31:102"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 60866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "222:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 60865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "214:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 60864,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "214:7:102",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 60867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "214:10:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 60868,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 60863,
                  "name": "TellerV2",
                  "nameLocations": [
                    "205:8:102"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7763,
                  "src": "205:8:102"
                },
                "nodeType": "ModifierInvocation",
                "src": "205:20:102"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 60862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:2:102"
            },
            "returnParameters": {
              "id": 60869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:0:102"
            },
            "scope": 61143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60961,
            "nodeType": "FunctionDefinition",
            "src": "499:413:102",
            "nodes": [],
            "body": {
              "id": 60960,
              "nodeType": "Block",
              "src": "537:375:102",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 60915,
                          "name": "__bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60861,
                          "src": "547:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$8550_storage",
                            "typeString": "struct Bid storage ref"
                          }
                        },
                        "id": 60918,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "553:11:102",
                        "memberName": "loanDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8540,
                        "src": "547:17:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanDetails_$8567_storage",
                          "typeString": "struct LoanDetails storage ref"
                        }
                      },
                      "id": 60919,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "565:17:102",
                      "memberName": "acceptedTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8562,
                      "src": "547:35:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "32303230",
                              "id": 60924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "630:4:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2020_by_1",
                                "typeString": "int_const 2020"
                              },
                              "value": "2020"
                            },
                            {
                              "hexValue": "31",
                              "id": 60925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "636:1:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "3331",
                              "id": 60926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "639:2:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_31_by_1",
                                "typeString": "int_const 31"
                              },
                              "value": "31"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2020_by_1",
                                "typeString": "int_const 2020"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_31_by_1",
                                "typeString": "int_const 31"
                              }
                            ],
                            "expression": {
                              "id": 60922,
                              "name": "BPBDTL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11622,
                              "src": "605:6:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_BokkyPooBahsDateTimeLibrary_$11622_$",
                                "typeString": "type(library BokkyPooBahsDateTimeLibrary)"
                              }
                            },
                            "id": 60923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "612:17:102",
                            "memberName": "timestampFromDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10440,
                            "src": "605:24:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 60927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "605:37:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 60921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "585:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 60920,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "585:6:102",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "585:80:102",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "547:118:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 60930,
                  "nodeType": "ExpressionStatement",
                  "src": "547:118:102"
                },
                {
                  "expression": {
                    "id": 60935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60931,
                        "name": "bids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8583,
                        "src": "675:4:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bid_$8550_storage_$",
                          "typeString": "mapping(uint256 => struct Bid storage ref)"
                        }
                      },
                      "id": 60933,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 60932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "680:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "675:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$8550_storage",
                        "typeString": "struct Bid storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60934,
                      "name": "__bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60861,
                      "src": "685:5:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$8550_storage",
                        "typeString": "struct Bid storage ref"
                      }
                    },
                    "src": "675:15:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bid_$8550_storage",
                      "typeString": "struct Bid storage ref"
                    }
                  },
                  "id": 60936,
                  "nodeType": "ExpressionStatement",
                  "src": "675:15:102"
                },
                {
                  "expression": {
                    "id": 60942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60937,
                        "name": "bidPaymentCycleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8666,
                        "src": "700:19:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_PaymentCycleType_$11873_$",
                          "typeString": "mapping(uint256 => enum PaymentCycleType)"
                        }
                      },
                      "id": 60939,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 60938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "720:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "700:22:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                        "typeString": "enum PaymentCycleType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 60940,
                        "name": "PaymentCycleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11873,
                        "src": "725:16:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PaymentCycleType_$11873_$",
                          "typeString": "type(enum PaymentCycleType)"
                        }
                      },
                      "id": 60941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "742:7:102",
                      "memberName": "Monthly",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11872,
                      "src": "725:24:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                        "typeString": "enum PaymentCycleType"
                      }
                    },
                    "src": "700:49:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                      "typeString": "enum PaymentCycleType"
                    }
                  },
                  "id": 60943,
                  "nodeType": "ExpressionStatement",
                  "src": "700:49:102"
                },
                {
                  "assignments": [
                    60945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60945,
                      "mutability": "mutable",
                      "name": "expectedDate",
                      "nameLocation": "803:12:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 60960,
                      "src": "796:19:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 60944,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "796:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60955,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32303230",
                            "id": 60950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "850:4:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2020_by_1",
                              "typeString": "int_const 2020"
                            },
                            "value": "2020"
                          },
                          {
                            "hexValue": "32",
                            "id": 60951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "856:1:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          {
                            "hexValue": "3239",
                            "id": 60952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "859:2:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_29_by_1",
                              "typeString": "int_const 29"
                            },
                            "value": "29"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2020_by_1",
                              "typeString": "int_const 2020"
                            },
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            {
                              "typeIdentifier": "t_rational_29_by_1",
                              "typeString": "int_const 29"
                            }
                          ],
                          "expression": {
                            "id": 60948,
                            "name": "BPBDTL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11622,
                            "src": "825:6:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_BokkyPooBahsDateTimeLibrary_$11622_$",
                              "typeString": "type(library BokkyPooBahsDateTimeLibrary)"
                            }
                          },
                          "id": 60949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "832:17:102",
                          "memberName": "timestampFromDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10440,
                          "src": "825:24:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 60953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "825:37:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "818:6:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 60946,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "818:6:102",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 60954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:45:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "796:67:102"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60957,
                        "name": "expectedDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60945,
                        "src": "892:12:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 60956,
                      "name": "nextDueDate_runner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61142,
                      "src": "873:18:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 60958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:32:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60959,
                  "nodeType": "ExpressionStatement",
                  "src": "873:32:102"
                }
              ]
            },
            "functionSelector": "428406c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_01_nextDueDate",
            "nameLocation": "508:19:102",
            "parameters": {
              "id": 60913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "527:2:102"
            },
            "returnParameters": {
              "id": 60914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:102"
            },
            "scope": 61143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61010,
            "nodeType": "FunctionDefinition",
            "src": "918:402:102",
            "nodes": [],
            "body": {
              "id": 61009,
              "nodeType": "Block",
              "src": "956:364:102",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 60964,
                          "name": "__bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60861,
                          "src": "966:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$8550_storage",
                            "typeString": "struct Bid storage ref"
                          }
                        },
                        "id": 60967,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "972:11:102",
                        "memberName": "loanDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8540,
                        "src": "966:17:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanDetails_$8567_storage",
                          "typeString": "struct LoanDetails storage ref"
                        }
                      },
                      "id": 60968,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "984:17:102",
                      "memberName": "acceptedTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8562,
                      "src": "966:35:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "32303230",
                              "id": 60973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1049:4:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2020_by_1",
                                "typeString": "int_const 2020"
                              },
                              "value": "2020"
                            },
                            {
                              "hexValue": "32",
                              "id": 60974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1055:1:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "3239",
                              "id": 60975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1058:2:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_29_by_1",
                                "typeString": "int_const 29"
                              },
                              "value": "29"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2020_by_1",
                                "typeString": "int_const 2020"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_rational_29_by_1",
                                "typeString": "int_const 29"
                              }
                            ],
                            "expression": {
                              "id": 60971,
                              "name": "BPBDTL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11622,
                              "src": "1024:6:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_BokkyPooBahsDateTimeLibrary_$11622_$",
                                "typeString": "type(library BokkyPooBahsDateTimeLibrary)"
                              }
                            },
                            "id": 60972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1031:17:102",
                            "memberName": "timestampFromDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10440,
                            "src": "1024:24:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 60976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1024:37:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 60970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1004:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 60969,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1004:6:102",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1004:67:102",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "966:105:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 60979,
                  "nodeType": "ExpressionStatement",
                  "src": "966:105:102"
                },
                {
                  "expression": {
                    "id": 60984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60980,
                        "name": "bids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8583,
                        "src": "1081:4:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bid_$8550_storage_$",
                          "typeString": "mapping(uint256 => struct Bid storage ref)"
                        }
                      },
                      "id": 60982,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 60981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1086:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1081:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$8550_storage",
                        "typeString": "struct Bid storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60983,
                      "name": "__bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60861,
                      "src": "1091:5:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$8550_storage",
                        "typeString": "struct Bid storage ref"
                      }
                    },
                    "src": "1081:15:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bid_$8550_storage",
                      "typeString": "struct Bid storage ref"
                    }
                  },
                  "id": 60985,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:15:102"
                },
                {
                  "expression": {
                    "id": 60991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60986,
                        "name": "bidPaymentCycleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8666,
                        "src": "1106:19:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_PaymentCycleType_$11873_$",
                          "typeString": "mapping(uint256 => enum PaymentCycleType)"
                        }
                      },
                      "id": 60988,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 60987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1126:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1106:22:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                        "typeString": "enum PaymentCycleType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 60989,
                        "name": "PaymentCycleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11873,
                        "src": "1131:16:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PaymentCycleType_$11873_$",
                          "typeString": "type(enum PaymentCycleType)"
                        }
                      },
                      "id": 60990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1148:7:102",
                      "memberName": "Monthly",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11872,
                      "src": "1131:24:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                        "typeString": "enum PaymentCycleType"
                      }
                    },
                    "src": "1106:49:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                      "typeString": "enum PaymentCycleType"
                    }
                  },
                  "id": 60992,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:49:102"
                },
                {
                  "assignments": [
                    60994
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60994,
                      "mutability": "mutable",
                      "name": "expectedDate",
                      "nameLocation": "1211:12:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 61009,
                      "src": "1204:19:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 60993,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1204:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61004,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32303230",
                            "id": 60999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1258:4:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2020_by_1",
                              "typeString": "int_const 2020"
                            },
                            "value": "2020"
                          },
                          {
                            "hexValue": "33",
                            "id": 61000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1264:1:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          {
                            "hexValue": "3239",
                            "id": 61001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1267:2:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_29_by_1",
                              "typeString": "int_const 29"
                            },
                            "value": "29"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2020_by_1",
                              "typeString": "int_const 2020"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            {
                              "typeIdentifier": "t_rational_29_by_1",
                              "typeString": "int_const 29"
                            }
                          ],
                          "expression": {
                            "id": 60997,
                            "name": "BPBDTL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11622,
                            "src": "1233:6:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_BokkyPooBahsDateTimeLibrary_$11622_$",
                              "typeString": "type(library BokkyPooBahsDateTimeLibrary)"
                            }
                          },
                          "id": 60998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1240:17:102",
                          "memberName": "timestampFromDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10440,
                          "src": "1233:24:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 61002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1233:37:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1226:6:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 60995,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1226:6:102",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 61003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:45:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1204:67:102"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61006,
                        "name": "expectedDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60994,
                        "src": "1300:12:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 61005,
                      "name": "nextDueDate_runner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61142,
                      "src": "1281:18:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 61007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1281:32:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61008,
                  "nodeType": "ExpressionStatement",
                  "src": "1281:32:102"
                }
              ]
            },
            "functionSelector": "0db7b8b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_02_nextDueDate",
            "nameLocation": "927:19:102",
            "parameters": {
              "id": 60962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:102"
            },
            "returnParameters": {
              "id": 60963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:0:102"
            },
            "scope": 61143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61059,
            "nodeType": "FunctionDefinition",
            "src": "1326:399:102",
            "nodes": [],
            "body": {
              "id": 61058,
              "nodeType": "Block",
              "src": "1364:361:102",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 61013,
                          "name": "__bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60861,
                          "src": "1374:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$8550_storage",
                            "typeString": "struct Bid storage ref"
                          }
                        },
                        "id": 61016,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1380:11:102",
                        "memberName": "loanDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8540,
                        "src": "1374:17:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanDetails_$8567_storage",
                          "typeString": "struct LoanDetails storage ref"
                        }
                      },
                      "id": 61017,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1392:17:102",
                      "memberName": "acceptedTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8562,
                      "src": "1374:35:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "32303233",
                              "id": 61022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1457:4:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2023_by_1",
                                "typeString": "int_const 2023"
                              },
                              "value": "2023"
                            },
                            {
                              "hexValue": "32",
                              "id": 61023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1463:1:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "31",
                              "id": 61024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1466:1:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2023_by_1",
                                "typeString": "int_const 2023"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 61020,
                              "name": "BPBDTL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11622,
                              "src": "1432:6:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_BokkyPooBahsDateTimeLibrary_$11622_$",
                                "typeString": "type(library BokkyPooBahsDateTimeLibrary)"
                              }
                            },
                            "id": 61021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1439:17:102",
                            "memberName": "timestampFromDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10440,
                            "src": "1432:24:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 61025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:36:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 61019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1412:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 61018,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1412:6:102",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 61026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1412:66:102",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1374:104:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 61028,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:104:102"
                },
                {
                  "expression": {
                    "id": 61033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 61029,
                        "name": "bids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8583,
                        "src": "1488:4:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bid_$8550_storage_$",
                          "typeString": "mapping(uint256 => struct Bid storage ref)"
                        }
                      },
                      "id": 61031,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 61030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1493:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1488:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$8550_storage",
                        "typeString": "struct Bid storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61032,
                      "name": "__bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60861,
                      "src": "1498:5:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$8550_storage",
                        "typeString": "struct Bid storage ref"
                      }
                    },
                    "src": "1488:15:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bid_$8550_storage",
                      "typeString": "struct Bid storage ref"
                    }
                  },
                  "id": 61034,
                  "nodeType": "ExpressionStatement",
                  "src": "1488:15:102"
                },
                {
                  "expression": {
                    "id": 61040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 61035,
                        "name": "bidPaymentCycleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8666,
                        "src": "1513:19:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_PaymentCycleType_$11873_$",
                          "typeString": "mapping(uint256 => enum PaymentCycleType)"
                        }
                      },
                      "id": 61037,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 61036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1533:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1513:22:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                        "typeString": "enum PaymentCycleType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 61038,
                        "name": "PaymentCycleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11873,
                        "src": "1538:16:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PaymentCycleType_$11873_$",
                          "typeString": "type(enum PaymentCycleType)"
                        }
                      },
                      "id": 61039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1555:7:102",
                      "memberName": "Monthly",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11872,
                      "src": "1538:24:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                        "typeString": "enum PaymentCycleType"
                      }
                    },
                    "src": "1513:49:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                      "typeString": "enum PaymentCycleType"
                    }
                  },
                  "id": 61041,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:49:102"
                },
                {
                  "assignments": [
                    61043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61043,
                      "mutability": "mutable",
                      "name": "expectedDate",
                      "nameLocation": "1617:12:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 61058,
                      "src": "1610:19:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 61042,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1610:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61053,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32303233",
                            "id": 61048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1664:4:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2023_by_1",
                              "typeString": "int_const 2023"
                            },
                            "value": "2023"
                          },
                          {
                            "hexValue": "33",
                            "id": 61049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1670:1:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          {
                            "hexValue": "31",
                            "id": 61050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1673:1:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2023_by_1",
                              "typeString": "int_const 2023"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 61046,
                            "name": "BPBDTL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11622,
                            "src": "1639:6:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_BokkyPooBahsDateTimeLibrary_$11622_$",
                              "typeString": "type(library BokkyPooBahsDateTimeLibrary)"
                            }
                          },
                          "id": 61047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1646:17:102",
                          "memberName": "timestampFromDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10440,
                          "src": "1639:24:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 61051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1639:36:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1632:6:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 61044,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1632:6:102",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 61052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:44:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1610:66:102"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61055,
                        "name": "expectedDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61043,
                        "src": "1705:12:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 61054,
                      "name": "nextDueDate_runner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61142,
                      "src": "1686:18:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 61056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1686:32:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61057,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:32:102"
                }
              ]
            },
            "functionSelector": "331f3209",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_03_nextDueDate",
            "nameLocation": "1335:19:102",
            "parameters": {
              "id": 61011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1354:2:102"
            },
            "returnParameters": {
              "id": 61012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1364:0:102"
            },
            "scope": 61143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61124,
            "nodeType": "FunctionDefinition",
            "src": "1731:518:102",
            "nodes": [],
            "body": {
              "id": 61123,
              "nodeType": "Block",
              "src": "1769:480:102",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 61062,
                          "name": "__bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60861,
                          "src": "1779:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$8550_storage",
                            "typeString": "struct Bid storage ref"
                          }
                        },
                        "id": 61065,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1785:11:102",
                        "memberName": "loanDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8540,
                        "src": "1779:17:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanDetails_$8567_storage",
                          "typeString": "struct LoanDetails storage ref"
                        }
                      },
                      "id": 61066,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1797:17:102",
                      "memberName": "acceptedTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8562,
                      "src": "1779:35:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "32303233",
                              "id": 61071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1862:4:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2023_by_1",
                                "typeString": "int_const 2023"
                              },
                              "value": "2023"
                            },
                            {
                              "hexValue": "31",
                              "id": 61072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1868:1:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "3331",
                              "id": 61073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1871:2:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_31_by_1",
                                "typeString": "int_const 31"
                              },
                              "value": "31"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2023_by_1",
                                "typeString": "int_const 2023"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_31_by_1",
                                "typeString": "int_const 31"
                              }
                            ],
                            "expression": {
                              "id": 61069,
                              "name": "BPBDTL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11622,
                              "src": "1837:6:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_BokkyPooBahsDateTimeLibrary_$11622_$",
                                "typeString": "type(library BokkyPooBahsDateTimeLibrary)"
                              }
                            },
                            "id": 61070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1844:17:102",
                            "memberName": "timestampFromDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10440,
                            "src": "1837:24:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 61074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1837:37:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 61068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1817:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 61067,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1817:6:102",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 61075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1817:67:102",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1779:105:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 61077,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:105:102"
                },
                {
                  "expression": {
                    "id": 61092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 61078,
                          "name": "__bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60861,
                          "src": "1894:5:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$8550_storage",
                            "typeString": "struct Bid storage ref"
                          }
                        },
                        "id": 61081,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1900:11:102",
                        "memberName": "loanDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8540,
                        "src": "1894:17:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanDetails_$8567_storage",
                          "typeString": "struct LoanDetails storage ref"
                        }
                      },
                      "id": 61082,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1912:19:102",
                      "memberName": "lastRepaidTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8564,
                      "src": "1894:37:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "32303233",
                              "id": 61087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1979:4:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2023_by_1",
                                "typeString": "int_const 2023"
                              },
                              "value": "2023"
                            },
                            {
                              "hexValue": "32",
                              "id": 61088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1985:1:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "31",
                              "id": 61089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1988:1:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2023_by_1",
                                "typeString": "int_const 2023"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 61085,
                              "name": "BPBDTL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11622,
                              "src": "1954:6:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_BokkyPooBahsDateTimeLibrary_$11622_$",
                                "typeString": "type(library BokkyPooBahsDateTimeLibrary)"
                              }
                            },
                            "id": 61086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1961:17:102",
                            "memberName": "timestampFromDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10440,
                            "src": "1954:24:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 61090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1954:36:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 61084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1934:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 61083,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1934:6:102",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 61091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1934:66:102",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1894:106:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 61093,
                  "nodeType": "ExpressionStatement",
                  "src": "1894:106:102"
                },
                {
                  "expression": {
                    "id": 61098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 61094,
                        "name": "bids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8583,
                        "src": "2010:4:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bid_$8550_storage_$",
                          "typeString": "mapping(uint256 => struct Bid storage ref)"
                        }
                      },
                      "id": 61096,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 61095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2015:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2010:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$8550_storage",
                        "typeString": "struct Bid storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61097,
                      "name": "__bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60861,
                      "src": "2020:5:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$8550_storage",
                        "typeString": "struct Bid storage ref"
                      }
                    },
                    "src": "2010:15:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bid_$8550_storage",
                      "typeString": "struct Bid storage ref"
                    }
                  },
                  "id": 61099,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:15:102"
                },
                {
                  "expression": {
                    "id": 61105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 61100,
                        "name": "bidPaymentCycleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8666,
                        "src": "2035:19:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_PaymentCycleType_$11873_$",
                          "typeString": "mapping(uint256 => enum PaymentCycleType)"
                        }
                      },
                      "id": 61102,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 61101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2055:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2035:22:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                        "typeString": "enum PaymentCycleType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 61103,
                        "name": "PaymentCycleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11873,
                        "src": "2060:16:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PaymentCycleType_$11873_$",
                          "typeString": "type(enum PaymentCycleType)"
                        }
                      },
                      "id": 61104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2077:7:102",
                      "memberName": "Monthly",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11872,
                      "src": "2060:24:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                        "typeString": "enum PaymentCycleType"
                      }
                    },
                    "src": "2035:49:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PaymentCycleType_$11873",
                      "typeString": "enum PaymentCycleType"
                    }
                  },
                  "id": 61106,
                  "nodeType": "ExpressionStatement",
                  "src": "2035:49:102"
                },
                {
                  "assignments": [
                    61108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61108,
                      "mutability": "mutable",
                      "name": "expectedDate",
                      "nameLocation": "2140:12:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 61123,
                      "src": "2133:19:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 61107,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2133:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61118,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32303233",
                            "id": 61113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2187:4:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2023_by_1",
                              "typeString": "int_const 2023"
                            },
                            "value": "2023"
                          },
                          {
                            "hexValue": "33",
                            "id": 61114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2193:1:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          {
                            "hexValue": "3331",
                            "id": 61115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2196:2:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31_by_1",
                              "typeString": "int_const 31"
                            },
                            "value": "31"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2023_by_1",
                              "typeString": "int_const 2023"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            {
                              "typeIdentifier": "t_rational_31_by_1",
                              "typeString": "int_const 31"
                            }
                          ],
                          "expression": {
                            "id": 61111,
                            "name": "BPBDTL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11622,
                            "src": "2162:6:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_BokkyPooBahsDateTimeLibrary_$11622_$",
                              "typeString": "type(library BokkyPooBahsDateTimeLibrary)"
                            }
                          },
                          "id": 61112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2169:17:102",
                          "memberName": "timestampFromDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10440,
                          "src": "2162:24:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 61116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2162:37:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2155:6:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 61109,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2155:6:102",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 61117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:45:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2133:67:102"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61120,
                        "name": "expectedDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61108,
                        "src": "2229:12:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 61119,
                      "name": "nextDueDate_runner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61142,
                      "src": "2210:18:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 61121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:32:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61122,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:32:102"
                }
              ]
            },
            "functionSelector": "ee100165",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_04_nextDueDate",
            "nameLocation": "1740:19:102",
            "parameters": {
              "id": 61060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:2:102"
            },
            "returnParameters": {
              "id": 61061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1769:0:102"
            },
            "scope": 61143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61142,
            "nodeType": "FunctionDefinition",
            "src": "2255:186:102",
            "nodes": [],
            "body": {
              "id": 61141,
              "nodeType": "Block",
              "src": "2310:131:102",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61130,
                      "mutability": "mutable",
                      "name": "nextDueDate",
                      "nameLocation": "2328:11:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 61141,
                      "src": "2320:19:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61129,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2320:7:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61134,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 61132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2363:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 61131,
                      "name": "calculateNextDueDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7420,
                      "src": "2342:20:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint32_$",
                        "typeString": "function (uint256) view returns (uint32)"
                      }
                    },
                    "id": 61133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2342:23:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2320:45:102"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61136,
                        "name": "nextDueDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61130,
                        "src": "2384:11:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61137,
                        "name": "_expected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61126,
                        "src": "2397:9:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4e65787420647565206461746520696e636f7272656374",
                        "id": 61138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2408:25:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72585a03078e0c9e20e9ba9f1e9aa1c874d9b2151f1c3e53bc0b39199969931b",
                          "typeString": "literal_string \"Next due date incorrect\""
                        },
                        "value": "Next due date incorrect"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72585a03078e0c9e20e9ba9f1e9aa1c874d9b2151f1c3e53bc0b39199969931b",
                          "typeString": "literal_string \"Next due date incorrect\""
                        }
                      ],
                      "id": 61135,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15470,
                        15495,
                        15508,
                        15524,
                        15566,
                        15608,
                        15650,
                        15687,
                        15724,
                        15761,
                        13813,
                        13838,
                        13868,
                        13893,
                        13952,
                        13977,
                        14007,
                        14032,
                        15132,
                        15167
                      ],
                      "referencedDeclaration": 14032,
                      "src": "2375:8:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 61139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2375:59:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61140,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:59:102"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextDueDate_runner",
            "nameLocation": "2264:18:102",
            "parameters": {
              "id": 61127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61126,
                  "mutability": "mutable",
                  "name": "_expected",
                  "nameLocation": "2291:9:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 61142,
                  "src": "2283:17:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2283:7:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2282:19:102"
            },
            "returnParameters": {
              "id": 61128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2310:0:102"
            },
            "scope": 61143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 60855,
              "name": "Testable",
              "nameLocations": [
                "150:8:102"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63246,
              "src": "150:8:102"
            },
            "id": 60856,
            "nodeType": "InheritanceSpecifier",
            "src": "150:8:102"
          },
          {
            "baseName": {
              "id": 60857,
              "name": "TellerV2",
              "nameLocations": [
                "160:8:102"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7763,
              "src": "160:8:102"
            },
            "id": 60858,
            "nodeType": "InheritanceSpecifier",
            "src": "160:8:102"
          }
        ],
        "canonicalName": "NextDueDate_Test",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          61143,
          7763,
          8258,
          8670,
          8667,
          8656,
          8650,
          8645,
          8633,
          2134,
          39869,
          5169,
          39385,
          41868,
          39742,
          9988,
          63246,
          64717,
          15339,
          15336,
          21640,
          18546,
          18157,
          65381,
          16585,
          15279
        ],
        "name": "NextDueDate_Test",
        "nameLocation": "130:16:102",
        "scope": 61144,
        "usedErrors": [
          5566,
          5575
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 102
}