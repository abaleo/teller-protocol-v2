type Protocol @entity {
  id: ID!

  loans: LoanStatusCount! @derivedFrom(field: "_protocol")
  tokenVolumes: [TokenVolume!]! @derivedFrom(field: "protocol")
}

type MarketPlace @entity {
  id: ID!
  marketplaceId: BigInt!

  owner: Bytes
  feeRecipient: Bytes
  metadataURI: String
  isMarketOpen: Boolean!
  paymentDefaultDuration: BigInt!
  paymentCycleDuration: BigInt!
  paymentCycleType: String!
  paymentType: String!
  bidExpirationTime: BigInt!
  borrowerAttestationRequired: Boolean!
  lenderAttestationRequired: Boolean!
  marketplaceFeePercent: BigInt!

  loans: LoanStatusCount! @derivedFrom(field: "_market")

  tokenVolumes: [MarketVolume!]! @derivedFrom(field: "market")

  totalNumberOfLenders: BigInt!
  lenders: [Lender!]! @derivedFrom(field: "marketplace")

  borrowers: [Borrower!]! @derivedFrom(field: "marketplace")

  commitments: [Commitment!]! @derivedFrom(field: "marketplace")
}

type Bid @entity {
  id: ID!
  bidId: BigInt!
  createdAt: BigInt!
  expiresAt: BigInt!
  updatedAt: BigInt
  transactionHash: String!
  fundedTx: FundedTx @derivedFrom(field: "bid")

  borrowerAddress: Bytes!
  borrower: Borrower!

  receiverAddress: Bytes!

  liquidatorAddress: Bytes

  lenderAddress: Bytes
  lender: Lender

  lendingToken: Token!
  lendingTokenAddress: Bytes!

  marketplaceId: BigInt!
  metadataURI: String!
  status: String!
  principal: BigInt!
  acceptedTimestamp: BigInt!
  lastRepaidTimestamp: BigInt!
  loanDuration: BigInt!
  paymentCycle: BigInt!
  paymentCycleAmount: BigInt!
  apr: BigInt!
  endDate: BigInt
  nextDueDate: BigInt
  marketplace: MarketPlace!
  commitment: Commitment
  commitmentId: String

  payments: [Payment!]! @derivedFrom(field: "bid")
  totalRepaidPrincipal: BigInt!
  totalRepaidInterest: BigInt!
  _lastTotalRepaidAmount: BigInt!
  _lastTotalRepaidInterestAmount: BigInt!
  paymentDefaultDuration: BigInt!
  collateralEscrow: Bytes
  collateral: [Collateral!] @derivedFrom(field: "bid")
}

type Collateral @entity {
  id: ID!
  amount: BigInt!
  tokenId: BigInt!
  type: String
  collateralAddress: Bytes!
  bid: Bid!
  status: String
  receiver: Bytes
}

type FundedTx @entity {
  id: ID!
  bid: Bid!
  timestamp: BigInt!
}

type Payment @entity {
  id: ID!
  bid: Bid!
  principal: BigInt!
  interest: BigInt!
  paymentDate: BigInt!
  outstandingCapital: BigInt!
  status: String!
}

type User @entity {
  id: ID!
  firstInteractionDate: BigInt!
  lenders: [Lender!]! @derivedFrom(field: "user")
  borrowers: [Borrower!]! @derivedFrom(field: "user")
}

type Lender @entity {
  id: ID!
  marketplaceId: BigInt!
  lenderAddress: Bytes!
  firstInteractionDate: BigInt!
  attestedTimestamp: BigInt
  isAttested: Boolean!

  loans: LoanStatusCount! @derivedFrom(field: "_lender")

  tokenVolume: [TokenVolume!] @derivedFrom(field: "lender")
  marketplace: MarketPlace!
  user: User!
  commitment: Commitment
}

type Borrower @entity {
  id: ID!
  marketplaceId: BigInt!
  borrowerAddress: Bytes!
  firstInteractionDate: BigInt!
  attestedTimestamp: BigInt
  isAttested: Boolean!

  loans: LoanStatusCount! @derivedFrom(field: "_borrower")

  tokenVolume: [TokenVolume!] @derivedFrom(field: "borrower")
  marketplace: MarketPlace!
  user: User!
}

interface ILoanStatusCount {
  all: [Bid!]!
  totalCount: BigInt!

  submitted: [Bid!]!
  submittedCount: BigInt!

  expired: [Bid!]!
  expiredCount: BigInt!

  cancelled: [Bid!]!
  cancelledCount: BigInt!

  accepted: [Bid!]!
  acceptedCount: BigInt!

  dueSoon: [Bid!]!
  dueSoonCount: BigInt!

  late: [Bid!]!
  lateCount: BigInt!

  defaulted: [Bid!]!
  defaultedCount: BigInt!

  repaid: [Bid!]!
  repaidCount: BigInt!

  liquidated: [Bid!]!
  liquidatedCount: BigInt!
}

type LoanStatusCount implements ILoanStatusCount @entity {
  id: ID!

  all: [Bid!]!
  totalCount: BigInt!

  submitted: [Bid!]!
  submittedCount: BigInt!

  expired: [Bid!]!
  expiredCount: BigInt!

  cancelled: [Bid!]!
  cancelledCount: BigInt!

  accepted: [Bid!]!
  acceptedCount: BigInt!

  dueSoon: [Bid!]!
  dueSoonCount: BigInt!

  late: [Bid!]!
  lateCount: BigInt!

  defaulted: [Bid!]!
  defaultedCount: BigInt!

  repaid: [Bid!]!
  repaidCount: BigInt!

  liquidated: [Bid!]!
  liquidatedCount: BigInt!

  ## Entity Relationships ##
  _protocol: Protocol
  _market: MarketPlace
  _lender: Lender
  _borrower: Borrower
  _tokenVolume: TokenVolume
  ## end Entity Relationships ##
}

type Token @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: BigInt!
}

type TokenVolume @entity {
  id: ID!

  ## Entity Relationships ##
  protocol: Protocol
  marketplace: MarketPlace
  lender: Lender
  borrower: Borrower
  commitment: Commitment
  ## end Entity Relationships ##

  ## TokenStats ##
  token: Token!
  lendingTokenAddress: Bytes!
  loans: LoanStatusCount! @derivedFrom(field: "_tokenVolume")

  outstandingCapital: BigInt!
  totalLoaned: BigInt!
  loanAverage: BigInt!

  commissionEarned: BigInt!
  totalRepaidInterest: BigInt!

  _aprTotal: BigInt!
  aprAverage: BigInt!

  _durationTotal: BigInt!
  durationAverage: BigInt!

  ## end TokenStats ##
}

type MarketVolume @entity {
  id: ID!
  market: MarketPlace!
  volume: TokenVolume!
}

type Commitment @entity {
  id: ID!
  createdAt: BigInt!

  # Offer
  committedAmount: BigInt! # Max principal
  expirationTimestamp: BigInt!
  maxDuration: BigInt!
  minAPY: BigInt!
  principalTokenAddress: Bytes!

  # Required Collateral
  collateralTokenAddress: Bytes!
  collateralTokenId: BigInt!
  collateralTokenType: String
  maxPrincipalPerCollateralAmount: BigInt!

  commitmentBorrowers: [Bytes!]!

  # Lender
  lender: Lender!
  lenderAddress: Bytes!

  # Market
  marketplace: MarketPlace!
  marketplaceId: BigInt!

  # TokenStats
  stats: TokenVolume!
}
